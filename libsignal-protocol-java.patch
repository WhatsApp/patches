From 47a611c540fd73e90fe27b4d391160331cff6086 Mon Sep 17 00:00:00 2001
From: WhatsApp Security <security@whatsapp.com>
Date: Tue, 4 Sep 2018 15:13:28 -0700
Subject: [PATCH] Changes to libsignal-protocol-java from Open Whisper Systems

diff --git a/java/src/main/java/org/whispersystems/libsignal/kdf/HKDF.java b/java/src/main/java/org/whispersystems/libsignal/kdf/HKDF.java
index 4d7c3bb..b62ddfa 100644
--- a/java/src/main/java/org/whispersystems/libsignal/kdf/HKDF.java
+++ b/java/src/main/java/org/whispersystems/libsignal/kdf/HKDF.java
@@ -35,7 +35,7 @@ public abstract class HKDF {
     return expand(prk, info, outputLength);
   }

-  private byte[] extract(byte[] salt, byte[] inputKeyMaterial) {
+  public byte[] extract(byte[] salt, byte[] inputKeyMaterial) {
     try {
       Mac mac = Mac.getInstance("HmacSHA256");
       mac.init(new SecretKeySpec(salt, "HmacSHA256"));
@@ -45,7 +45,7 @@ public abstract class HKDF {
     }
   }

-  private byte[] expand(byte[] prk, byte[] info, int outputSize) {
+  public byte[] expand(byte[] prk, byte[] info, int outputSize) {
     try {
       int                   iterations     = (int) Math.ceil((double) outputSize / (double) HASH_OUTPUT_SIZE);
       byte[]                mixin          = new byte[0];
---
 .gitignore                                         |    3 +-
 .idea/codeStyleSettings.xml                        |  244 +
 android/build.gradle                               |   85 +-
 build.gradle                                       |    2 +-
 gradle/wrapper/gradle-wrapper.jar                  |  Bin 51010 -> 0 bytes
 gradle/wrapper/gradle-wrapper.properties           |    6 -
 gradlew                                            |  164 -
 gradlew.bat                                        |   90 -
 java/build.gradle                                  |   57 +-
 .../libsignal/fingerprint/FingerprintProtos.java   |  513 +-
 .../libsignal/groups/FastRatchetGroupCipher.java   |  205 +
 .../groups/FastRatchetGroupSessionBuilder.java     |  104 +
 .../libsignal/groups/GroupCipher.java              |   12 +-
 .../groups/ratchet/FastRatchetSenderChainKey.java  |  175 +
 .../groups/state/FastRatchetSenderKeyRecord.java   |   82 +
 .../groups/state/FastRatchetSenderKeyState.java    |  112 +
 .../groups/state/FastRatchetSenderKeyStore.java    |   37 +
 .../libsignal/groups/state/SenderKeyState.java     |    9 +-
 .../libsignal/protocol/CiphertextMessage.java      |    9 +-
 .../FastRatchetSenderKeyDistributionMessage.java   |  114 +
 .../libsignal/protocol/SignalProtos.java           | 1683 +++---
 .../libsignal/state/StorageProtos.java             | 5371 ++++++++------------
 .../libsignal/util/FastRatchetUtil.java            |   79 +
 protobuf/FingerprintProtocol.proto                 |    1 +
 protobuf/LocalStorageProtocol.proto                |   11 +
 protobuf/WhisperTextProtocol.proto                 |    8 +
 settings.gradle                                    |    2 +-
 tests/build.gradle                                 |    6 +-
 .../groups/FastRatchetGroupCipherTest.java         |  587 +++
 .../libsignal/groups/GroupCipherTest.java          |   38 +-
 .../groups/InMemoryFastRatchetSenderKeyStore.java  |   33 +
 .../libsignal/util/FastRatchetUtilTest.java        |   60 +
 32 files changed, 5139 insertions(+), 4763 deletions(-)
 create mode 100644 .idea/codeStyleSettings.xml
 delete mode 100644 gradle/wrapper/gradle-wrapper.jar
 delete mode 100644 gradle/wrapper/gradle-wrapper.properties
 delete mode 100755 gradlew
 delete mode 100644 gradlew.bat
 create mode 100644 java/src/main/java/org/whispersystems/libsignal/groups/FastRatchetGroupCipher.java
 create mode 100644 java/src/main/java/org/whispersystems/libsignal/groups/FastRatchetGroupSessionBuilder.java
 create mode 100644 java/src/main/java/org/whispersystems/libsignal/groups/ratchet/FastRatchetSenderChainKey.java
 create mode 100644 java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyRecord.java
 create mode 100644 java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyState.java
 create mode 100644 java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyStore.java
 create mode 100644 java/src/main/java/org/whispersystems/libsignal/protocol/FastRatchetSenderKeyDistributionMessage.java
 create mode 100644 java/src/main/java/org/whispersystems/libsignal/util/FastRatchetUtil.java
 create mode 100644 tests/src/test/java/org/whispersystems/libsignal/groups/FastRatchetGroupCipherTest.java
 create mode 100644 tests/src/test/java/org/whispersystems/libsignal/groups/InMemoryFastRatchetSenderKeyStore.java
 create mode 100644 tests/src/test/java/org/whispersystems/libsignal/util/FastRatchetUtilTest.java

diff --git a/.gitignore b/.gitignore
index b7e3f28..3e03bfd 100644
--- a/.gitignore
+++ b/.gitignore
@@ -2,6 +2,7 @@ build
 /obj
 *.iml
 .gradle
-.idea
+/.idea/**
+!/.idea/codeStyleSettings.xml
 gradle.properties
 local.properties
diff --git a/.idea/codeStyleSettings.xml b/.idea/codeStyleSettings.xml
new file mode 100644
index 0000000..7b1ca24
--- /dev/null
+++ b/.idea/codeStyleSettings.xml
@@ -0,0 +1,244 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectCodeStyleSettingsManager">
+    <option name="PER_PROJECT_SETTINGS">
+      <value>
+        <option name="CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND" value="99" />
+        <option name="NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND" value="99" />
+        <option name="PACKAGES_TO_USE_IMPORT_ON_DEMAND">
+          <value />
+        </option>
+        <option name="IMPORT_LAYOUT_TABLE">
+          <value>
+            <package name="android" withSubpackages="true" static="false" />
+            <emptyLine />
+            <package name="com" withSubpackages="true" static="false" />
+            <emptyLine />
+            <package name="junit" withSubpackages="true" static="false" />
+            <emptyLine />
+            <package name="net" withSubpackages="true" static="false" />
+            <emptyLine />
+            <package name="org" withSubpackages="true" static="false" />
+            <emptyLine />
+            <package name="java" withSubpackages="true" static="false" />
+            <emptyLine />
+            <package name="javax" withSubpackages="true" static="false" />
+            <emptyLine />
+            <package name="" withSubpackages="true" static="false" />
+            <emptyLine />
+            <package name="" withSubpackages="true" static="true" />
+            <emptyLine />
+          </value>
+        </option>
+        <option name="RIGHT_MARGIN" value="100" />
+        <option name="JD_P_AT_EMPTY_LINES" value="false" />
+        <AndroidXmlCodeStyleSettings>
+          <option name="USE_CUSTOM_SETTINGS" value="true" />
+        </AndroidXmlCodeStyleSettings>
+        <Objective-C-extensions>
+          <option name="GENERATE_INSTANCE_VARIABLES_FOR_PROPERTIES" value="ASK" />
+          <option name="RELEASE_STYLE" value="IVAR" />
+          <option name="TYPE_QUALIFIERS_PLACEMENT" value="BEFORE" />
+          <file>
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Import" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Macro" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Typedef" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Enum" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Constant" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Global" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Struct" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="FunctionPredecl" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Function" />
+          </file>
+          <class>
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Property" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="Synthesize" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="InitMethod" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="StaticMethod" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="InstanceMethod" />
+            <option name="com.jetbrains.cidr.lang.util.OCDeclarationKind" value="DeallocMethod" />
+          </class>
+          <extensions>
+            <pair source="cpp" header="h" />
+            <pair source="c" header="h" />
+          </extensions>
+        </Objective-C-extensions>
+        <XML>
+          <option name="XML_LEGACY_SETTINGS_IMPORTED" value="true" />
+        </XML>
+        <codeStyleSettings language="JAVA">
+          <option name="BRACE_STYLE" value="5" />
+          <option name="METHOD_BRACE_STYLE" value="5" />
+          <option name="ALIGN_MULTILINE_CHAINED_METHODS" value="true" />
+          <option name="ALIGN_MULTILINE_PARAMETERS_IN_CALLS" value="true" />
+          <option name="ALIGN_GROUP_FIELD_DECLARATIONS" value="true" />
+          <option name="ALIGN_CONSECUTIVE_VARIABLE_DECLARATIONS" value="true" />
+          <option name="SPACE_BEFORE_ARRAY_INITIALIZER_LBRACE" value="true" />
+          <indentOptions>
+            <option name="INDENT_SIZE" value="2" />
+            <option name="CONTINUATION_INDENT_SIZE" value="4" />
+            <option name="TAB_SIZE" value="2" />
+          </indentOptions>
+        </codeStyleSettings>
+        <codeStyleSettings language="XML">
+          <option name="FORCE_REARRANGE_MODE" value="1" />
+          <indentOptions>
+            <option name="CONTINUATION_INDENT_SIZE" value="4" />
+          </indentOptions>
+          <arrangement>
+            <rules>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>xmlns:android</NAME>
+                      <XML_NAMESPACE>^$</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>xmlns:.*</NAME>
+                      <XML_NAMESPACE>^$</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                  <order>BY_NAME</order>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*:id</NAME>
+                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*:name</NAME>
+                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>name</NAME>
+                      <XML_NAMESPACE>^$</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>style</NAME>
+                      <XML_NAMESPACE>^$</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*</NAME>
+                      <XML_NAMESPACE>^$</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                  <order>BY_NAME</order>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*:layout_width</NAME>
+                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*:layout_height</NAME>
+                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*:layout_.*</NAME>
+                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                  <order>BY_NAME</order>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*:width</NAME>
+                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                  <order>BY_NAME</order>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*:height</NAME>
+                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                  <order>BY_NAME</order>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*</NAME>
+                      <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                  <order>BY_NAME</order>
+                </rule>
+              </section>
+              <section>
+                <rule>
+                  <match>
+                    <AND>
+                      <NAME>.*</NAME>
+                      <XML_NAMESPACE>.*</XML_NAMESPACE>
+                    </AND>
+                  </match>
+                  <order>BY_NAME</order>
+                </rule>
+              </section>
+            </rules>
+          </arrangement>
+        </codeStyleSettings>
+      </value>
+    </option>
+    <option name="USE_PER_PROJECT_SETTINGS" value="true" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/android/build.gradle b/android/build.gradle
index 2270358..d70753f 100644
--- a/android/build.gradle
+++ b/android/build.gradle
@@ -1,10 +1,20 @@
 buildscript {
     repositories {
-        jcenter()
+        if (System.getenv('SANDCASTLE') == "1") {
+            maven {
+                url "https://maven.thefacebook.com/nexus/content/repositories/jcenter.bintray.com/"
+            }
+            maven {
+                url "https://maven.thefacebook.com/nexus/content/repositories/maven.google.com/"
+            }
+        } else {
+            jcenter()
+            google()
+        }
     }
 
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.2.0'
+        classpath 'com.android.tools.build:gradle:3.0.1'
     }
 }
 
@@ -17,36 +27,37 @@ version          = version_number
 group            = group_info
 
 android {
-    compileSdkVersion 21
-    buildToolsVersion "21.1.2"
+    buildToolsVersion project.buildToolsVersion
+    compileSdkVersion project.compileSdkVersion
 
     sourceSets {
         androidTest {
-            java.srcDirs = ['src/androidTest/java', project(':tests').file('src/test/java')]
+            if (findProject(':tests')) {
+                java.srcDirs = ['src/androidTest/java', project(':tests').file('src/test/java')]
+            }
         }
     }
 
-    libraryVariants.all { variant ->
-        variant.outputs.each { output ->
-            def outputFile = output.outputFile
-            if (outputFile != null && outputFile.name.endsWith('.aar')) {
-                def fileName = "${archivesBaseName}-${version}.aar"
-                output.outputFile = new File(outputFile.parent, fileName)
-            }
-        }
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
     }
 }
 
 repositories {
-    mavenCentral()
+    if (System.getenv('SANDCASTLE') == "1") {
+        maven {
+            url "http://nexus.vip.facebook.com:8181/nexus/content/groups/public"
+        }
+    } else {
+        mavenCentral()
+    }
     mavenLocal()
 }
 
 dependencies {
-    compile "org.whispersystems:curve25519-android:${curve25519_version}"
-    compile (project(':java')) {
-        exclude group: 'org.whispersystems', module: 'curve25519-java'
-    }
+    implementation project(":curve25519-java:java")
+    implementation project(':libsignal-protocol-java:java')
 }
 
 signing {
@@ -54,44 +65,6 @@ signing {
     sign configurations.archives
 }
 
-uploadArchives {
-    configuration = configurations.archives
-    repositories.mavenDeployer {
-        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-        repository(url: sonatypeRepo) {
-            authentication(userName: whisperSonatypeUsername, password: whisperSonatypePassword)
-        }
-
-        pom.project {
-            name 'signal-protocol-android'
-            packaging 'aar'
-            description 'Signal Protocol cryptography library for Android'
-            url 'https://github.com/WhisperSystems/libsignal-android'
-
-            scm {
-                url 'scm:git@github.com:WhisperSystems/libsignal-android.git'
-                connection 'scm:git@github.com:WhisperSystems/libsignal-android.git'
-                developerConnection 'scm:git@github.com:WhisperSystems/libsignal-android.git'
-            }
-
-            licenses {
-                license {
-                    name 'GPLv3'
-                    url 'https://www.gnu.org/licenses/gpl-3.0.txt'
-                    distribution 'repo'
-                }
-            }
-
-            developers {
-                developer {
-                    name 'Moxie Marlinspike'
-                }
-            }
-        }
-    }
-}
-
 task installArchives(type: Upload) {
     description "Installs the artifacts to the local Maven repository."
     configuration = configurations['archives']
diff --git a/build.gradle b/build.gradle
index 4dfee5d..954cc53 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,7 +1,7 @@
 subprojects {
     ext.version_number     = "2.3.0"
     ext.group_info         = "org.whispersystems"
-    ext.curve25519_version = "0.3.0"
+    ext.curve25519_version = "0.4.1"
 
     if (JavaVersion.current().isJava8Compatible()) {
         allprojects {
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
deleted file mode 100644
index 2322723c7ed5f591adfa4c87b6c51932f591249a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 51010
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
N4`5eiT>tH_{|AO|Su+3t

diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
deleted file mode 100644
index b5ffdfd..0000000
--- a/gradle/wrapper/gradle-wrapper.properties
+++ /dev/null
@@ -1,6 +0,0 @@
-#Mon Oct 17 15:38:50 PDT 2016
-distributionBase=GRADLE_USER_HOME
-distributionPath=wrapper/dists
-zipStoreBase=GRADLE_USER_HOME
-zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.14.1-all.zip
diff --git a/gradlew b/gradlew
deleted file mode 100755
index 91a7e26..0000000
--- a/gradlew
+++ /dev/null
@@ -1,164 +0,0 @@
-#!/usr/bin/env bash
-
-##############################################################################
-##
-##  Gradle start up script for UN*X
-##
-##############################################################################
-
-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
-
-APP_NAME="Gradle"
-APP_BASE_NAME=`basename "$0"`
-
-# Use the maximum available, or set MAX_FD != -1 to use that value.
-MAX_FD="maximum"
-
-warn ( ) {
-    echo "$*"
-}
-
-die ( ) {
-    echo
-    echo "$*"
-    echo
-    exit 1
-}
-
-# OS specific support (must be 'true' or 'false').
-cygwin=false
-msys=false
-darwin=false
-case "`uname`" in
-  CYGWIN* )
-    cygwin=true
-    ;;
-  Darwin* )
-    darwin=true
-    ;;
-  MINGW* )
-    msys=true
-    ;;
-esac
-
-# For Cygwin, ensure paths are in UNIX format before anything is touched.
-if $cygwin ; then
-    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
-fi
-
-# Attempt to set APP_HOME
-# Resolve links: $0 may be a link
-PRG="$0"
-# Need this for relative symlinks.
-while [ -h "$PRG" ] ; do
-    ls=`ls -ld "$PRG"`
-    link=`expr "$ls" : '.*-> \(.*\)$'`
-    if expr "$link" : '/.*' > /dev/null; then
-        PRG="$link"
-    else
-        PRG=`dirname "$PRG"`"/$link"
-    fi
-done
-SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >&-
-APP_HOME="`pwd -P`"
-cd "$SAVED" >&-
-
-CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
-
-# Determine the Java command to use to start the JVM.
-if [ -n "$JAVA_HOME" ] ; then
-    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
-        # IBM's JDK on AIX uses strange locations for the executables
-        JAVACMD="$JAVA_HOME/jre/sh/java"
-    else
-        JAVACMD="$JAVA_HOME/bin/java"
-    fi
-    if [ ! -x "$JAVACMD" ] ; then
-        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
-
-Please set the JAVA_HOME variable in your environment to match the
-location of your Java installation."
-    fi
-else
-    JAVACMD="java"
-    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-
-Please set the JAVA_HOME variable in your environment to match the
-location of your Java installation."
-fi
-
-# Increase the maximum file descriptors if we can.
-if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
-    MAX_FD_LIMIT=`ulimit -H -n`
-    if [ $? -eq 0 ] ; then
-        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
-            MAX_FD="$MAX_FD_LIMIT"
-        fi
-        ulimit -n $MAX_FD
-        if [ $? -ne 0 ] ; then
-            warn "Could not set maximum file descriptor limit: $MAX_FD"
-        fi
-    else
-        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
-    fi
-fi
-
-# For Darwin, add options to specify how the application appears in the dock
-if $darwin; then
-    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
-fi
-
-# For Cygwin, switch paths to Windows format before running java
-if $cygwin ; then
-    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
-    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
-
-    # We build the pattern for arguments to be converted via cygpath
-    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
-    SEP=""
-    for dir in $ROOTDIRSRAW ; do
-        ROOTDIRS="$ROOTDIRS$SEP$dir"
-        SEP="|"
-    done
-    OURCYGPATTERN="(^($ROOTDIRS))"
-    # Add a user-defined pattern to the cygpath arguments
-    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
-        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
-    fi
-    # Now convert the arguments - kludge to limit ourselves to /bin/sh
-    i=0
-    for arg in "$@" ; do
-        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
-        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
-
-        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
-            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
-        else
-            eval `echo args$i`="\"$arg\""
-        fi
-        i=$((i+1))
-    done
-    case $i in
-        (0) set -- ;;
-        (1) set -- "$args0" ;;
-        (2) set -- "$args0" "$args1" ;;
-        (3) set -- "$args0" "$args1" "$args2" ;;
-        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
-        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
-        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
-        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
-        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
-        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
-    esac
-fi
-
-# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
-function splitJvmOpts() {
-    JVM_OPTS=("$@")
-}
-eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
-JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
-
-exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
diff --git a/gradlew.bat b/gradlew.bat
deleted file mode 100644
index aec9973..0000000
--- a/gradlew.bat
+++ /dev/null
@@ -1,90 +0,0 @@
-@if "%DEBUG%" == "" @echo off
-@rem ##########################################################################
-@rem
-@rem  Gradle startup script for Windows
-@rem
-@rem ##########################################################################
-
-@rem Set local scope for the variables with windows NT shell
-if "%OS%"=="Windows_NT" setlocal
-
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
-set DIRNAME=%~dp0
-if "%DIRNAME%" == "" set DIRNAME=.
-set APP_BASE_NAME=%~n0
-set APP_HOME=%DIRNAME%
-
-@rem Find java.exe
-if defined JAVA_HOME goto findJavaFromJavaHome
-
-set JAVA_EXE=java.exe
-%JAVA_EXE% -version >NUL 2>&1
-if "%ERRORLEVEL%" == "0" goto init
-
-echo.
-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:findJavaFromJavaHome
-set JAVA_HOME=%JAVA_HOME:"=%
-set JAVA_EXE=%JAVA_HOME%/bin/java.exe
-
-if exist "%JAVA_EXE%" goto init
-
-echo.
-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:init
-@rem Get command-line arguments, handling Windowz variants
-
-if not "%OS%" == "Windows_NT" goto win9xME_args
-if "%@eval[2+2]" == "4" goto 4NT_args
-
-:win9xME_args
-@rem Slurp the command line arguments.
-set CMD_LINE_ARGS=
-set _SKIP=2
-
-:win9xME_args_slurp
-if "x%~1" == "x" goto execute
-
-set CMD_LINE_ARGS=%*
-goto execute
-
-:4NT_args
-@rem Get arguments from the 4NT Shell from JP Software
-set CMD_LINE_ARGS=%$
-
-:execute
-@rem Setup the command line
-
-set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
-
-@rem Execute Gradle
-"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
-
-:end
-@rem End local scope for the variables with windows NT shell
-if "%ERRORLEVEL%"=="0" goto mainEnd
-
-:fail
-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
-rem the _cmd.exe /c_ return code!
-if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
-exit /b 1
-
-:mainEnd
-if "%OS%"=="Windows_NT" endlocal
-
-:omega
diff --git a/java/build.gradle b/java/build.gradle
index 001c679..cce350b 100644
--- a/java/build.gradle
+++ b/java/build.gradle
@@ -2,29 +2,36 @@ apply plugin: 'java'
 apply plugin: 'maven'
 apply plugin: 'signing'
 
-sourceCompatibility = 1.7
 archivesBaseName = "signal-protocol-java"
 version          = version_number
 group            = group_info
 
 repositories {
-    mavenCentral()
+    if (System.getenv('SANDCASTLE') == "1") {
+        maven {
+            url "http://nexus.vip.facebook.com:8181/nexus/content/groups/public"
+        }
+    } else {
+        mavenCentral()
+    }
     mavenLocal()
 }
 
 sourceSets {
     test {
         java {
-            srcDirs = ['src/test/java/', project(':tests').file('src/test/java')]
+            if (findProject(':tests')) {
+                srcDirs = ['src/test/java/', project(':tests').file('src/test/java')]
+            }
         }
     }
 }
 
 dependencies {
-    compile "org.whispersystems:curve25519-java:${curve25519_version}"
-    compile 'com.google.protobuf:protobuf-java:2.5.0'
+    implementation project(":curve25519-java:java")
+    implementation "com.google.protobuf:protobuf-java:2.6.1"
 
-    testCompile ('junit:junit:3.8.2')
+    testImplementation ('junit:junit:3.8.2')
 }
 
 
@@ -42,44 +49,6 @@ signing {
     sign configurations.archives
 }
 
-uploadArchives {
-    configuration = configurations.archives
-    repositories.mavenDeployer {
-        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-        repository(url: sonatypeRepo) {
-            authentication(userName: whisperSonatypeUsername, password: whisperSonatypePassword)
-        }
-
-        pom.project {
-            name 'signal-protocol-java'
-            packaging 'jar'
-            description 'Signal Protocol cryptography library for Java'
-            url 'https://github.com/WhisperSystems/libsignal-android'
-
-            scm {
-                url 'scm:git@github.com:WhisperSystems/libsignal-android.git'
-                connection 'scm:git@github.com:WhisperSystems/libsignal-android.git'
-                developerConnection 'scm:git@github.com:WhisperSystems/libsignal-android.git'
-            }
-
-            licenses {
-                license {
-                    name 'GPLv3'
-                    url 'https://www.gnu.org/licenses/gpl-3.0.txt'
-                    distribution 'repo'
-                }
-            }
-
-            developers {
-                developer {
-                    name 'Moxie Marlinspike'
-                }
-            }
-        }
-    }
-}
-
 task installArchives(type: Upload) {
     description "Installs the artifacts to the local Maven repository."
     configuration = configurations['archives']
diff --git a/java/src/main/java/org/whispersystems/libsignal/fingerprint/FingerprintProtos.java b/java/src/main/java/org/whispersystems/libsignal/fingerprint/FingerprintProtos.java
index 8c4c5dd..1b5435c 100644
--- a/java/src/main/java/org/whispersystems/libsignal/fingerprint/FingerprintProtos.java
+++ b/java/src/main/java/org/whispersystems/libsignal/fingerprint/FingerprintProtos.java
@@ -6,12 +6,12 @@ package org.whispersystems.libsignal.fingerprint;
 public final class FingerprintProtos {
   private FingerprintProtos() {}
   public static void registerAllExtensions(
-      com.google.protobuf.ExtensionRegistry registry) {
+      com.google.protobuf.ExtensionRegistryLite registry) {
   }
-  public interface FingerprintDataOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface FingerprintDataOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.FingerprintData)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional bytes publicKey = 1;
     /**
      * <code>optional bytes publicKey = 1;</code>
      */
@@ -21,7 +21,6 @@ public final class FingerprintProtos {
      */
     com.google.protobuf.ByteString getPublicKey();
 
-    // optional bytes identifier = 2;
     /**
      * <code>optional bytes identifier = 2;</code>
      */
@@ -35,14 +34,15 @@ public final class FingerprintProtos {
    * Protobuf type {@code textsecure.FingerprintData}
    */
   public static final class FingerprintData extends
-      com.google.protobuf.GeneratedMessage
-      implements FingerprintDataOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.FingerprintData)
+      FingerprintDataOrBuilder {
     // Use FingerprintData.newBuilder() to construct.
-    private FingerprintData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private FingerprintData(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private FingerprintData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private FingerprintData(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final FingerprintData defaultInstance;
     public static FingerprintData getDefaultInstance() {
@@ -53,20 +53,18 @@ public final class FingerprintProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private FingerprintData(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -76,7 +74,7 @@ public final class FingerprintProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -100,22 +98,16 @@ public final class FingerprintProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_FingerprintData_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_FingerprintData_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.class, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<FingerprintData> PARSER =
         new com.google.protobuf.AbstractParser<FingerprintData>() {
       public FingerprintData parsePartialFrom(
@@ -132,7 +124,6 @@ public final class FingerprintProtos {
     }
 
     private int bitField0_;
-    // optional bytes publicKey = 1;
     public static final int PUBLICKEY_FIELD_NUMBER = 1;
     private com.google.protobuf.ByteString publicKey_;
     /**
@@ -148,7 +139,6 @@ public final class FingerprintProtos {
       return publicKey_;
     }
 
-    // optional bytes identifier = 2;
     public static final int IDENTIFIER_FIELD_NUMBER = 2;
     private com.google.protobuf.ByteString identifier_;
     /**
@@ -171,7 +161,8 @@ public final class FingerprintProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -186,7 +177,7 @@ public final class FingerprintProtos {
       if (((bitField0_ & 0x00000002) == 0x00000002)) {
         output.writeBytes(2, identifier_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -203,7 +194,7 @@ public final class FingerprintProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeBytesSize(2, identifier_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -275,43 +266,21 @@ public final class FingerprintProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.FingerprintData}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_FingerprintData_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_FingerprintData_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.class, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.FingerprintData)
+        org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder {
       // Construct using org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -330,11 +299,6 @@ public final class FingerprintProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_FingerprintData_descriptor;
-      }
-
       public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData getDefaultInstanceForType() {
         return org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
       }
@@ -360,19 +324,9 @@ public final class FingerprintProtos {
         }
         result.identifier_ = identifier_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData) {
-          return mergeFrom((org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData other) {
         if (other == org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance()) return this;
         if (other.hasPublicKey()) {
@@ -381,7 +335,8 @@ public final class FingerprintProtos {
         if (other.hasIdentifier()) {
           setIdentifier(other.getIdentifier());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -408,7 +363,6 @@ public final class FingerprintProtos {
       }
       private int bitField0_;
 
-      // optional bytes publicKey = 1;
       private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes publicKey = 1;</code>
@@ -431,7 +385,7 @@ public final class FingerprintProtos {
   }
   bitField0_ |= 0x00000001;
         publicKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -440,11 +394,10 @@ public final class FingerprintProtos {
       public Builder clearPublicKey() {
         bitField0_ = (bitField0_ & ~0x00000001);
         publicKey_ = getDefaultInstance().getPublicKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes identifier = 2;
       private com.google.protobuf.ByteString identifier_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes identifier = 2;</code>
@@ -467,7 +420,7 @@ public final class FingerprintProtos {
   }
   bitField0_ |= 0x00000002;
         identifier_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -476,7 +429,7 @@ public final class FingerprintProtos {
       public Builder clearIdentifier() {
         bitField0_ = (bitField0_ & ~0x00000002);
         identifier_ = getDefaultInstance().getIdentifier();
-        onChanged();
+        
         return this;
       }
 
@@ -491,10 +444,10 @@ public final class FingerprintProtos {
     // @@protoc_insertion_point(class_scope:textsecure.FingerprintData)
   }
 
-  public interface CombinedFingerprintOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface CombinedFingerprintOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.CombinedFingerprint)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 version = 1;
     /**
      * <code>optional uint32 version = 1;</code>
      */
@@ -504,7 +457,6 @@ public final class FingerprintProtos {
      */
     int getVersion();
 
-    // optional .textsecure.FingerprintData localFingerprint = 2;
     /**
      * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
      */
@@ -513,12 +465,7 @@ public final class FingerprintProtos {
      * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
      */
     org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData getLocalFingerprint();
-    /**
-     * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
-     */
-    org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder getLocalFingerprintOrBuilder();
 
-    // optional .textsecure.FingerprintData remoteFingerprint = 3;
     /**
      * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
      */
@@ -527,23 +474,20 @@ public final class FingerprintProtos {
      * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
      */
     org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData getRemoteFingerprint();
-    /**
-     * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
-     */
-    org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder getRemoteFingerprintOrBuilder();
   }
   /**
    * Protobuf type {@code textsecure.CombinedFingerprint}
    */
   public static final class CombinedFingerprint extends
-      com.google.protobuf.GeneratedMessage
-      implements CombinedFingerprintOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.CombinedFingerprint)
+      CombinedFingerprintOrBuilder {
     // Use CombinedFingerprint.newBuilder() to construct.
-    private CombinedFingerprint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private CombinedFingerprint(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private CombinedFingerprint(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private CombinedFingerprint(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final CombinedFingerprint defaultInstance;
     public static CombinedFingerprint getDefaultInstance() {
@@ -554,20 +498,18 @@ public final class FingerprintProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private CombinedFingerprint(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -577,7 +519,7 @@ public final class FingerprintProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -622,22 +564,16 @@ public final class FingerprintProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_CombinedFingerprint_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_CombinedFingerprint_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint.class, org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<CombinedFingerprint> PARSER =
         new com.google.protobuf.AbstractParser<CombinedFingerprint>() {
       public CombinedFingerprint parsePartialFrom(
@@ -654,7 +590,6 @@ public final class FingerprintProtos {
     }
 
     private int bitField0_;
-    // optional uint32 version = 1;
     public static final int VERSION_FIELD_NUMBER = 1;
     private int version_;
     /**
@@ -670,7 +605,6 @@ public final class FingerprintProtos {
       return version_;
     }
 
-    // optional .textsecure.FingerprintData localFingerprint = 2;
     public static final int LOCALFINGERPRINT_FIELD_NUMBER = 2;
     private org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData localFingerprint_;
     /**
@@ -685,14 +619,7 @@ public final class FingerprintProtos {
     public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData getLocalFingerprint() {
       return localFingerprint_;
     }
-    /**
-     * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
-     */
-    public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder getLocalFingerprintOrBuilder() {
-      return localFingerprint_;
-    }
 
-    // optional .textsecure.FingerprintData remoteFingerprint = 3;
     public static final int REMOTEFINGERPRINT_FIELD_NUMBER = 3;
     private org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData remoteFingerprint_;
     /**
@@ -707,12 +634,6 @@ public final class FingerprintProtos {
     public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData getRemoteFingerprint() {
       return remoteFingerprint_;
     }
-    /**
-     * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
-     */
-    public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder getRemoteFingerprintOrBuilder() {
-      return remoteFingerprint_;
-    }
 
     private void initFields() {
       version_ = 0;
@@ -722,7 +643,8 @@ public final class FingerprintProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -740,7 +662,7 @@ public final class FingerprintProtos {
       if (((bitField0_ & 0x00000004) == 0x00000004)) {
         output.writeMessage(3, remoteFingerprint_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -761,7 +683,7 @@ public final class FingerprintProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeMessageSize(3, remoteFingerprint_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -833,45 +755,21 @@ public final class FingerprintProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.CombinedFingerprint}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprintOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_CombinedFingerprint_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_CombinedFingerprint_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint.class, org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.CombinedFingerprint)
+        org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprintOrBuilder {
       // Construct using org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          getLocalFingerprintFieldBuilder();
-          getRemoteFingerprintFieldBuilder();
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -881,17 +779,9 @@ public final class FingerprintProtos {
         super.clear();
         version_ = 0;
         bitField0_ = (bitField0_ & ~0x00000001);
-        if (localFingerprintBuilder_ == null) {
-          localFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
-        } else {
-          localFingerprintBuilder_.clear();
-        }
+        localFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
         bitField0_ = (bitField0_ & ~0x00000002);
-        if (remoteFingerprintBuilder_ == null) {
-          remoteFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
-        } else {
-          remoteFingerprintBuilder_.clear();
-        }
+        remoteFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
         bitField0_ = (bitField0_ & ~0x00000004);
         return this;
       }
@@ -900,11 +790,6 @@ public final class FingerprintProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.fingerprint.FingerprintProtos.internal_static_textsecure_CombinedFingerprint_descriptor;
-      }
-
       public org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint getDefaultInstanceForType() {
         return org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint.getDefaultInstance();
       }
@@ -928,33 +813,15 @@ public final class FingerprintProtos {
         if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
           to_bitField0_ |= 0x00000002;
         }
-        if (localFingerprintBuilder_ == null) {
-          result.localFingerprint_ = localFingerprint_;
-        } else {
-          result.localFingerprint_ = localFingerprintBuilder_.build();
-        }
+        result.localFingerprint_ = localFingerprint_;
         if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
           to_bitField0_ |= 0x00000004;
         }
-        if (remoteFingerprintBuilder_ == null) {
-          result.remoteFingerprint_ = remoteFingerprint_;
-        } else {
-          result.remoteFingerprint_ = remoteFingerprintBuilder_.build();
-        }
+        result.remoteFingerprint_ = remoteFingerprint_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint) {
-          return mergeFrom((org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint other) {
         if (other == org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprint.getDefaultInstance()) return this;
         if (other.hasVersion()) {
@@ -966,7 +833,8 @@ public final class FingerprintProtos {
         if (other.hasRemoteFingerprint()) {
           mergeRemoteFingerprint(other.getRemoteFingerprint());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -993,7 +861,6 @@ public final class FingerprintProtos {
       }
       private int bitField0_;
 
-      // optional uint32 version = 1;
       private int version_ ;
       /**
        * <code>optional uint32 version = 1;</code>
@@ -1013,7 +880,7 @@ public final class FingerprintProtos {
       public Builder setVersion(int value) {
         bitField0_ |= 0x00000001;
         version_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -1022,14 +889,11 @@ public final class FingerprintProtos {
       public Builder clearVersion() {
         bitField0_ = (bitField0_ & ~0x00000001);
         version_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional .textsecure.FingerprintData localFingerprint = 2;
       private org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData localFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder> localFingerprintBuilder_;
       /**
        * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
        */
@@ -1040,25 +904,17 @@ public final class FingerprintProtos {
        * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
        */
       public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData getLocalFingerprint() {
-        if (localFingerprintBuilder_ == null) {
-          return localFingerprint_;
-        } else {
-          return localFingerprintBuilder_.getMessage();
-        }
+        return localFingerprint_;
       }
       /**
        * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
        */
       public Builder setLocalFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData value) {
-        if (localFingerprintBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          localFingerprint_ = value;
-          onChanged();
-        } else {
-          localFingerprintBuilder_.setMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        localFingerprint_ = value;
+
         bitField0_ |= 0x00000002;
         return this;
       }
@@ -1067,12 +923,8 @@ public final class FingerprintProtos {
        */
       public Builder setLocalFingerprint(
           org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder builderForValue) {
-        if (localFingerprintBuilder_ == null) {
-          localFingerprint_ = builderForValue.build();
-          onChanged();
-        } else {
-          localFingerprintBuilder_.setMessage(builderForValue.build());
-        }
+        localFingerprint_ = builderForValue.build();
+
         bitField0_ |= 0x00000002;
         return this;
       }
@@ -1080,18 +932,14 @@ public final class FingerprintProtos {
        * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
        */
       public Builder mergeLocalFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData value) {
-        if (localFingerprintBuilder_ == null) {
-          if (((bitField0_ & 0x00000002) == 0x00000002) &&
-              localFingerprint_ != org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance()) {
-            localFingerprint_ =
-              org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.newBuilder(localFingerprint_).mergeFrom(value).buildPartial();
-          } else {
-            localFingerprint_ = value;
-          }
-          onChanged();
+        if (((bitField0_ & 0x00000002) == 0x00000002) &&
+            localFingerprint_ != org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance()) {
+          localFingerprint_ =
+            org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.newBuilder(localFingerprint_).mergeFrom(value).buildPartial();
         } else {
-          localFingerprintBuilder_.mergeFrom(value);
+          localFingerprint_ = value;
         }
+
         bitField0_ |= 0x00000002;
         return this;
       }
@@ -1099,54 +947,13 @@ public final class FingerprintProtos {
        * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
        */
       public Builder clearLocalFingerprint() {
-        if (localFingerprintBuilder_ == null) {
-          localFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
-          onChanged();
-        } else {
-          localFingerprintBuilder_.clear();
-        }
+        localFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
+
         bitField0_ = (bitField0_ & ~0x00000002);
         return this;
       }
-      /**
-       * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
-       */
-      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder getLocalFingerprintBuilder() {
-        bitField0_ |= 0x00000002;
-        onChanged();
-        return getLocalFingerprintFieldBuilder().getBuilder();
-      }
-      /**
-       * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
-       */
-      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder getLocalFingerprintOrBuilder() {
-        if (localFingerprintBuilder_ != null) {
-          return localFingerprintBuilder_.getMessageOrBuilder();
-        } else {
-          return localFingerprint_;
-        }
-      }
-      /**
-       * <code>optional .textsecure.FingerprintData localFingerprint = 2;</code>
-       */
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder> 
-          getLocalFingerprintFieldBuilder() {
-        if (localFingerprintBuilder_ == null) {
-          localFingerprintBuilder_ = new com.google.protobuf.SingleFieldBuilder<
-              org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder>(
-                  localFingerprint_,
-                  getParentForChildren(),
-                  isClean());
-          localFingerprint_ = null;
-        }
-        return localFingerprintBuilder_;
-      }
 
-      // optional .textsecure.FingerprintData remoteFingerprint = 3;
       private org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData remoteFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder> remoteFingerprintBuilder_;
       /**
        * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
        */
@@ -1157,25 +964,17 @@ public final class FingerprintProtos {
        * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
        */
       public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData getRemoteFingerprint() {
-        if (remoteFingerprintBuilder_ == null) {
-          return remoteFingerprint_;
-        } else {
-          return remoteFingerprintBuilder_.getMessage();
-        }
+        return remoteFingerprint_;
       }
       /**
        * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
        */
       public Builder setRemoteFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData value) {
-        if (remoteFingerprintBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          remoteFingerprint_ = value;
-          onChanged();
-        } else {
-          remoteFingerprintBuilder_.setMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        remoteFingerprint_ = value;
+
         bitField0_ |= 0x00000004;
         return this;
       }
@@ -1184,12 +983,8 @@ public final class FingerprintProtos {
        */
       public Builder setRemoteFingerprint(
           org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder builderForValue) {
-        if (remoteFingerprintBuilder_ == null) {
-          remoteFingerprint_ = builderForValue.build();
-          onChanged();
-        } else {
-          remoteFingerprintBuilder_.setMessage(builderForValue.build());
-        }
+        remoteFingerprint_ = builderForValue.build();
+
         bitField0_ |= 0x00000004;
         return this;
       }
@@ -1197,18 +992,14 @@ public final class FingerprintProtos {
        * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
        */
       public Builder mergeRemoteFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData value) {
-        if (remoteFingerprintBuilder_ == null) {
-          if (((bitField0_ & 0x00000004) == 0x00000004) &&
-              remoteFingerprint_ != org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance()) {
-            remoteFingerprint_ =
-              org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.newBuilder(remoteFingerprint_).mergeFrom(value).buildPartial();
-          } else {
-            remoteFingerprint_ = value;
-          }
-          onChanged();
+        if (((bitField0_ & 0x00000004) == 0x00000004) &&
+            remoteFingerprint_ != org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance()) {
+          remoteFingerprint_ =
+            org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.newBuilder(remoteFingerprint_).mergeFrom(value).buildPartial();
         } else {
-          remoteFingerprintBuilder_.mergeFrom(value);
+          remoteFingerprint_ = value;
         }
+
         bitField0_ |= 0x00000004;
         return this;
       }
@@ -1216,49 +1007,11 @@ public final class FingerprintProtos {
        * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
        */
       public Builder clearRemoteFingerprint() {
-        if (remoteFingerprintBuilder_ == null) {
-          remoteFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
-          onChanged();
-        } else {
-          remoteFingerprintBuilder_.clear();
-        }
+        remoteFingerprint_ = org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.getDefaultInstance();
+
         bitField0_ = (bitField0_ & ~0x00000004);
         return this;
       }
-      /**
-       * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
-       */
-      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder getRemoteFingerprintBuilder() {
-        bitField0_ |= 0x00000004;
-        onChanged();
-        return getRemoteFingerprintFieldBuilder().getBuilder();
-      }
-      /**
-       * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
-       */
-      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder getRemoteFingerprintOrBuilder() {
-        if (remoteFingerprintBuilder_ != null) {
-          return remoteFingerprintBuilder_.getMessageOrBuilder();
-        } else {
-          return remoteFingerprint_;
-        }
-      }
-      /**
-       * <code>optional .textsecure.FingerprintData remoteFingerprint = 3;</code>
-       */
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder> 
-          getRemoteFingerprintFieldBuilder() {
-        if (remoteFingerprintBuilder_ == null) {
-          remoteFingerprintBuilder_ = new com.google.protobuf.SingleFieldBuilder<
-              org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintData.Builder, org.whispersystems.libsignal.fingerprint.FingerprintProtos.FingerprintDataOrBuilder>(
-                  remoteFingerprint_,
-                  getParentForChildren(),
-                  isClean());
-          remoteFingerprint_ = null;
-        }
-        return remoteFingerprintBuilder_;
-      }
 
       // @@protoc_insertion_point(builder_scope:textsecure.CombinedFingerprint)
     }
@@ -1271,58 +1024,8 @@ public final class FingerprintProtos {
     // @@protoc_insertion_point(class_scope:textsecure.CombinedFingerprint)
   }
 
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_FingerprintData_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_FingerprintData_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_CombinedFingerprint_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_CombinedFingerprint_fieldAccessorTable;
-
-  public static com.google.protobuf.Descriptors.FileDescriptor
-      getDescriptor() {
-    return descriptor;
-  }
-  private static com.google.protobuf.Descriptors.FileDescriptor
-      descriptor;
+
   static {
-    java.lang.String[] descriptorData = {
-      "\n\031FingerprintProtocol.proto\022\ntextsecure\"" +
-      "8\n\017FingerprintData\022\021\n\tpublicKey\030\001 \001(\014\022\022\n" +
-      "\nidentifier\030\002 \001(\014\"\225\001\n\023CombinedFingerprin" +
-      "t\022\017\n\007version\030\001 \001(\r\0225\n\020localFingerprint\030\002" +
-      " \001(\0132\033.textsecure.FingerprintData\0226\n\021rem" +
-      "oteFingerprint\030\003 \001(\0132\033.textsecure.Finger" +
-      "printDataB=\n(org.whispersystems.libsigna" +
-      "l.fingerprintB\021FingerprintProtos"
-    };
-    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
-      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
-        public com.google.protobuf.ExtensionRegistry assignDescriptors(
-            com.google.protobuf.Descriptors.FileDescriptor root) {
-          descriptor = root;
-          internal_static_textsecure_FingerprintData_descriptor =
-            getDescriptor().getMessageTypes().get(0);
-          internal_static_textsecure_FingerprintData_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_FingerprintData_descriptor,
-              new java.lang.String[] { "PublicKey", "Identifier", });
-          internal_static_textsecure_CombinedFingerprint_descriptor =
-            getDescriptor().getMessageTypes().get(1);
-          internal_static_textsecure_CombinedFingerprint_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_CombinedFingerprint_descriptor,
-              new java.lang.String[] { "Version", "LocalFingerprint", "RemoteFingerprint", });
-          return null;
-        }
-      };
-    com.google.protobuf.Descriptors.FileDescriptor
-      .internalBuildGeneratedFileFrom(descriptorData,
-        new com.google.protobuf.Descriptors.FileDescriptor[] {
-        }, assigner);
   }
 
   // @@protoc_insertion_point(outer_class_scope)
diff --git a/java/src/main/java/org/whispersystems/libsignal/groups/FastRatchetGroupCipher.java b/java/src/main/java/org/whispersystems/libsignal/groups/FastRatchetGroupCipher.java
new file mode 100644
index 0000000..ed621c8
--- /dev/null
+++ b/java/src/main/java/org/whispersystems/libsignal/groups/FastRatchetGroupCipher.java
@@ -0,0 +1,205 @@
+/**
+ * Copyright (C) 2017 WhatsApp Inc. All rights reserved.
+ *
+ * Licensed according to the LICENSE file in this repository.
+ */
+package org.whispersystems.libsignal.groups;
+
+import org.whispersystems.libsignal.DecryptionCallback;
+import org.whispersystems.libsignal.DuplicateMessageException;
+import org.whispersystems.libsignal.InvalidKeyIdException;
+import org.whispersystems.libsignal.InvalidMessageException;
+import org.whispersystems.libsignal.LegacyMessageException;
+import org.whispersystems.libsignal.NoSessionException;
+import org.whispersystems.libsignal.groups.ratchet.FastRatchetSenderChainKey;
+import org.whispersystems.libsignal.groups.ratchet.SenderMessageKey;
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyRecord;
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyState;
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyStore;
+import org.whispersystems.libsignal.protocol.SenderKeyMessage;
+
+import java.security.InvalidAlgorithmParameterException;
+import java.security.NoSuchAlgorithmException;
+
+import javax.crypto.BadPaddingException;
+import javax.crypto.Cipher;
+import javax.crypto.IllegalBlockSizeException;
+import javax.crypto.NoSuchPaddingException;
+import javax.crypto.spec.IvParameterSpec;
+import javax.crypto.spec.SecretKeySpec;
+
+/**
+ * The main entry point for Signal Protocol fast ratchet group encrypt/decrypt operations.
+ *
+ * Once a session has been established with {@link org.whispersystems.libsignal.groups.FastRatchetGroupSessionBuilder}
+ * and a {@link org.whispersystems.libsignal.protocol.SenderKeyDistributionMessage} has been
+ * distributed to each member of the group, this class can be used for all subsequent encrypt/decrypt
+ * operations within that session (ie: until group membership changes).
+ */
+public class FastRatchetGroupCipher {
+
+  static final Object LOCK = new Object();
+
+  private final FastRatchetSenderKeyStore senderKeyStore;
+  private final SenderKeyName             senderKeyId;
+
+  /**
+   * Creates a new instance of the fast ratchet group cipher.
+   *
+   * @param senderKeyStore Key store used for keeping track of sessions.
+   * @param senderKeyId ID for the sender key.
+   */
+  public FastRatchetGroupCipher(FastRatchetSenderKeyStore senderKeyStore, SenderKeyName senderKeyId) {
+    this.senderKeyStore     = senderKeyStore;
+    this.senderKeyId        = senderKeyId;
+  }
+
+  /**
+   * Encrypt a message.
+   *
+   * @param paddedPlaintext The plaintext message bytes, optionally padded.
+   * @return Ciphertext.
+   * @throws NoSessionException
+   */
+  public byte[] encrypt(byte[] paddedPlaintext) throws NoSessionException {
+    synchronized (LOCK) {
+      try {
+        FastRatchetSenderKeyRecord record         = senderKeyStore.loadFastRatchetSenderKey(senderKeyId);
+        FastRatchetSenderKeyState  senderKeyState = record.getSenderKeyState();
+        SenderMessageKey           senderKey      = senderKeyState.getSenderChainKey().getSenderMessageKey();
+        byte[]                     ciphertext     = getCipherText(senderKey.getIv(), senderKey.getCipherKey(), paddedPlaintext);
+
+        SenderKeyMessage senderKeyMessage = new SenderKeyMessage(senderKeyState.getKeyId(),
+                                                                 senderKey.getIteration(),
+                                                                 ciphertext,
+                                                                 senderKeyState.getSigningKeyPrivate());
+
+        senderKeyState.setSenderChainKey(senderKeyState.getSenderChainKey().getNext());
+
+        senderKeyStore.storeFastRatchetSenderKey(senderKeyId, record);
+
+        return senderKeyMessage.serialize();
+      } catch (InvalidKeyIdException e) {
+        throw new NoSessionException(e);
+      }
+    }
+  }
+
+  /**
+   * Decrypt a SenderKey group message.
+   *
+   * @param senderKeyMessageBytes The received ciphertext.
+   * @return Plaintext
+   * @throws LegacyMessageException
+   * @throws InvalidMessageException
+   * @throws DuplicateMessageException
+   */
+  public byte[] decrypt(byte[] senderKeyMessageBytes)
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException
+  {
+    return decrypt(senderKeyMessageBytes, new NullDecryptionCallback());
+  }
+
+  /**
+   * Decrypt a SenderKey group message.
+   *
+   * @param senderKeyMessageBytes The received ciphertext.
+   * @param callback   A callback that is triggered after decryption is complete,
+   *                    but before the updated session state has been committed to the session
+   *                    DB.  This allows some implementations to store the committed plaintext
+   *                    to a DB first, in case they are concerned with a crash happening between
+   *                    the time the session state is updated but before they're able to store
+   *                    the plaintext to disk.
+   * @return Plaintext
+   * @throws LegacyMessageException
+   * @throws InvalidMessageException
+   * @throws DuplicateMessageException
+   */
+  public byte[] decrypt(byte[] senderKeyMessageBytes, DecryptionCallback callback)
+      throws LegacyMessageException, InvalidMessageException, DuplicateMessageException,
+             NoSessionException
+  {
+    synchronized (LOCK) {
+      try {
+        FastRatchetSenderKeyRecord record = senderKeyStore.loadFastRatchetSenderKey(senderKeyId);
+
+        if (record.isEmpty()) {
+          throw new NoSessionException("No sender key for: " + senderKeyId);
+        }
+
+        SenderKeyMessage          senderKeyMessage = new SenderKeyMessage(senderKeyMessageBytes);
+        FastRatchetSenderKeyState senderKeyState   = record.getSenderKeyState(senderKeyMessage.getKeyId());
+
+        senderKeyMessage.verifySignature(senderKeyState.getSigningKeyPublic());
+
+        SenderMessageKey senderKey = getSenderKey(senderKeyState, senderKeyMessage.getIteration());
+
+        byte[] plaintext = getPlainText(senderKey.getIv(), senderKey.getCipherKey(), senderKeyMessage.getCipherText());
+
+        callback.handlePlaintext(plaintext);
+
+        senderKeyStore.storeFastRatchetSenderKey(senderKeyId, record);
+
+        return plaintext;
+      } catch (org.whispersystems.libsignal.InvalidKeyException | InvalidKeyIdException e) {
+        throw new InvalidMessageException(e);
+      }
+    }
+  }
+
+  private SenderMessageKey getSenderKey(FastRatchetSenderKeyState senderKeyState, int iteration)
+      throws DuplicateMessageException, InvalidMessageException
+  {
+    FastRatchetSenderChainKey senderChainKey = senderKeyState.getSenderChainKey();
+
+    if (senderChainKey.getIteration() > iteration) {
+      throw new DuplicateMessageException("Received message with old counter: " +
+                                          senderChainKey.getIteration() + " , " + iteration);
+    } else if (senderChainKey.getIteration() < iteration) {
+      senderChainKey = senderChainKey.getNext(iteration - senderChainKey.getIteration());
+    }
+
+    senderKeyState.setSenderChainKey(senderChainKey.getNext());
+    return senderChainKey.getSenderMessageKey();
+  }
+
+  private byte[] getPlainText(byte[] iv, byte[] key, byte[] ciphertext)
+      throws InvalidMessageException
+  {
+    try {
+      IvParameterSpec ivParameterSpec = new IvParameterSpec(iv);
+      Cipher          cipher          = Cipher.getInstance("AES/CBC/PKCS5Padding");
+
+      cipher.init(Cipher.DECRYPT_MODE, new SecretKeySpec(key, "AES"), ivParameterSpec);
+
+      return cipher.doFinal(ciphertext);
+    } catch (NoSuchAlgorithmException | NoSuchPaddingException | java.security.InvalidKeyException |
+             InvalidAlgorithmParameterException e)
+    {
+      throw new AssertionError(e);
+    } catch (IllegalBlockSizeException | BadPaddingException e) {
+      throw new InvalidMessageException(e);
+    }
+  }
+
+  private byte[] getCipherText(byte[] iv, byte[] key, byte[] plaintext) {
+    try {
+      IvParameterSpec ivParameterSpec = new IvParameterSpec(iv);
+      Cipher          cipher          = Cipher.getInstance("AES/CBC/PKCS5Padding");
+
+      cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(key, "AES"), ivParameterSpec);
+
+      return cipher.doFinal(plaintext);
+    } catch (NoSuchAlgorithmException | NoSuchPaddingException | InvalidAlgorithmParameterException |
+             IllegalBlockSizeException | BadPaddingException | java.security.InvalidKeyException e)
+    {
+      throw new AssertionError(e);
+    }
+  }
+
+  private static class NullDecryptionCallback implements DecryptionCallback {
+    @Override
+    public void handlePlaintext(byte[] plaintext) {}
+  }
+
+}
diff --git a/java/src/main/java/org/whispersystems/libsignal/groups/FastRatchetGroupSessionBuilder.java b/java/src/main/java/org/whispersystems/libsignal/groups/FastRatchetGroupSessionBuilder.java
new file mode 100644
index 0000000..866a98c
--- /dev/null
+++ b/java/src/main/java/org/whispersystems/libsignal/groups/FastRatchetGroupSessionBuilder.java
@@ -0,0 +1,104 @@
+/**
+ * Copyright (C) 2017 WhatsApp Inc. All rights reserved.
+ *
+ * Licensed according to the LICENSE file in this repository.
+ */
+package org.whispersystems.libsignal.groups;
+
+import org.whispersystems.libsignal.InvalidKeyException;
+import org.whispersystems.libsignal.InvalidKeyIdException;
+import org.whispersystems.libsignal.groups.ratchet.FastRatchetSenderChainKey;
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyRecord;
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyState;
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyStore;
+import org.whispersystems.libsignal.protocol.FastRatchetSenderKeyDistributionMessage;
+import org.whispersystems.libsignal.util.FastRatchetUtil;
+import org.whispersystems.libsignal.util.KeyHelper;
+
+/**
+ * FastRatchetGroupSessionBuilder is responsible for setting up group SenderKey encrypted sessions.
+ *
+ * Once a session has been established, {@link org.whispersystems.libsignal.groups.FastRatchetGroupCipher}
+ * can be used to encrypt/decrypt messages in that session.
+ * <p>
+ * The built sessions are unidirectional: they can be used either for sending or for receiving,
+ * but not both.
+ *
+ * Sessions are constructed per (groupId + senderId + deviceId) tuple.  Remote logical users
+ * are identified by their senderId, and each logical recipientId can have multiple physical
+ * devices.
+ */
+public class FastRatchetGroupSessionBuilder {
+
+  private final FastRatchetSenderKeyStore senderKeyStore;
+
+  public FastRatchetGroupSessionBuilder(FastRatchetSenderKeyStore senderKeyStore) {
+    this.senderKeyStore = senderKeyStore;
+  }
+
+  /**
+   * Construct a group session for receiving messages from senderKeyName.
+   *
+   * @param senderKeyName The (groupId, senderId, deviceId) tuple associated with the FastRatchetSenderKeyDistributionMessage.
+   * @param senderKeyDistributionMessage A received FastRatchetSenderKeyDistributionMessage.
+   */
+  public void process(SenderKeyName senderKeyName, FastRatchetSenderKeyDistributionMessage senderKeyDistributionMessage) {
+    synchronized (FastRatchetGroupCipher.LOCK) {
+      FastRatchetSenderKeyRecord senderKeyRecord = senderKeyStore.loadFastRatchetSenderKey(senderKeyName);
+      senderKeyRecord.addSenderKeyState(senderKeyDistributionMessage.getId(),
+                                        senderKeyDistributionMessage.getIteration(),
+                                        senderKeyDistributionMessage.getChainKeys(),
+                                        senderKeyDistributionMessage.getSignatureKey());
+      senderKeyStore.storeFastRatchetSenderKey(senderKeyName, senderKeyRecord);
+    }
+  }
+
+  /**
+   * Construct a group session for sending messages.
+   *
+   * @param senderKeyName The (groupId, senderId, deviceId) tuple.  In this case, 'senderId' should be the caller.
+   * @param scale Value from which the number of dimensions for the chain key ratchet is derived.
+   *              Valid values are from [0..5]. (Dimensions is 2^scale.)
+   * @return A SenderKeyDistributionMessage that is individually distributed to each member of the group.
+   */
+  public FastRatchetSenderKeyDistributionMessage create(SenderKeyName senderKeyName, int scale) {
+    if (scale < 0 || scale > 5) {
+      throw new IllegalArgumentException("scale must be between 0 and 5");
+    }
+
+    synchronized (FastRatchetGroupCipher.LOCK) {
+      try {
+        FastRatchetSenderKeyRecord senderKeyRecord = senderKeyStore.loadFastRatchetSenderKey(senderKeyName);
+
+        boolean createState = false;
+        if (senderKeyRecord.isEmpty()) {
+          createState = true;
+        } else {
+          FastRatchetSenderKeyState state = senderKeyRecord.getSenderKeyState();
+          if (FastRatchetUtil.scaleToDimensions(scale) != state.getSenderChainKey().getSeeds().length) {
+            createState = true;
+          }
+        }
+
+        if (createState) {
+          FastRatchetSenderChainKey initialChainKey = new FastRatchetSenderChainKey(KeyHelper.generateSenderKey(), scale);
+          senderKeyRecord.setSenderKeyState(KeyHelper.generateSenderKeyId(),
+                                            0,
+                                            initialChainKey.getSeeds(),
+                                            KeyHelper.generateSenderSigningKey());
+          senderKeyStore.storeFastRatchetSenderKey(senderKeyName, senderKeyRecord);
+        }
+
+        FastRatchetSenderKeyState state = senderKeyRecord.getSenderKeyState();
+
+        return new FastRatchetSenderKeyDistributionMessage(state.getKeyId(),
+                                                           state.getSenderChainKey().getIteration(),
+                                                           state.getSenderChainKey().getSeeds(),
+                                                           state.getSigningKeyPublic());
+
+      } catch (InvalidKeyIdException | InvalidKeyException e) {
+        throw new AssertionError(e);
+      }
+    }
+  }
+}
diff --git a/java/src/main/java/org/whispersystems/libsignal/groups/GroupCipher.java b/java/src/main/java/org/whispersystems/libsignal/groups/GroupCipher.java
index d1d6bb6..687fd12 100644
--- a/java/src/main/java/org/whispersystems/libsignal/groups/GroupCipher.java
+++ b/java/src/main/java/org/whispersystems/libsignal/groups/GroupCipher.java
@@ -7,10 +7,12 @@ package org.whispersystems.libsignal.groups;
 
 import org.whispersystems.libsignal.DecryptionCallback;
 import org.whispersystems.libsignal.DuplicateMessageException;
+import org.whispersystems.libsignal.InvalidKeyException;
 import org.whispersystems.libsignal.InvalidKeyIdException;
 import org.whispersystems.libsignal.InvalidMessageException;
 import org.whispersystems.libsignal.LegacyMessageException;
 import org.whispersystems.libsignal.NoSessionException;
+import org.whispersystems.libsignal.ecc.ECPrivateKey;
 import org.whispersystems.libsignal.groups.ratchet.SenderChainKey;
 import org.whispersystems.libsignal.groups.ratchet.SenderMessageKey;
 import org.whispersystems.libsignal.groups.state.SenderKeyRecord;
@@ -56,19 +58,25 @@ public class GroupCipher {
    * @param paddedPlaintext The plaintext message bytes, optionally padded.
    * @return Ciphertext.
    * @throws NoSessionException
+   * @throws InvalidKeyException
    */
-  public byte[] encrypt(byte[] paddedPlaintext) throws NoSessionException {
+  public byte[] encrypt(byte[] paddedPlaintext) throws NoSessionException, InvalidKeyException {
     synchronized (LOCK) {
       try {
         SenderKeyRecord  record         = senderKeyStore.loadSenderKey(senderKeyId);
         SenderKeyState   senderKeyState = record.getSenderKeyState();
         SenderMessageKey senderKey      = senderKeyState.getSenderChainKey().getSenderMessageKey();
+        ECPrivateKey     signatureKey   = senderKeyState.getSigningKeyPrivate();
         byte[]           ciphertext     = getCipherText(senderKey.getIv(), senderKey.getCipherKey(), paddedPlaintext);
 
+        if (signatureKey == null) {
+          throw new InvalidKeyException("Session missing signature key!");
+        }
+
         SenderKeyMessage senderKeyMessage = new SenderKeyMessage(senderKeyState.getKeyId(),
                                                                  senderKey.getIteration(),
                                                                  ciphertext,
-                                                                 senderKeyState.getSigningKeyPrivate());
+                                                                 signatureKey);
 
         senderKeyState.setSenderChainKey(senderKeyState.getSenderChainKey().getNext());
 
diff --git a/java/src/main/java/org/whispersystems/libsignal/groups/ratchet/FastRatchetSenderChainKey.java b/java/src/main/java/org/whispersystems/libsignal/groups/ratchet/FastRatchetSenderChainKey.java
new file mode 100644
index 0000000..138c58d
--- /dev/null
+++ b/java/src/main/java/org/whispersystems/libsignal/groups/ratchet/FastRatchetSenderChainKey.java
@@ -0,0 +1,175 @@
+/**
+ * Copyright (C) 2017 WhatsApp Inc. All rights reserved.
+ *
+ * Licensed according to the LICENSE file in this repository.
+ */
+package org.whispersystems.libsignal.groups.ratchet;
+
+import org.whispersystems.libsignal.state.StorageProtos;
+import org.whispersystems.libsignal.util.FastRatchetUtil;
+
+import java.security.InvalidKeyException;
+import java.security.NoSuchAlgorithmException;
+import java.util.List;
+
+import javax.crypto.Mac;
+import javax.crypto.spec.SecretKeySpec;
+
+/**
+ * Each SenderKey is a "chain" of keys, each derived from the previous.
+ *
+ * At any given point in time, the state of a SenderKey can be represented
+ * as the current chain key value, along with its iteration count.  From there,
+ * subsequent iterations can be derived, as well as individual message keys from
+ * each chain key.
+ */
+public class FastRatchetSenderChainKey {
+
+  private static final byte MESSAGE_KEY_SEED = (byte) 0x01;
+  private static final byte CHAIN_KEY_SEED   = (byte) 0x02;
+
+  private final int      iteration;
+  private final byte[][] chainKeys;
+
+  public FastRatchetSenderChainKey(byte[] baseChainKey, int scale) {
+    if (scale < 0 || scale > 5) {
+      throw new IllegalArgumentException("scale must be between 0 and 5");
+    }
+
+    int count = FastRatchetUtil.scaleToDimensions(scale);
+    this.iteration = 0;
+
+    this.chainKeys = new byte[count][];
+    this.chainKeys[0] = baseChainKey;
+
+    for (int i = 1; i < count; i++) {
+      this.chainKeys[i] = new byte[0];
+    }
+  }
+
+  public FastRatchetSenderChainKey(int iteration, byte[][] chainKeys) {
+    if (chainKeys.length == 0 || 32 % chainKeys.length != 0) {
+      throw new IllegalArgumentException("Invalid number of chain keys: " + chainKeys.length);
+    }
+
+    validateChainKeyParameters(iteration, chainKeys);
+
+    this.iteration = iteration;
+    this.chainKeys = chainKeys;
+  }
+
+  public FastRatchetSenderChainKey(List<StorageProtos.SenderKeyStateStructure.SenderChainKey> senderChainKeysList) {
+    if (senderChainKeysList.isEmpty() || 32 % senderChainKeysList.size() != 0) {
+      throw new IllegalArgumentException("Invalid number of chain keys: " + senderChainKeysList.size());
+    }
+
+    int   chainCount          = senderChainKeysList.size();
+    int[] iterationComponents = new int[chainCount];
+    this.chainKeys = new byte[chainCount][];
+
+    for (int i = 0; i < chainCount; i++) {
+      iterationComponents[i] = senderChainKeysList.get(i).getIteration();
+      this.chainKeys[i] = senderChainKeysList.get(i).getSeed().toByteArray();
+    }
+
+    this.iteration = FastRatchetUtil.composeChainIterations(iterationComponents);
+
+    validateChainKeyParameters(this.iteration, this.chainKeys);
+  }
+
+  private static void validateChainKeyParameters(int iteration, byte[][] chainKeys) {
+    if (iteration == 0 && chainKeys.length > 1 && chainKeys[1].length == 0) {
+      for (int i = 2; i < chainKeys.length; i++) {
+        if (chainKeys[i].length > 0) {
+          throw new IllegalArgumentException("Invalid chain key values for starting iteration");
+        }
+      }
+    } else {
+      for (int i = 0; i < chainKeys.length; i++) {
+        if (chainKeys[i].length == 0) {
+          throw new IllegalArgumentException("Invalid chain key values");
+        }
+      }
+    }
+  }
+
+  public int getIteration() {
+    return iteration;
+  }
+
+  public SenderMessageKey getSenderMessageKey() {
+    byte[][] chainKeysToUse = getDerivedSeeds();
+    return new SenderMessageKey(getIteration(), getDerivative(MESSAGE_KEY_SEED, chainKeysToUse[chainKeysToUse.length - 1]));
+  }
+
+  public FastRatchetSenderChainKey getNext() {
+    return getNext(1);
+  }
+
+  public FastRatchetSenderChainKey getNext(int count) {
+    if (count <= 0) {
+      throw new IllegalArgumentException("count must be a positive number: " + count);
+    }
+
+    int   nextIteration        = iteration + count;
+    int[] currentDecomposition = FastRatchetUtil.decomposeChainIterations(iteration, chainKeys.length);
+    int[] nextDecomposition    = FastRatchetUtil.decomposeChainIterations(nextIteration, chainKeys.length);
+
+    byte[][] chainKeysToUse = getDerivedSeeds();
+
+    ratchetChainKeys(currentDecomposition, nextDecomposition, chainKeysToUse);
+
+    return new FastRatchetSenderChainKey(nextIteration, chainKeysToUse);
+  }
+
+  private void ratchetChainKeys(int[] currentDecomposition, int[] nextDecomposition, byte[][] chains) {
+    for (int i = 0; i < chains.length; i++) {
+      while (nextDecomposition[i] > currentDecomposition[i]) {
+        if (i < chains.length - 1 && nextDecomposition[i] - 1 == currentDecomposition[i]) {
+          chains[i + 1] = getDerivative((byte) (CHAIN_KEY_SEED + i + 1), chains[i]);
+          currentDecomposition[i + 1] = 0;
+        }
+        chains[i] = getDerivative((byte) (CHAIN_KEY_SEED + i), chains[i]);
+        currentDecomposition[i]++;
+      }
+    }
+  }
+
+  public byte[][] getSeeds() {
+    return chainKeys;
+  }
+
+  /**
+   * This method is only exposed for testing.
+   */
+  public byte[][] getDerivedSeeds() {
+    byte[][] seeds = new byte[chainKeys.length][];
+
+    if (iteration == 0 && chainKeys.length > 1 && chainKeys[1].length == 0) {
+      for (int i = 0; i < chainKeys.length - 1; i++) {
+        byte[] currentKey = (i == 0) ? chainKeys[0] : seeds[i];
+        seeds[i + 1] = getDerivative((byte) (CHAIN_KEY_SEED + i + 1), currentKey);
+        seeds[i] = getDerivative((byte) (CHAIN_KEY_SEED + i), currentKey);
+      }
+    } else {
+      for (int i = 0; i < chainKeys.length; i++) {
+        seeds[i] = new byte[chainKeys[i].length];
+        System.arraycopy(chainKeys[i], 0, seeds[i], 0, chainKeys[i].length);
+      }
+    }
+
+    return seeds;
+  }
+
+  private byte[] getDerivative(byte seed, byte[] key) {
+    try {
+      Mac mac = Mac.getInstance("HmacSHA256");
+      mac.init(new SecretKeySpec(key, "HmacSHA256"));
+      mac.update(seed);
+      return mac.doFinal();
+    } catch (NoSuchAlgorithmException | InvalidKeyException e) {
+      throw new AssertionError(e);
+    }
+  }
+
+}
diff --git a/java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyRecord.java b/java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyRecord.java
new file mode 100644
index 0000000..463bf7f
--- /dev/null
+++ b/java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyRecord.java
@@ -0,0 +1,82 @@
+/**
+ * Copyright (C) 2017 WhatsApp Inc. All rights reserved.
+ *
+ * Licensed according to the LICENSE file in this repository.
+ */
+package org.whispersystems.libsignal.groups.state;
+
+import org.whispersystems.libsignal.InvalidKeyIdException;
+import org.whispersystems.libsignal.ecc.ECKeyPair;
+import org.whispersystems.libsignal.ecc.ECPublicKey;
+import org.whispersystems.libsignal.state.StorageProtos;
+
+import java.io.IOException;
+import java.util.LinkedList;
+
+/**
+ * A durable representation of a set of FastRatchetSenderKeyStates for a specific
+ * SenderKeyName.
+ */
+public class FastRatchetSenderKeyRecord {
+
+  private static final int MAX_STATES = 5;
+
+  private LinkedList<FastRatchetSenderKeyState> senderKeyStates = new LinkedList<>();
+
+  public FastRatchetSenderKeyRecord() {}
+
+  public FastRatchetSenderKeyRecord(byte[] serialized) throws IOException {
+    StorageProtos.FastRatchetSenderKeyRecordStructure senderKeyRecordStructure =
+            StorageProtos.FastRatchetSenderKeyRecordStructure.parseFrom(serialized);
+
+    for (StorageProtos.FastRatchetSenderKeyStateStructure structure : senderKeyRecordStructure.getSenderKeyStatesList()) {
+      this.senderKeyStates.add(new FastRatchetSenderKeyState(structure));
+    }
+  }
+
+  public boolean isEmpty() {
+    return senderKeyStates.isEmpty();
+  }
+
+  public FastRatchetSenderKeyState getSenderKeyState() throws InvalidKeyIdException {
+    if (!senderKeyStates.isEmpty()) {
+      return senderKeyStates.get(0);
+    } else {
+      throw new InvalidKeyIdException("No key state in record!");
+    }
+  }
+
+  public FastRatchetSenderKeyState getSenderKeyState(int keyId) throws InvalidKeyIdException {
+    for (FastRatchetSenderKeyState state : senderKeyStates) {
+      if (state.getKeyId() == keyId) {
+        return state;
+      }
+    }
+
+    throw new InvalidKeyIdException("No keys for: " + keyId);
+  }
+
+  public void addSenderKeyState(int id, int iteration, byte[][] chainKeys, ECPublicKey signatureKey) {
+    senderKeyStates.addFirst(new FastRatchetSenderKeyState(id, iteration, chainKeys, signatureKey));
+
+    if (senderKeyStates.size() > MAX_STATES) {
+      senderKeyStates.removeLast();
+    }
+  }
+
+  public void setSenderKeyState(int id, int iteration, byte[][] chainKeys, ECKeyPair signatureKey) {
+    senderKeyStates.clear();
+    senderKeyStates.add(new FastRatchetSenderKeyState(id, iteration, chainKeys, signatureKey));
+  }
+
+  public byte[] serialize() {
+    StorageProtos.FastRatchetSenderKeyRecordStructure.Builder recordStructure =
+            StorageProtos.FastRatchetSenderKeyRecordStructure.newBuilder();
+
+    for (FastRatchetSenderKeyState senderKeyState : senderKeyStates) {
+      recordStructure.addSenderKeyStates(senderKeyState.getStructure());
+    }
+
+    return recordStructure.build().toByteArray();
+  }
+}
diff --git a/java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyState.java b/java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyState.java
new file mode 100644
index 0000000..b2ba4c4
--- /dev/null
+++ b/java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyState.java
@@ -0,0 +1,112 @@
+/**
+ * Copyright (C) 2017 WhatsApp Inc. All rights reserved.
+ *
+ * Licensed according to the LICENSE file in this repository.
+ */
+package org.whispersystems.libsignal.groups.state;
+
+import com.google.protobuf.ByteString;
+
+import org.whispersystems.libsignal.InvalidKeyException;
+import org.whispersystems.libsignal.ecc.Curve;
+import org.whispersystems.libsignal.ecc.ECKeyPair;
+import org.whispersystems.libsignal.ecc.ECPrivateKey;
+import org.whispersystems.libsignal.ecc.ECPublicKey;
+import org.whispersystems.libsignal.groups.ratchet.FastRatchetSenderChainKey;
+import org.whispersystems.libsignal.util.FastRatchetUtil;
+import org.whispersystems.libsignal.util.guava.Optional;
+
+import org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure;
+import org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure;
+
+/**
+ * Represents the state of an individual SenderKey ratchet.
+ */
+public class FastRatchetSenderKeyState {
+
+  private FastRatchetSenderKeyStateStructure senderKeyStateStructure;
+
+  public FastRatchetSenderKeyState(int id, int iteration, byte[][] chainKeys, ECPublicKey signatureKey) {
+    this(id, iteration, chainKeys, signatureKey, Optional.<ECPrivateKey>absent());
+  }
+
+  public FastRatchetSenderKeyState(int id, int iteration, byte[][] chainKeys, ECKeyPair signatureKey) {
+    this(id, iteration, chainKeys, signatureKey.getPublicKey(), Optional.of(signatureKey.getPrivateKey()));
+  }
+
+  private FastRatchetSenderKeyState(int id, int iteration, byte[][] chainKeys,
+                                    ECPublicKey signatureKeyPublic,
+                                    Optional<ECPrivateKey> signatureKeyPrivate)
+  {
+    SenderKeyStateStructure.SenderSigningKey.Builder signingKeyStructure =
+        SenderKeyStateStructure.SenderSigningKey.newBuilder()
+                                                .setPublic(ByteString.copyFrom(signatureKeyPublic.serialize()));
+
+    if (signatureKeyPrivate.isPresent()) {
+      signingKeyStructure.setPrivate(ByteString.copyFrom(signatureKeyPrivate.get().serialize()));
+    }
+
+    FastRatchetSenderKeyStateStructure.Builder builder =
+        FastRatchetSenderKeyStateStructure.newBuilder()
+                                          .setSenderKeyId(id)
+                                          .setSenderSigningKey(signingKeyStructure);
+
+    int[] chainIterations = FastRatchetUtil.decomposeChainIterations(iteration, chainKeys.length);
+    for (int i = 0; i < chainKeys.length; i++) {
+      SenderKeyStateStructure.SenderChainKey senderChainKeyStructure =
+          SenderKeyStateStructure.SenderChainKey.newBuilder()
+                                                .setIteration(chainIterations[i])
+                                                .setSeed(ByteString.copyFrom(chainKeys[i]))
+                                                .build();
+      builder.addSenderChainKeys(senderChainKeyStructure);
+    }
+
+    this.senderKeyStateStructure = builder.build();
+  }
+
+  public FastRatchetSenderKeyState(FastRatchetSenderKeyStateStructure senderKeyStateStructure) {
+    this.senderKeyStateStructure = senderKeyStateStructure;
+  }
+
+  public int getKeyId() {
+    return senderKeyStateStructure.getSenderKeyId();
+  }
+
+  public FastRatchetSenderChainKey getSenderChainKey() {
+    return new FastRatchetSenderChainKey(senderKeyStateStructure.getSenderChainKeysList());
+  }
+
+  public void setSenderChainKey(FastRatchetSenderChainKey chainKey) {
+    byte[][] seeds          = chainKey.getSeeds();
+    int[]    seedIterations = FastRatchetUtil.decomposeChainIterations(chainKey.getIteration(), seeds.length);
+
+    FastRatchetSenderKeyStateStructure.Builder builder = senderKeyStateStructure.toBuilder()
+                                                                                .clearSenderChainKeys();
+
+    for (int i = 0; i < seeds.length; i++) {
+      SenderKeyStateStructure.SenderChainKey senderChainKeyStructure =
+          SenderKeyStateStructure.SenderChainKey.newBuilder()
+                                                .setIteration(seedIterations[i])
+                                                .setSeed(ByteString.copyFrom(seeds[i]))
+                                                .build();
+      builder.addSenderChainKeys(senderChainKeyStructure);
+    }
+
+    this.senderKeyStateStructure = builder.build();
+  }
+
+  public ECPublicKey getSigningKeyPublic() throws InvalidKeyException {
+    return Curve.decodePoint(senderKeyStateStructure.getSenderSigningKey()
+                                                    .getPublic()
+                                                    .toByteArray(), 0);
+  }
+
+  public ECPrivateKey getSigningKeyPrivate() {
+    return Curve.decodePrivatePoint(senderKeyStateStructure.getSenderSigningKey()
+                                                           .getPrivate().toByteArray());
+  }
+
+  public FastRatchetSenderKeyStateStructure getStructure() {
+    return senderKeyStateStructure;
+  }
+}
diff --git a/java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyStore.java b/java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyStore.java
new file mode 100644
index 0000000..5031e9e
--- /dev/null
+++ b/java/src/main/java/org/whispersystems/libsignal/groups/state/FastRatchetSenderKeyStore.java
@@ -0,0 +1,37 @@
+/**
+ * Copyright (C) 2017 WhatsApp Inc. All rights reserved.
+ *
+ * Licensed according to the LICENSE file in this repository.
+ */
+package org.whispersystems.libsignal.groups.state;
+
+import org.whispersystems.libsignal.groups.SenderKeyName;
+
+public interface FastRatchetSenderKeyStore {
+
+  /**
+   * Commit to storage the {@link org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyRecord}
+   * for a given (groupId + senderId + deviceId) tuple.
+   *
+   * @param senderKeyName the (groupId + senderId + deviceId) tuple.
+   * @param record the current FastRatchetSenderKeyRecord for the specified senderKeyName.
+   */
+  public void storeFastRatchetSenderKey(SenderKeyName senderKeyName, FastRatchetSenderKeyRecord record);
+
+  /**
+   * Returns a copy of the {@link org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyRecord}
+   * corresponding to the (groupId + senderId + deviceId) tuple, or a new FastRatchetSenderKeyRecord if
+   * one does not currently exist.
+   * <p>
+   * It is important that implementations return a copy of the current durable information.  The
+   * returned FastRatchetSenderKeyRecord may be modified, but those changes should not have an
+   * effect on the durable session state (what is returned by subsequent calls to this method)
+   * without the store method being called here first.
+   *
+   * @param senderKeyName The (groupId + senderId + deviceId) tuple.
+   * @return a copy of the FastRatchetSenderKeyRecord corresponding to the (groupId + senderId + deviceId
+   *         tuple, or a new SenderKeyRecord if one does not currently exist.
+   */
+
+  public FastRatchetSenderKeyRecord loadFastRatchetSenderKey(SenderKeyName senderKeyName);
+}
diff --git a/java/src/main/java/org/whispersystems/libsignal/groups/state/SenderKeyState.java b/java/src/main/java/org/whispersystems/libsignal/groups/state/SenderKeyState.java
index 5824d8b..30b980a 100644
--- a/java/src/main/java/org/whispersystems/libsignal/groups/state/SenderKeyState.java
+++ b/java/src/main/java/org/whispersystems/libsignal/groups/state/SenderKeyState.java
@@ -98,8 +98,13 @@ public class SenderKeyState {
   }
 
   public ECPrivateKey getSigningKeyPrivate() {
-    return Curve.decodePrivatePoint(senderKeyStateStructure.getSenderSigningKey()
-                                                           .getPrivate().toByteArray());
+    if (senderKeyStateStructure.hasSenderSigningKey() &&
+        senderKeyStateStructure.getSenderSigningKey().hasPrivate()) {
+      return Curve.decodePrivatePoint(senderKeyStateStructure.getSenderSigningKey()
+                                                             .getPrivate().toByteArray());
+    } else {
+      return null;
+    }
   }
 
   public boolean hasSenderMessageKey(int iteration) {
diff --git a/java/src/main/java/org/whispersystems/libsignal/protocol/CiphertextMessage.java b/java/src/main/java/org/whispersystems/libsignal/protocol/CiphertextMessage.java
index 4584261..59c9a10 100644
--- a/java/src/main/java/org/whispersystems/libsignal/protocol/CiphertextMessage.java
+++ b/java/src/main/java/org/whispersystems/libsignal/protocol/CiphertextMessage.java
@@ -10,10 +10,11 @@ public interface CiphertextMessage {
   public static final int UNSUPPORTED_VERSION = 1;
   public static final int CURRENT_VERSION     = 3;
 
-  public static final int WHISPER_TYPE                = 2;
-  public static final int PREKEY_TYPE                 = 3;
-  public static final int SENDERKEY_TYPE              = 4;
-  public static final int SENDERKEY_DISTRIBUTION_TYPE = 5;
+  public static final int WHISPER_TYPE                            = 2;
+  public static final int PREKEY_TYPE                             = 3;
+  public static final int SENDERKEY_TYPE                          = 4;
+  public static final int SENDERKEY_DISTRIBUTION_TYPE             = 5;
+  public static final int FASTRATCHET_SENDERKEY_DISTRIBUTION_TYPE = 6;
 
   // This should be the worst case (worse than V2).  So not always accurate, but good enough for padding.
   public static final int ENCRYPTED_MESSAGE_OVERHEAD = 53;
diff --git a/java/src/main/java/org/whispersystems/libsignal/protocol/FastRatchetSenderKeyDistributionMessage.java b/java/src/main/java/org/whispersystems/libsignal/protocol/FastRatchetSenderKeyDistributionMessage.java
new file mode 100644
index 0000000..35e6a3c
--- /dev/null
+++ b/java/src/main/java/org/whispersystems/libsignal/protocol/FastRatchetSenderKeyDistributionMessage.java
@@ -0,0 +1,114 @@
+/**
+ * Copyright (C) 2017 WhatsApp Inc. All rights reserved.
+ *
+ * Licensed according to the LICENSE file in this repository.
+ */
+package org.whispersystems.libsignal.protocol;
+
+import com.google.protobuf.ByteString;
+import com.google.protobuf.InvalidProtocolBufferException;
+
+import org.whispersystems.libsignal.InvalidKeyException;
+import org.whispersystems.libsignal.InvalidMessageException;
+import org.whispersystems.libsignal.LegacyMessageException;
+import org.whispersystems.libsignal.ecc.Curve;
+import org.whispersystems.libsignal.ecc.ECPublicKey;
+import org.whispersystems.libsignal.util.ByteUtil;
+
+import java.util.List;
+
+public class FastRatchetSenderKeyDistributionMessage implements CiphertextMessage {
+
+  private final int         id;
+  private final int         iteration;
+  private final byte[][]    chainKeys;
+  private final ECPublicKey signatureKey;
+  private final byte[]      serialized;
+
+  public FastRatchetSenderKeyDistributionMessage(int id, int iteration, byte[][] chainKeys, ECPublicKey signatureKey) {
+    byte[] version = {ByteUtil.intsToByteHighAndLow(CURRENT_VERSION, CURRENT_VERSION)};
+
+    SignalProtos.FastRatchetSenderKeyDistributionMessage.Builder builder = SignalProtos.FastRatchetSenderKeyDistributionMessage.newBuilder()
+            .setId(id)
+            .setIteration(iteration)
+            .setSigningKey(ByteString.copyFrom(signatureKey.serialize()));
+
+    for (byte[] chainKey : chainKeys) {
+      builder.addChainKeys(ByteString.copyFrom(chainKey));
+    }
+
+    byte[] protobuf = builder.build().toByteArray();
+
+    this.id           = id;
+    this.iteration    = iteration;
+    this.chainKeys    = chainKeys;
+    this.signatureKey = signatureKey;
+    this.serialized   = ByteUtil.combine(version, protobuf);
+  }
+
+  public FastRatchetSenderKeyDistributionMessage(byte[] serialized) throws LegacyMessageException, InvalidMessageException {
+    try {
+      byte[][] messageParts = ByteUtil.split(serialized, 1, serialized.length - 1);
+      byte     version      = messageParts[0][0];
+      byte[]   message      = messageParts[1];
+
+      if (ByteUtil.highBitsToInt(version) < CiphertextMessage.CURRENT_VERSION) {
+        throw new LegacyMessageException("Legacy message: " + ByteUtil.highBitsToInt(version));
+      }
+
+      if (ByteUtil.highBitsToInt(version) > CURRENT_VERSION) {
+        throw new InvalidMessageException("Unknown version: " + ByteUtil.highBitsToInt(version));
+      }
+
+      SignalProtos.FastRatchetSenderKeyDistributionMessage distributionMessage = SignalProtos.FastRatchetSenderKeyDistributionMessage.parseFrom(message);
+
+      if (!distributionMessage.hasId()        ||
+              !distributionMessage.hasIteration() ||
+              distributionMessage.getChainKeysCount() <= 0 ||
+              !distributionMessage.hasSigningKey())
+      {
+        throw new InvalidMessageException("Incomplete message.");
+      }
+
+      this.serialized   = serialized;
+      this.id           = distributionMessage.getId();
+      this.iteration    = distributionMessage.getIteration();
+      this.signatureKey = Curve.decodePoint(distributionMessage.getSigningKey().toByteArray(), 0);
+
+      List<ByteString> chainKeyList = distributionMessage.getChainKeysList();
+      this.chainKeys = new byte[chainKeyList.size()][];
+      for (int i = 0; i < this.chainKeys.length; i++) {
+        this.chainKeys[i] = chainKeyList.get(i).toByteArray();
+      }
+
+    } catch (InvalidProtocolBufferException | InvalidKeyException e) {
+      throw new InvalidMessageException(e);
+    }
+  }
+
+  @Override
+  public byte[] serialize() {
+    return serialized;
+  }
+
+  @Override
+  public int getType() {
+    return FASTRATCHET_SENDERKEY_DISTRIBUTION_TYPE;
+  }
+
+  public int getIteration() {
+    return iteration;
+  }
+
+  public byte[][] getChainKeys() {
+    return chainKeys;
+  }
+
+  public ECPublicKey getSignatureKey() {
+    return signatureKey;
+  }
+
+  public int getId() {
+    return id;
+  }
+}
diff --git a/java/src/main/java/org/whispersystems/libsignal/protocol/SignalProtos.java b/java/src/main/java/org/whispersystems/libsignal/protocol/SignalProtos.java
index 82e1140..36e73d5 100644
--- a/java/src/main/java/org/whispersystems/libsignal/protocol/SignalProtos.java
+++ b/java/src/main/java/org/whispersystems/libsignal/protocol/SignalProtos.java
@@ -6,12 +6,12 @@ package org.whispersystems.libsignal.protocol;
 public final class SignalProtos {
   private SignalProtos() {}
   public static void registerAllExtensions(
-      com.google.protobuf.ExtensionRegistry registry) {
+      com.google.protobuf.ExtensionRegistryLite registry) {
   }
-  public interface SignalMessageOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface SignalMessageOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.SignalMessage)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional bytes ratchetKey = 1;
     /**
      * <code>optional bytes ratchetKey = 1;</code>
      */
@@ -21,7 +21,6 @@ public final class SignalProtos {
      */
     com.google.protobuf.ByteString getRatchetKey();
 
-    // optional uint32 counter = 2;
     /**
      * <code>optional uint32 counter = 2;</code>
      */
@@ -31,7 +30,6 @@ public final class SignalProtos {
      */
     int getCounter();
 
-    // optional uint32 previousCounter = 3;
     /**
      * <code>optional uint32 previousCounter = 3;</code>
      */
@@ -41,7 +39,6 @@ public final class SignalProtos {
      */
     int getPreviousCounter();
 
-    // optional bytes ciphertext = 4;
     /**
      * <code>optional bytes ciphertext = 4;</code>
      */
@@ -55,14 +52,15 @@ public final class SignalProtos {
    * Protobuf type {@code textsecure.SignalMessage}
    */
   public static final class SignalMessage extends
-      com.google.protobuf.GeneratedMessage
-      implements SignalMessageOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.SignalMessage)
+      SignalMessageOrBuilder {
     // Use SignalMessage.newBuilder() to construct.
-    private SignalMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private SignalMessage(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private SignalMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private SignalMessage(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final SignalMessage defaultInstance;
     public static SignalMessage getDefaultInstance() {
@@ -73,20 +71,18 @@ public final class SignalProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private SignalMessage(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -96,7 +92,7 @@ public final class SignalProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -130,22 +126,16 @@ public final class SignalProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SignalMessage_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SignalMessage_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<SignalMessage> PARSER =
         new com.google.protobuf.AbstractParser<SignalMessage>() {
       public SignalMessage parsePartialFrom(
@@ -162,7 +152,6 @@ public final class SignalProtos {
     }
 
     private int bitField0_;
-    // optional bytes ratchetKey = 1;
     public static final int RATCHETKEY_FIELD_NUMBER = 1;
     private com.google.protobuf.ByteString ratchetKey_;
     /**
@@ -178,7 +167,6 @@ public final class SignalProtos {
       return ratchetKey_;
     }
 
-    // optional uint32 counter = 2;
     public static final int COUNTER_FIELD_NUMBER = 2;
     private int counter_;
     /**
@@ -194,7 +182,6 @@ public final class SignalProtos {
       return counter_;
     }
 
-    // optional uint32 previousCounter = 3;
     public static final int PREVIOUSCOUNTER_FIELD_NUMBER = 3;
     private int previousCounter_;
     /**
@@ -210,7 +197,6 @@ public final class SignalProtos {
       return previousCounter_;
     }
 
-    // optional bytes ciphertext = 4;
     public static final int CIPHERTEXT_FIELD_NUMBER = 4;
     private com.google.protobuf.ByteString ciphertext_;
     /**
@@ -235,7 +221,8 @@ public final class SignalProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -256,7 +243,7 @@ public final class SignalProtos {
       if (((bitField0_ & 0x00000008) == 0x00000008)) {
         output.writeBytes(4, ciphertext_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -281,7 +268,7 @@ public final class SignalProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeBytesSize(4, ciphertext_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -353,43 +340,21 @@ public final class SignalProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.SignalMessage}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.protocol.SignalProtos.SignalMessageOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SignalMessage_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SignalMessage_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.SignalMessage)
+        org.whispersystems.libsignal.protocol.SignalProtos.SignalMessageOrBuilder {
       // Construct using org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -412,11 +377,6 @@ public final class SignalProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SignalMessage_descriptor;
-      }
-
       public org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage getDefaultInstanceForType() {
         return org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage.getDefaultInstance();
       }
@@ -450,19 +410,9 @@ public final class SignalProtos {
         }
         result.ciphertext_ = ciphertext_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage) {
-          return mergeFrom((org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage other) {
         if (other == org.whispersystems.libsignal.protocol.SignalProtos.SignalMessage.getDefaultInstance()) return this;
         if (other.hasRatchetKey()) {
@@ -477,7 +427,8 @@ public final class SignalProtos {
         if (other.hasCiphertext()) {
           setCiphertext(other.getCiphertext());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -504,7 +455,6 @@ public final class SignalProtos {
       }
       private int bitField0_;
 
-      // optional bytes ratchetKey = 1;
       private com.google.protobuf.ByteString ratchetKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes ratchetKey = 1;</code>
@@ -527,7 +477,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000001;
         ratchetKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -536,11 +486,10 @@ public final class SignalProtos {
       public Builder clearRatchetKey() {
         bitField0_ = (bitField0_ & ~0x00000001);
         ratchetKey_ = getDefaultInstance().getRatchetKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional uint32 counter = 2;
       private int counter_ ;
       /**
        * <code>optional uint32 counter = 2;</code>
@@ -560,7 +509,7 @@ public final class SignalProtos {
       public Builder setCounter(int value) {
         bitField0_ |= 0x00000002;
         counter_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -569,11 +518,10 @@ public final class SignalProtos {
       public Builder clearCounter() {
         bitField0_ = (bitField0_ & ~0x00000002);
         counter_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional uint32 previousCounter = 3;
       private int previousCounter_ ;
       /**
        * <code>optional uint32 previousCounter = 3;</code>
@@ -593,7 +541,7 @@ public final class SignalProtos {
       public Builder setPreviousCounter(int value) {
         bitField0_ |= 0x00000004;
         previousCounter_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -602,11 +550,10 @@ public final class SignalProtos {
       public Builder clearPreviousCounter() {
         bitField0_ = (bitField0_ & ~0x00000004);
         previousCounter_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes ciphertext = 4;
       private com.google.protobuf.ByteString ciphertext_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes ciphertext = 4;</code>
@@ -629,7 +576,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000008;
         ciphertext_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -638,7 +585,7 @@ public final class SignalProtos {
       public Builder clearCiphertext() {
         bitField0_ = (bitField0_ & ~0x00000008);
         ciphertext_ = getDefaultInstance().getCiphertext();
-        onChanged();
+        
         return this;
       }
 
@@ -653,10 +600,10 @@ public final class SignalProtos {
     // @@protoc_insertion_point(class_scope:textsecure.SignalMessage)
   }
 
-  public interface PreKeySignalMessageOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface PreKeySignalMessageOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.PreKeySignalMessage)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 registrationId = 5;
     /**
      * <code>optional uint32 registrationId = 5;</code>
      */
@@ -666,7 +613,6 @@ public final class SignalProtos {
      */
     int getRegistrationId();
 
-    // optional uint32 preKeyId = 1;
     /**
      * <code>optional uint32 preKeyId = 1;</code>
      */
@@ -676,7 +622,6 @@ public final class SignalProtos {
      */
     int getPreKeyId();
 
-    // optional uint32 signedPreKeyId = 6;
     /**
      * <code>optional uint32 signedPreKeyId = 6;</code>
      */
@@ -686,7 +631,6 @@ public final class SignalProtos {
      */
     int getSignedPreKeyId();
 
-    // optional bytes baseKey = 2;
     /**
      * <code>optional bytes baseKey = 2;</code>
      */
@@ -696,7 +640,6 @@ public final class SignalProtos {
      */
     com.google.protobuf.ByteString getBaseKey();
 
-    // optional bytes identityKey = 3;
     /**
      * <code>optional bytes identityKey = 3;</code>
      */
@@ -706,12 +649,11 @@ public final class SignalProtos {
      */
     com.google.protobuf.ByteString getIdentityKey();
 
-    // optional bytes message = 4;
     /**
      * <code>optional bytes message = 4;</code>
      *
      * <pre>
-     * WhisperMessage
+     * SignalMessage
      * </pre>
      */
     boolean hasMessage();
@@ -719,7 +661,7 @@ public final class SignalProtos {
      * <code>optional bytes message = 4;</code>
      *
      * <pre>
-     * WhisperMessage
+     * SignalMessage
      * </pre>
      */
     com.google.protobuf.ByteString getMessage();
@@ -728,14 +670,15 @@ public final class SignalProtos {
    * Protobuf type {@code textsecure.PreKeySignalMessage}
    */
   public static final class PreKeySignalMessage extends
-      com.google.protobuf.GeneratedMessage
-      implements PreKeySignalMessageOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.PreKeySignalMessage)
+      PreKeySignalMessageOrBuilder {
     // Use PreKeySignalMessage.newBuilder() to construct.
-    private PreKeySignalMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private PreKeySignalMessage(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private PreKeySignalMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private PreKeySignalMessage(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final PreKeySignalMessage defaultInstance;
     public static PreKeySignalMessage getDefaultInstance() {
@@ -746,20 +689,18 @@ public final class SignalProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private PreKeySignalMessage(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -769,7 +710,7 @@ public final class SignalProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -813,22 +754,16 @@ public final class SignalProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_PreKeySignalMessage_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_PreKeySignalMessage_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<PreKeySignalMessage> PARSER =
         new com.google.protobuf.AbstractParser<PreKeySignalMessage>() {
       public PreKeySignalMessage parsePartialFrom(
@@ -845,7 +780,6 @@ public final class SignalProtos {
     }
 
     private int bitField0_;
-    // optional uint32 registrationId = 5;
     public static final int REGISTRATIONID_FIELD_NUMBER = 5;
     private int registrationId_;
     /**
@@ -861,7 +795,6 @@ public final class SignalProtos {
       return registrationId_;
     }
 
-    // optional uint32 preKeyId = 1;
     public static final int PREKEYID_FIELD_NUMBER = 1;
     private int preKeyId_;
     /**
@@ -877,7 +810,6 @@ public final class SignalProtos {
       return preKeyId_;
     }
 
-    // optional uint32 signedPreKeyId = 6;
     public static final int SIGNEDPREKEYID_FIELD_NUMBER = 6;
     private int signedPreKeyId_;
     /**
@@ -893,7 +825,6 @@ public final class SignalProtos {
       return signedPreKeyId_;
     }
 
-    // optional bytes baseKey = 2;
     public static final int BASEKEY_FIELD_NUMBER = 2;
     private com.google.protobuf.ByteString baseKey_;
     /**
@@ -909,7 +840,6 @@ public final class SignalProtos {
       return baseKey_;
     }
 
-    // optional bytes identityKey = 3;
     public static final int IDENTITYKEY_FIELD_NUMBER = 3;
     private com.google.protobuf.ByteString identityKey_;
     /**
@@ -925,14 +855,13 @@ public final class SignalProtos {
       return identityKey_;
     }
 
-    // optional bytes message = 4;
     public static final int MESSAGE_FIELD_NUMBER = 4;
     private com.google.protobuf.ByteString message_;
     /**
      * <code>optional bytes message = 4;</code>
      *
      * <pre>
-     * WhisperMessage
+     * SignalMessage
      * </pre>
      */
     public boolean hasMessage() {
@@ -942,7 +871,7 @@ public final class SignalProtos {
      * <code>optional bytes message = 4;</code>
      *
      * <pre>
-     * WhisperMessage
+     * SignalMessage
      * </pre>
      */
     public com.google.protobuf.ByteString getMessage() {
@@ -960,7 +889,8 @@ public final class SignalProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -987,7 +917,7 @@ public final class SignalProtos {
       if (((bitField0_ & 0x00000004) == 0x00000004)) {
         output.writeUInt32(6, signedPreKeyId_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -1020,7 +950,7 @@ public final class SignalProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeUInt32Size(6, signedPreKeyId_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -1092,43 +1022,21 @@ public final class SignalProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.PreKeySignalMessage}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessageOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_PreKeySignalMessage_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_PreKeySignalMessage_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.PreKeySignalMessage)
+        org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessageOrBuilder {
       // Construct using org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -1155,11 +1063,6 @@ public final class SignalProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_PreKeySignalMessage_descriptor;
-      }
-
       public org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage getDefaultInstanceForType() {
         return org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage.getDefaultInstance();
       }
@@ -1201,19 +1104,9 @@ public final class SignalProtos {
         }
         result.message_ = message_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage) {
-          return mergeFrom((org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage other) {
         if (other == org.whispersystems.libsignal.protocol.SignalProtos.PreKeySignalMessage.getDefaultInstance()) return this;
         if (other.hasRegistrationId()) {
@@ -1234,7 +1127,8 @@ public final class SignalProtos {
         if (other.hasMessage()) {
           setMessage(other.getMessage());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -1261,7 +1155,6 @@ public final class SignalProtos {
       }
       private int bitField0_;
 
-      // optional uint32 registrationId = 5;
       private int registrationId_ ;
       /**
        * <code>optional uint32 registrationId = 5;</code>
@@ -1281,7 +1174,7 @@ public final class SignalProtos {
       public Builder setRegistrationId(int value) {
         bitField0_ |= 0x00000001;
         registrationId_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -1290,11 +1183,10 @@ public final class SignalProtos {
       public Builder clearRegistrationId() {
         bitField0_ = (bitField0_ & ~0x00000001);
         registrationId_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional uint32 preKeyId = 1;
       private int preKeyId_ ;
       /**
        * <code>optional uint32 preKeyId = 1;</code>
@@ -1314,7 +1206,7 @@ public final class SignalProtos {
       public Builder setPreKeyId(int value) {
         bitField0_ |= 0x00000002;
         preKeyId_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -1323,11 +1215,10 @@ public final class SignalProtos {
       public Builder clearPreKeyId() {
         bitField0_ = (bitField0_ & ~0x00000002);
         preKeyId_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional uint32 signedPreKeyId = 6;
       private int signedPreKeyId_ ;
       /**
        * <code>optional uint32 signedPreKeyId = 6;</code>
@@ -1347,7 +1238,7 @@ public final class SignalProtos {
       public Builder setSignedPreKeyId(int value) {
         bitField0_ |= 0x00000004;
         signedPreKeyId_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -1356,11 +1247,10 @@ public final class SignalProtos {
       public Builder clearSignedPreKeyId() {
         bitField0_ = (bitField0_ & ~0x00000004);
         signedPreKeyId_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes baseKey = 2;
       private com.google.protobuf.ByteString baseKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes baseKey = 2;</code>
@@ -1383,7 +1273,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000008;
         baseKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -1392,11 +1282,10 @@ public final class SignalProtos {
       public Builder clearBaseKey() {
         bitField0_ = (bitField0_ & ~0x00000008);
         baseKey_ = getDefaultInstance().getBaseKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes identityKey = 3;
       private com.google.protobuf.ByteString identityKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes identityKey = 3;</code>
@@ -1419,7 +1308,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000010;
         identityKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -1428,17 +1317,16 @@ public final class SignalProtos {
       public Builder clearIdentityKey() {
         bitField0_ = (bitField0_ & ~0x00000010);
         identityKey_ = getDefaultInstance().getIdentityKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes message = 4;
       private com.google.protobuf.ByteString message_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes message = 4;</code>
        *
        * <pre>
-       * WhisperMessage
+       * SignalMessage
        * </pre>
        */
       public boolean hasMessage() {
@@ -1448,7 +1336,7 @@ public final class SignalProtos {
        * <code>optional bytes message = 4;</code>
        *
        * <pre>
-       * WhisperMessage
+       * SignalMessage
        * </pre>
        */
       public com.google.protobuf.ByteString getMessage() {
@@ -1458,7 +1346,7 @@ public final class SignalProtos {
        * <code>optional bytes message = 4;</code>
        *
        * <pre>
-       * WhisperMessage
+       * SignalMessage
        * </pre>
        */
       public Builder setMessage(com.google.protobuf.ByteString value) {
@@ -1467,20 +1355,20 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000020;
         message_ = value;
-        onChanged();
+        
         return this;
       }
       /**
        * <code>optional bytes message = 4;</code>
        *
        * <pre>
-       * WhisperMessage
+       * SignalMessage
        * </pre>
        */
       public Builder clearMessage() {
         bitField0_ = (bitField0_ & ~0x00000020);
         message_ = getDefaultInstance().getMessage();
-        onChanged();
+        
         return this;
       }
 
@@ -1495,10 +1383,10 @@ public final class SignalProtos {
     // @@protoc_insertion_point(class_scope:textsecure.PreKeySignalMessage)
   }
 
-  public interface KeyExchangeMessageOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface KeyExchangeMessageOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.KeyExchangeMessage)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 id = 1;
     /**
      * <code>optional uint32 id = 1;</code>
      */
@@ -1508,7 +1396,6 @@ public final class SignalProtos {
      */
     int getId();
 
-    // optional bytes baseKey = 2;
     /**
      * <code>optional bytes baseKey = 2;</code>
      */
@@ -1518,7 +1405,6 @@ public final class SignalProtos {
      */
     com.google.protobuf.ByteString getBaseKey();
 
-    // optional bytes ratchetKey = 3;
     /**
      * <code>optional bytes ratchetKey = 3;</code>
      */
@@ -1528,7 +1414,6 @@ public final class SignalProtos {
      */
     com.google.protobuf.ByteString getRatchetKey();
 
-    // optional bytes identityKey = 4;
     /**
      * <code>optional bytes identityKey = 4;</code>
      */
@@ -1538,7 +1423,6 @@ public final class SignalProtos {
      */
     com.google.protobuf.ByteString getIdentityKey();
 
-    // optional bytes baseKeySignature = 5;
     /**
      * <code>optional bytes baseKeySignature = 5;</code>
      */
@@ -1552,14 +1436,15 @@ public final class SignalProtos {
    * Protobuf type {@code textsecure.KeyExchangeMessage}
    */
   public static final class KeyExchangeMessage extends
-      com.google.protobuf.GeneratedMessage
-      implements KeyExchangeMessageOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.KeyExchangeMessage)
+      KeyExchangeMessageOrBuilder {
     // Use KeyExchangeMessage.newBuilder() to construct.
-    private KeyExchangeMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private KeyExchangeMessage(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private KeyExchangeMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private KeyExchangeMessage(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final KeyExchangeMessage defaultInstance;
     public static KeyExchangeMessage getDefaultInstance() {
@@ -1570,20 +1455,18 @@ public final class SignalProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private KeyExchangeMessage(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -1593,7 +1476,7 @@ public final class SignalProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -1632,22 +1515,16 @@ public final class SignalProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_KeyExchangeMessage_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_KeyExchangeMessage_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<KeyExchangeMessage> PARSER =
         new com.google.protobuf.AbstractParser<KeyExchangeMessage>() {
       public KeyExchangeMessage parsePartialFrom(
@@ -1664,7 +1541,6 @@ public final class SignalProtos {
     }
 
     private int bitField0_;
-    // optional uint32 id = 1;
     public static final int ID_FIELD_NUMBER = 1;
     private int id_;
     /**
@@ -1680,7 +1556,6 @@ public final class SignalProtos {
       return id_;
     }
 
-    // optional bytes baseKey = 2;
     public static final int BASEKEY_FIELD_NUMBER = 2;
     private com.google.protobuf.ByteString baseKey_;
     /**
@@ -1696,7 +1571,6 @@ public final class SignalProtos {
       return baseKey_;
     }
 
-    // optional bytes ratchetKey = 3;
     public static final int RATCHETKEY_FIELD_NUMBER = 3;
     private com.google.protobuf.ByteString ratchetKey_;
     /**
@@ -1712,7 +1586,6 @@ public final class SignalProtos {
       return ratchetKey_;
     }
 
-    // optional bytes identityKey = 4;
     public static final int IDENTITYKEY_FIELD_NUMBER = 4;
     private com.google.protobuf.ByteString identityKey_;
     /**
@@ -1728,7 +1601,6 @@ public final class SignalProtos {
       return identityKey_;
     }
 
-    // optional bytes baseKeySignature = 5;
     public static final int BASEKEYSIGNATURE_FIELD_NUMBER = 5;
     private com.google.protobuf.ByteString baseKeySignature_;
     /**
@@ -1754,7 +1626,8 @@ public final class SignalProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -1778,7 +1651,7 @@ public final class SignalProtos {
       if (((bitField0_ & 0x00000010) == 0x00000010)) {
         output.writeBytes(5, baseKeySignature_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -1807,7 +1680,7 @@ public final class SignalProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeBytesSize(5, baseKeySignature_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -1879,43 +1752,21 @@ public final class SignalProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.KeyExchangeMessage}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessageOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_KeyExchangeMessage_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_KeyExchangeMessage_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.KeyExchangeMessage)
+        org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessageOrBuilder {
       // Construct using org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -1940,11 +1791,6 @@ public final class SignalProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_KeyExchangeMessage_descriptor;
-      }
-
       public org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage getDefaultInstanceForType() {
         return org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage.getDefaultInstance();
       }
@@ -1982,19 +1828,9 @@ public final class SignalProtos {
         }
         result.baseKeySignature_ = baseKeySignature_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage) {
-          return mergeFrom((org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage other) {
         if (other == org.whispersystems.libsignal.protocol.SignalProtos.KeyExchangeMessage.getDefaultInstance()) return this;
         if (other.hasId()) {
@@ -2012,7 +1848,8 @@ public final class SignalProtos {
         if (other.hasBaseKeySignature()) {
           setBaseKeySignature(other.getBaseKeySignature());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -2039,7 +1876,6 @@ public final class SignalProtos {
       }
       private int bitField0_;
 
-      // optional uint32 id = 1;
       private int id_ ;
       /**
        * <code>optional uint32 id = 1;</code>
@@ -2059,7 +1895,7 @@ public final class SignalProtos {
       public Builder setId(int value) {
         bitField0_ |= 0x00000001;
         id_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -2068,11 +1904,10 @@ public final class SignalProtos {
       public Builder clearId() {
         bitField0_ = (bitField0_ & ~0x00000001);
         id_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes baseKey = 2;
       private com.google.protobuf.ByteString baseKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes baseKey = 2;</code>
@@ -2095,7 +1930,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000002;
         baseKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -2104,11 +1939,10 @@ public final class SignalProtos {
       public Builder clearBaseKey() {
         bitField0_ = (bitField0_ & ~0x00000002);
         baseKey_ = getDefaultInstance().getBaseKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes ratchetKey = 3;
       private com.google.protobuf.ByteString ratchetKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes ratchetKey = 3;</code>
@@ -2131,7 +1965,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000004;
         ratchetKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -2140,11 +1974,10 @@ public final class SignalProtos {
       public Builder clearRatchetKey() {
         bitField0_ = (bitField0_ & ~0x00000004);
         ratchetKey_ = getDefaultInstance().getRatchetKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes identityKey = 4;
       private com.google.protobuf.ByteString identityKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes identityKey = 4;</code>
@@ -2167,7 +2000,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000008;
         identityKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -2176,11 +2009,10 @@ public final class SignalProtos {
       public Builder clearIdentityKey() {
         bitField0_ = (bitField0_ & ~0x00000008);
         identityKey_ = getDefaultInstance().getIdentityKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes baseKeySignature = 5;
       private com.google.protobuf.ByteString baseKeySignature_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes baseKeySignature = 5;</code>
@@ -2203,7 +2035,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000010;
         baseKeySignature_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -2212,7 +2044,7 @@ public final class SignalProtos {
       public Builder clearBaseKeySignature() {
         bitField0_ = (bitField0_ & ~0x00000010);
         baseKeySignature_ = getDefaultInstance().getBaseKeySignature();
-        onChanged();
+        
         return this;
       }
 
@@ -2227,10 +2059,10 @@ public final class SignalProtos {
     // @@protoc_insertion_point(class_scope:textsecure.KeyExchangeMessage)
   }
 
-  public interface SenderKeyMessageOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface SenderKeyMessageOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.SenderKeyMessage)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 id = 1;
     /**
      * <code>optional uint32 id = 1;</code>
      */
@@ -2240,7 +2072,6 @@ public final class SignalProtos {
      */
     int getId();
 
-    // optional uint32 iteration = 2;
     /**
      * <code>optional uint32 iteration = 2;</code>
      */
@@ -2250,7 +2081,6 @@ public final class SignalProtos {
      */
     int getIteration();
 
-    // optional bytes ciphertext = 3;
     /**
      * <code>optional bytes ciphertext = 3;</code>
      */
@@ -2264,14 +2094,15 @@ public final class SignalProtos {
    * Protobuf type {@code textsecure.SenderKeyMessage}
    */
   public static final class SenderKeyMessage extends
-      com.google.protobuf.GeneratedMessage
-      implements SenderKeyMessageOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.SenderKeyMessage)
+      SenderKeyMessageOrBuilder {
     // Use SenderKeyMessage.newBuilder() to construct.
-    private SenderKeyMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private SenderKeyMessage(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private SenderKeyMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private SenderKeyMessage(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final SenderKeyMessage defaultInstance;
     public static SenderKeyMessage getDefaultInstance() {
@@ -2282,20 +2113,18 @@ public final class SignalProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private SenderKeyMessage(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -2305,7 +2134,7 @@ public final class SignalProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -2334,22 +2163,16 @@ public final class SignalProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyMessage_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyMessage_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<SenderKeyMessage> PARSER =
         new com.google.protobuf.AbstractParser<SenderKeyMessage>() {
       public SenderKeyMessage parsePartialFrom(
@@ -2366,7 +2189,6 @@ public final class SignalProtos {
     }
 
     private int bitField0_;
-    // optional uint32 id = 1;
     public static final int ID_FIELD_NUMBER = 1;
     private int id_;
     /**
@@ -2382,7 +2204,6 @@ public final class SignalProtos {
       return id_;
     }
 
-    // optional uint32 iteration = 2;
     public static final int ITERATION_FIELD_NUMBER = 2;
     private int iteration_;
     /**
@@ -2398,7 +2219,6 @@ public final class SignalProtos {
       return iteration_;
     }
 
-    // optional bytes ciphertext = 3;
     public static final int CIPHERTEXT_FIELD_NUMBER = 3;
     private com.google.protobuf.ByteString ciphertext_;
     /**
@@ -2422,7 +2242,8 @@ public final class SignalProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -2440,7 +2261,7 @@ public final class SignalProtos {
       if (((bitField0_ & 0x00000004) == 0x00000004)) {
         output.writeBytes(3, ciphertext_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -2461,7 +2282,7 @@ public final class SignalProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeBytesSize(3, ciphertext_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -2533,43 +2354,21 @@ public final class SignalProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.SenderKeyMessage}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessageOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyMessage_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyMessage_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.SenderKeyMessage)
+        org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessageOrBuilder {
       // Construct using org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -2590,11 +2389,6 @@ public final class SignalProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyMessage_descriptor;
-      }
-
       public org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage getDefaultInstanceForType() {
         return org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage.getDefaultInstance();
       }
@@ -2624,19 +2418,9 @@ public final class SignalProtos {
         }
         result.ciphertext_ = ciphertext_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage) {
-          return mergeFrom((org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage other) {
         if (other == org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyMessage.getDefaultInstance()) return this;
         if (other.hasId()) {
@@ -2648,7 +2432,8 @@ public final class SignalProtos {
         if (other.hasCiphertext()) {
           setCiphertext(other.getCiphertext());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -2675,7 +2460,6 @@ public final class SignalProtos {
       }
       private int bitField0_;
 
-      // optional uint32 id = 1;
       private int id_ ;
       /**
        * <code>optional uint32 id = 1;</code>
@@ -2695,7 +2479,7 @@ public final class SignalProtos {
       public Builder setId(int value) {
         bitField0_ |= 0x00000001;
         id_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -2704,11 +2488,10 @@ public final class SignalProtos {
       public Builder clearId() {
         bitField0_ = (bitField0_ & ~0x00000001);
         id_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional uint32 iteration = 2;
       private int iteration_ ;
       /**
        * <code>optional uint32 iteration = 2;</code>
@@ -2728,7 +2511,7 @@ public final class SignalProtos {
       public Builder setIteration(int value) {
         bitField0_ |= 0x00000002;
         iteration_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -2737,11 +2520,10 @@ public final class SignalProtos {
       public Builder clearIteration() {
         bitField0_ = (bitField0_ & ~0x00000002);
         iteration_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes ciphertext = 3;
       private com.google.protobuf.ByteString ciphertext_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes ciphertext = 3;</code>
@@ -2764,7 +2546,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000004;
         ciphertext_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -2773,7 +2555,7 @@ public final class SignalProtos {
       public Builder clearCiphertext() {
         bitField0_ = (bitField0_ & ~0x00000004);
         ciphertext_ = getDefaultInstance().getCiphertext();
-        onChanged();
+        
         return this;
       }
 
@@ -2788,10 +2570,10 @@ public final class SignalProtos {
     // @@protoc_insertion_point(class_scope:textsecure.SenderKeyMessage)
   }
 
-  public interface SenderKeyDistributionMessageOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface SenderKeyDistributionMessageOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.SenderKeyDistributionMessage)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 id = 1;
     /**
      * <code>optional uint32 id = 1;</code>
      */
@@ -2801,7 +2583,6 @@ public final class SignalProtos {
      */
     int getId();
 
-    // optional uint32 iteration = 2;
     /**
      * <code>optional uint32 iteration = 2;</code>
      */
@@ -2811,7 +2592,6 @@ public final class SignalProtos {
      */
     int getIteration();
 
-    // optional bytes chainKey = 3;
     /**
      * <code>optional bytes chainKey = 3;</code>
      */
@@ -2821,7 +2601,6 @@ public final class SignalProtos {
      */
     com.google.protobuf.ByteString getChainKey();
 
-    // optional bytes signingKey = 4;
     /**
      * <code>optional bytes signingKey = 4;</code>
      */
@@ -2835,14 +2614,15 @@ public final class SignalProtos {
    * Protobuf type {@code textsecure.SenderKeyDistributionMessage}
    */
   public static final class SenderKeyDistributionMessage extends
-      com.google.protobuf.GeneratedMessage
-      implements SenderKeyDistributionMessageOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.SenderKeyDistributionMessage)
+      SenderKeyDistributionMessageOrBuilder {
     // Use SenderKeyDistributionMessage.newBuilder() to construct.
-    private SenderKeyDistributionMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private SenderKeyDistributionMessage(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private SenderKeyDistributionMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private SenderKeyDistributionMessage(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final SenderKeyDistributionMessage defaultInstance;
     public static SenderKeyDistributionMessage getDefaultInstance() {
@@ -2853,20 +2633,18 @@ public final class SignalProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private SenderKeyDistributionMessage(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -2876,7 +2654,7 @@ public final class SignalProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -2910,22 +2688,16 @@ public final class SignalProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyDistributionMessage_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyDistributionMessage_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<SenderKeyDistributionMessage> PARSER =
         new com.google.protobuf.AbstractParser<SenderKeyDistributionMessage>() {
       public SenderKeyDistributionMessage parsePartialFrom(
@@ -2942,7 +2714,6 @@ public final class SignalProtos {
     }
 
     private int bitField0_;
-    // optional uint32 id = 1;
     public static final int ID_FIELD_NUMBER = 1;
     private int id_;
     /**
@@ -2958,7 +2729,6 @@ public final class SignalProtos {
       return id_;
     }
 
-    // optional uint32 iteration = 2;
     public static final int ITERATION_FIELD_NUMBER = 2;
     private int iteration_;
     /**
@@ -2974,7 +2744,6 @@ public final class SignalProtos {
       return iteration_;
     }
 
-    // optional bytes chainKey = 3;
     public static final int CHAINKEY_FIELD_NUMBER = 3;
     private com.google.protobuf.ByteString chainKey_;
     /**
@@ -2990,7 +2759,6 @@ public final class SignalProtos {
       return chainKey_;
     }
 
-    // optional bytes signingKey = 4;
     public static final int SIGNINGKEY_FIELD_NUMBER = 4;
     private com.google.protobuf.ByteString signingKey_;
     /**
@@ -3015,7 +2783,8 @@ public final class SignalProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -3036,7 +2805,7 @@ public final class SignalProtos {
       if (((bitField0_ & 0x00000008) == 0x00000008)) {
         output.writeBytes(4, signingKey_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -3061,7 +2830,7 @@ public final class SignalProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeBytesSize(4, signingKey_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -3133,43 +2902,21 @@ public final class SignalProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.SenderKeyDistributionMessage}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessageOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyDistributionMessage_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyDistributionMessage_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.SenderKeyDistributionMessage)
+        org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessageOrBuilder {
       // Construct using org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -3192,11 +2939,6 @@ public final class SignalProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_SenderKeyDistributionMessage_descriptor;
-      }
-
       public org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage getDefaultInstanceForType() {
         return org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage.getDefaultInstance();
       }
@@ -3230,19 +2972,9 @@ public final class SignalProtos {
         }
         result.signingKey_ = signingKey_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage) {
-          return mergeFrom((org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage other) {
         if (other == org.whispersystems.libsignal.protocol.SignalProtos.SenderKeyDistributionMessage.getDefaultInstance()) return this;
         if (other.hasId()) {
@@ -3257,7 +2989,8 @@ public final class SignalProtos {
         if (other.hasSigningKey()) {
           setSigningKey(other.getSigningKey());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -3284,7 +3017,6 @@ public final class SignalProtos {
       }
       private int bitField0_;
 
-      // optional uint32 id = 1;
       private int id_ ;
       /**
        * <code>optional uint32 id = 1;</code>
@@ -3304,7 +3036,7 @@ public final class SignalProtos {
       public Builder setId(int value) {
         bitField0_ |= 0x00000001;
         id_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -3313,11 +3045,10 @@ public final class SignalProtos {
       public Builder clearId() {
         bitField0_ = (bitField0_ & ~0x00000001);
         id_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional uint32 iteration = 2;
       private int iteration_ ;
       /**
        * <code>optional uint32 iteration = 2;</code>
@@ -3337,7 +3068,7 @@ public final class SignalProtos {
       public Builder setIteration(int value) {
         bitField0_ |= 0x00000002;
         iteration_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -3346,11 +3077,10 @@ public final class SignalProtos {
       public Builder clearIteration() {
         bitField0_ = (bitField0_ & ~0x00000002);
         iteration_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes chainKey = 3;
       private com.google.protobuf.ByteString chainKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes chainKey = 3;</code>
@@ -3373,7 +3103,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000004;
         chainKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -3382,11 +3112,10 @@ public final class SignalProtos {
       public Builder clearChainKey() {
         bitField0_ = (bitField0_ & ~0x00000004);
         chainKey_ = getDefaultInstance().getChainKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes signingKey = 4;
       private com.google.protobuf.ByteString signingKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes signingKey = 4;</code>
@@ -3409,7 +3138,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000008;
         signingKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -3418,7 +3147,7 @@ public final class SignalProtos {
       public Builder clearSigningKey() {
         bitField0_ = (bitField0_ & ~0x00000008);
         signingKey_ = getDefaultInstance().getSigningKey();
-        onChanged();
+        
         return this;
       }
 
@@ -3433,65 +3162,85 @@ public final class SignalProtos {
     // @@protoc_insertion_point(class_scope:textsecure.SenderKeyDistributionMessage)
   }
 
-  public interface DeviceConsistencyCodeMessageOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface FastRatchetSenderKeyDistributionMessageOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.FastRatchetSenderKeyDistributionMessage)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 generation = 1;
     /**
-     * <code>optional uint32 generation = 1;</code>
+     * <code>optional uint32 id = 1;</code>
      */
-    boolean hasGeneration();
+    boolean hasId();
     /**
-     * <code>optional uint32 generation = 1;</code>
+     * <code>optional uint32 id = 1;</code>
      */
-    int getGeneration();
+    int getId();
 
-    // optional bytes signature = 2;
     /**
-     * <code>optional bytes signature = 2;</code>
+     * <code>optional uint32 iteration = 2;</code>
      */
-    boolean hasSignature();
+    boolean hasIteration();
     /**
-     * <code>optional bytes signature = 2;</code>
+     * <code>optional uint32 iteration = 2;</code>
      */
-    com.google.protobuf.ByteString getSignature();
+    int getIteration();
+
+    /**
+     * <code>repeated bytes chainKeys = 3;</code>
+     */
+    java.util.List<com.google.protobuf.ByteString> getChainKeysList();
+    /**
+     * <code>repeated bytes chainKeys = 3;</code>
+     */
+    int getChainKeysCount();
+    /**
+     * <code>repeated bytes chainKeys = 3;</code>
+     */
+    com.google.protobuf.ByteString getChainKeys(int index);
+
+    /**
+     * <code>optional bytes signingKey = 4;</code>
+     */
+    boolean hasSigningKey();
+    /**
+     * <code>optional bytes signingKey = 4;</code>
+     */
+    com.google.protobuf.ByteString getSigningKey();
   }
   /**
-   * Protobuf type {@code textsecure.DeviceConsistencyCodeMessage}
+   * Protobuf type {@code textsecure.FastRatchetSenderKeyDistributionMessage}
    */
-  public static final class DeviceConsistencyCodeMessage extends
-      com.google.protobuf.GeneratedMessage
-      implements DeviceConsistencyCodeMessageOrBuilder {
-    // Use DeviceConsistencyCodeMessage.newBuilder() to construct.
-    private DeviceConsistencyCodeMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+  public static final class FastRatchetSenderKeyDistributionMessage extends
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.FastRatchetSenderKeyDistributionMessage)
+      FastRatchetSenderKeyDistributionMessageOrBuilder {
+    // Use FastRatchetSenderKeyDistributionMessage.newBuilder() to construct.
+    private FastRatchetSenderKeyDistributionMessage(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private DeviceConsistencyCodeMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private FastRatchetSenderKeyDistributionMessage(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
-    private static final DeviceConsistencyCodeMessage defaultInstance;
-    public static DeviceConsistencyCodeMessage getDefaultInstance() {
+    private static final FastRatchetSenderKeyDistributionMessage defaultInstance;
+    public static FastRatchetSenderKeyDistributionMessage getDefaultInstance() {
       return defaultInstance;
     }
 
-    public DeviceConsistencyCodeMessage getDefaultInstanceForType() {
+    public FastRatchetSenderKeyDistributionMessage getDefaultInstanceForType() {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
-    private DeviceConsistencyCodeMessage(
+    private final com.google.protobuf.ByteString unknownFields;
+    private FastRatchetSenderKeyDistributionMessage(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -3501,7 +3250,7 @@ public final class SignalProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -3509,12 +3258,25 @@ public final class SignalProtos {
             }
             case 8: {
               bitField0_ |= 0x00000001;
-              generation_ = input.readUInt32();
+              id_ = input.readUInt32();
               break;
             }
-            case 18: {
+            case 16: {
               bitField0_ |= 0x00000002;
-              signature_ = input.readBytes();
+              iteration_ = input.readUInt32();
+              break;
+            }
+            case 26: {
+              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
+                chainKeys_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
+                mutable_bitField0_ |= 0x00000004;
+              }
+              chainKeys_.add(input.readBytes());
+              break;
+            }
+            case 34: {
+              bitField0_ |= 0x00000004;
+              signingKey_ = input.readBytes();
               break;
             }
           }
@@ -3525,78 +3287,113 @@ public final class SignalProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
+          chainKeys_ = java.util.Collections.unmodifiableList(chainKeys_);
+        }
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_DeviceConsistencyCodeMessage_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_DeviceConsistencyCodeMessage_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage.Builder.class);
-    }
-
-    public static com.google.protobuf.Parser<DeviceConsistencyCodeMessage> PARSER =
-        new com.google.protobuf.AbstractParser<DeviceConsistencyCodeMessage>() {
-      public DeviceConsistencyCodeMessage parsePartialFrom(
+    public static com.google.protobuf.Parser<FastRatchetSenderKeyDistributionMessage> PARSER =
+        new com.google.protobuf.AbstractParser<FastRatchetSenderKeyDistributionMessage>() {
+      public FastRatchetSenderKeyDistributionMessage parsePartialFrom(
           com.google.protobuf.CodedInputStream input,
           com.google.protobuf.ExtensionRegistryLite extensionRegistry)
           throws com.google.protobuf.InvalidProtocolBufferException {
-        return new DeviceConsistencyCodeMessage(input, extensionRegistry);
+        return new FastRatchetSenderKeyDistributionMessage(input, extensionRegistry);
       }
     };
 
     @java.lang.Override
-    public com.google.protobuf.Parser<DeviceConsistencyCodeMessage> getParserForType() {
+    public com.google.protobuf.Parser<FastRatchetSenderKeyDistributionMessage> getParserForType() {
       return PARSER;
     }
 
     private int bitField0_;
-    // optional uint32 generation = 1;
-    public static final int GENERATION_FIELD_NUMBER = 1;
-    private int generation_;
+    public static final int ID_FIELD_NUMBER = 1;
+    private int id_;
     /**
-     * <code>optional uint32 generation = 1;</code>
+     * <code>optional uint32 id = 1;</code>
      */
-    public boolean hasGeneration() {
+    public boolean hasId() {
       return ((bitField0_ & 0x00000001) == 0x00000001);
     }
     /**
-     * <code>optional uint32 generation = 1;</code>
+     * <code>optional uint32 id = 1;</code>
      */
-    public int getGeneration() {
-      return generation_;
+    public int getId() {
+      return id_;
     }
 
-    // optional bytes signature = 2;
-    public static final int SIGNATURE_FIELD_NUMBER = 2;
-    private com.google.protobuf.ByteString signature_;
+    public static final int ITERATION_FIELD_NUMBER = 2;
+    private int iteration_;
     /**
-     * <code>optional bytes signature = 2;</code>
+     * <code>optional uint32 iteration = 2;</code>
      */
-    public boolean hasSignature() {
+    public boolean hasIteration() {
       return ((bitField0_ & 0x00000002) == 0x00000002);
     }
     /**
-     * <code>optional bytes signature = 2;</code>
+     * <code>optional uint32 iteration = 2;</code>
      */
-    public com.google.protobuf.ByteString getSignature() {
-      return signature_;
+    public int getIteration() {
+      return iteration_;
+    }
+
+    public static final int CHAINKEYS_FIELD_NUMBER = 3;
+    private java.util.List<com.google.protobuf.ByteString> chainKeys_;
+    /**
+     * <code>repeated bytes chainKeys = 3;</code>
+     */
+    public java.util.List<com.google.protobuf.ByteString>
+        getChainKeysList() {
+      return chainKeys_;
+    }
+    /**
+     * <code>repeated bytes chainKeys = 3;</code>
+     */
+    public int getChainKeysCount() {
+      return chainKeys_.size();
+    }
+    /**
+     * <code>repeated bytes chainKeys = 3;</code>
+     */
+    public com.google.protobuf.ByteString getChainKeys(int index) {
+      return chainKeys_.get(index);
+    }
+
+    public static final int SIGNINGKEY_FIELD_NUMBER = 4;
+    private com.google.protobuf.ByteString signingKey_;
+    /**
+     * <code>optional bytes signingKey = 4;</code>
+     */
+    public boolean hasSigningKey() {
+      return ((bitField0_ & 0x00000004) == 0x00000004);
+    }
+    /**
+     * <code>optional bytes signingKey = 4;</code>
+     */
+    public com.google.protobuf.ByteString getSigningKey() {
+      return signingKey_;
     }
 
     private void initFields() {
-      generation_ = 0;
-      signature_ = com.google.protobuf.ByteString.EMPTY;
+      id_ = 0;
+      iteration_ = 0;
+      chainKeys_ = java.util.Collections.emptyList();
+      signingKey_ = com.google.protobuf.ByteString.EMPTY;
     }
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -3606,12 +3403,18 @@ public final class SignalProtos {
                         throws java.io.IOException {
       getSerializedSize();
       if (((bitField0_ & 0x00000001) == 0x00000001)) {
-        output.writeUInt32(1, generation_);
+        output.writeUInt32(1, id_);
       }
       if (((bitField0_ & 0x00000002) == 0x00000002)) {
-        output.writeBytes(2, signature_);
+        output.writeUInt32(2, iteration_);
+      }
+      for (int i = 0; i < chainKeys_.size(); i++) {
+        output.writeBytes(3, chainKeys_.get(i));
+      }
+      if (((bitField0_ & 0x00000004) == 0x00000004)) {
+        output.writeBytes(4, signingKey_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -3622,15 +3425,591 @@ public final class SignalProtos {
       size = 0;
       if (((bitField0_ & 0x00000001) == 0x00000001)) {
         size += com.google.protobuf.CodedOutputStream
-          .computeUInt32Size(1, generation_);
+          .computeUInt32Size(1, id_);
       }
       if (((bitField0_ & 0x00000002) == 0x00000002)) {
         size += com.google.protobuf.CodedOutputStream
-          .computeBytesSize(2, signature_);
+          .computeUInt32Size(2, iteration_);
       }
-      size += getUnknownFields().getSerializedSize();
-      memoizedSerializedSize = size;
-      return size;
+      {
+        int dataSize = 0;
+        for (int i = 0; i < chainKeys_.size(); i++) {
+          dataSize += com.google.protobuf.CodedOutputStream
+            .computeBytesSizeNoTag(chainKeys_.get(i));
+        }
+        size += dataSize;
+        size += 1 * getChainKeysList().size();
+      }
+      if (((bitField0_ & 0x00000004) == 0x00000004)) {
+        size += com.google.protobuf.CodedOutputStream
+          .computeBytesSize(4, signingKey_);
+      }
+      size += unknownFields.size();
+      memoizedSerializedSize = size;
+      return size;
+    }
+
+    private static final long serialVersionUID = 0L;
+    @java.lang.Override
+    protected java.lang.Object writeReplace()
+        throws java.io.ObjectStreamException {
+      return super.writeReplace();
+    }
+
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseFrom(
+        com.google.protobuf.ByteString data)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data);
+    }
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseFrom(
+        com.google.protobuf.ByteString data,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseFrom(byte[] data)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data);
+    }
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseFrom(
+        byte[] data,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseFrom(java.io.InputStream input)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input);
+    }
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseFrom(
+        java.io.InputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseDelimitedFrom(java.io.InputStream input)
+        throws java.io.IOException {
+      return PARSER.parseDelimitedFrom(input);
+    }
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseDelimitedFrom(
+        java.io.InputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return PARSER.parseDelimitedFrom(input, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseFrom(
+        com.google.protobuf.CodedInputStream input)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input);
+    }
+    public static org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parseFrom(
+        com.google.protobuf.CodedInputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input, extensionRegistry);
+    }
+
+    public static Builder newBuilder() { return Builder.create(); }
+    public Builder newBuilderForType() { return newBuilder(); }
+    public static Builder newBuilder(org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage prototype) {
+      return newBuilder().mergeFrom(prototype);
+    }
+    public Builder toBuilder() { return newBuilder(this); }
+
+    /**
+     * Protobuf type {@code textsecure.FastRatchetSenderKeyDistributionMessage}
+     */
+    public static final class Builder extends
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.FastRatchetSenderKeyDistributionMessage)
+        org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessageOrBuilder {
+      // Construct using org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage.newBuilder()
+      private Builder() {
+        maybeForceBuilderInitialization();
+      }
+
+      private void maybeForceBuilderInitialization() {
+      }
+      private static Builder create() {
+        return new Builder();
+      }
+
+      public Builder clear() {
+        super.clear();
+        id_ = 0;
+        bitField0_ = (bitField0_ & ~0x00000001);
+        iteration_ = 0;
+        bitField0_ = (bitField0_ & ~0x00000002);
+        chainKeys_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000004);
+        signingKey_ = com.google.protobuf.ByteString.EMPTY;
+        bitField0_ = (bitField0_ & ~0x00000008);
+        return this;
+      }
+
+      public Builder clone() {
+        return create().mergeFrom(buildPartial());
+      }
+
+      public org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage getDefaultInstanceForType() {
+        return org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage.getDefaultInstance();
+      }
+
+      public org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage build() {
+        org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage result = buildPartial();
+        if (!result.isInitialized()) {
+          throw newUninitializedMessageException(result);
+        }
+        return result;
+      }
+
+      public org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage buildPartial() {
+        org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage result = new org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage(this);
+        int from_bitField0_ = bitField0_;
+        int to_bitField0_ = 0;
+        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
+          to_bitField0_ |= 0x00000001;
+        }
+        result.id_ = id_;
+        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
+          to_bitField0_ |= 0x00000002;
+        }
+        result.iteration_ = iteration_;
+        if (((bitField0_ & 0x00000004) == 0x00000004)) {
+          chainKeys_ = java.util.Collections.unmodifiableList(chainKeys_);
+          bitField0_ = (bitField0_ & ~0x00000004);
+        }
+        result.chainKeys_ = chainKeys_;
+        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
+          to_bitField0_ |= 0x00000004;
+        }
+        result.signingKey_ = signingKey_;
+        result.bitField0_ = to_bitField0_;
+        return result;
+      }
+
+      public Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage other) {
+        if (other == org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage.getDefaultInstance()) return this;
+        if (other.hasId()) {
+          setId(other.getId());
+        }
+        if (other.hasIteration()) {
+          setIteration(other.getIteration());
+        }
+        if (!other.chainKeys_.isEmpty()) {
+          if (chainKeys_.isEmpty()) {
+            chainKeys_ = other.chainKeys_;
+            bitField0_ = (bitField0_ & ~0x00000004);
+          } else {
+            ensureChainKeysIsMutable();
+            chainKeys_.addAll(other.chainKeys_);
+          }
+          
+        }
+        if (other.hasSigningKey()) {
+          setSigningKey(other.getSigningKey());
+        }
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
+        return this;
+      }
+
+      public final boolean isInitialized() {
+        return true;
+      }
+
+      public Builder mergeFrom(
+          com.google.protobuf.CodedInputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws java.io.IOException {
+        org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage parsedMessage = null;
+        try {
+          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
+        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+          parsedMessage = (org.whispersystems.libsignal.protocol.SignalProtos.FastRatchetSenderKeyDistributionMessage) e.getUnfinishedMessage();
+          throw e;
+        } finally {
+          if (parsedMessage != null) {
+            mergeFrom(parsedMessage);
+          }
+        }
+        return this;
+      }
+      private int bitField0_;
+
+      private int id_ ;
+      /**
+       * <code>optional uint32 id = 1;</code>
+       */
+      public boolean hasId() {
+        return ((bitField0_ & 0x00000001) == 0x00000001);
+      }
+      /**
+       * <code>optional uint32 id = 1;</code>
+       */
+      public int getId() {
+        return id_;
+      }
+      /**
+       * <code>optional uint32 id = 1;</code>
+       */
+      public Builder setId(int value) {
+        bitField0_ |= 0x00000001;
+        id_ = value;
+        
+        return this;
+      }
+      /**
+       * <code>optional uint32 id = 1;</code>
+       */
+      public Builder clearId() {
+        bitField0_ = (bitField0_ & ~0x00000001);
+        id_ = 0;
+        
+        return this;
+      }
+
+      private int iteration_ ;
+      /**
+       * <code>optional uint32 iteration = 2;</code>
+       */
+      public boolean hasIteration() {
+        return ((bitField0_ & 0x00000002) == 0x00000002);
+      }
+      /**
+       * <code>optional uint32 iteration = 2;</code>
+       */
+      public int getIteration() {
+        return iteration_;
+      }
+      /**
+       * <code>optional uint32 iteration = 2;</code>
+       */
+      public Builder setIteration(int value) {
+        bitField0_ |= 0x00000002;
+        iteration_ = value;
+        
+        return this;
+      }
+      /**
+       * <code>optional uint32 iteration = 2;</code>
+       */
+      public Builder clearIteration() {
+        bitField0_ = (bitField0_ & ~0x00000002);
+        iteration_ = 0;
+        
+        return this;
+      }
+
+      private java.util.List<com.google.protobuf.ByteString> chainKeys_ = java.util.Collections.emptyList();
+      private void ensureChainKeysIsMutable() {
+        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
+          chainKeys_ = new java.util.ArrayList<com.google.protobuf.ByteString>(chainKeys_);
+          bitField0_ |= 0x00000004;
+         }
+      }
+      /**
+       * <code>repeated bytes chainKeys = 3;</code>
+       */
+      public java.util.List<com.google.protobuf.ByteString>
+          getChainKeysList() {
+        return java.util.Collections.unmodifiableList(chainKeys_);
+      }
+      /**
+       * <code>repeated bytes chainKeys = 3;</code>
+       */
+      public int getChainKeysCount() {
+        return chainKeys_.size();
+      }
+      /**
+       * <code>repeated bytes chainKeys = 3;</code>
+       */
+      public com.google.protobuf.ByteString getChainKeys(int index) {
+        return chainKeys_.get(index);
+      }
+      /**
+       * <code>repeated bytes chainKeys = 3;</code>
+       */
+      public Builder setChainKeys(
+          int index, com.google.protobuf.ByteString value) {
+        if (value == null) {
+    throw new NullPointerException();
+  }
+  ensureChainKeysIsMutable();
+        chainKeys_.set(index, value);
+        
+        return this;
+      }
+      /**
+       * <code>repeated bytes chainKeys = 3;</code>
+       */
+      public Builder addChainKeys(com.google.protobuf.ByteString value) {
+        if (value == null) {
+    throw new NullPointerException();
+  }
+  ensureChainKeysIsMutable();
+        chainKeys_.add(value);
+        
+        return this;
+      }
+      /**
+       * <code>repeated bytes chainKeys = 3;</code>
+       */
+      public Builder addAllChainKeys(
+          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
+        ensureChainKeysIsMutable();
+        com.google.protobuf.AbstractMessageLite.Builder.addAll(
+            values, chainKeys_);
+        
+        return this;
+      }
+      /**
+       * <code>repeated bytes chainKeys = 3;</code>
+       */
+      public Builder clearChainKeys() {
+        chainKeys_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000004);
+        
+        return this;
+      }
+
+      private com.google.protobuf.ByteString signingKey_ = com.google.protobuf.ByteString.EMPTY;
+      /**
+       * <code>optional bytes signingKey = 4;</code>
+       */
+      public boolean hasSigningKey() {
+        return ((bitField0_ & 0x00000008) == 0x00000008);
+      }
+      /**
+       * <code>optional bytes signingKey = 4;</code>
+       */
+      public com.google.protobuf.ByteString getSigningKey() {
+        return signingKey_;
+      }
+      /**
+       * <code>optional bytes signingKey = 4;</code>
+       */
+      public Builder setSigningKey(com.google.protobuf.ByteString value) {
+        if (value == null) {
+    throw new NullPointerException();
+  }
+  bitField0_ |= 0x00000008;
+        signingKey_ = value;
+        
+        return this;
+      }
+      /**
+       * <code>optional bytes signingKey = 4;</code>
+       */
+      public Builder clearSigningKey() {
+        bitField0_ = (bitField0_ & ~0x00000008);
+        signingKey_ = getDefaultInstance().getSigningKey();
+        
+        return this;
+      }
+
+      // @@protoc_insertion_point(builder_scope:textsecure.FastRatchetSenderKeyDistributionMessage)
+    }
+
+    static {
+      defaultInstance = new FastRatchetSenderKeyDistributionMessage(true);
+      defaultInstance.initFields();
+    }
+
+    // @@protoc_insertion_point(class_scope:textsecure.FastRatchetSenderKeyDistributionMessage)
+  }
+
+  public interface DeviceConsistencyCodeMessageOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.DeviceConsistencyCodeMessage)
+      com.google.protobuf.MessageLiteOrBuilder {
+
+    /**
+     * <code>optional uint32 generation = 1;</code>
+     */
+    boolean hasGeneration();
+    /**
+     * <code>optional uint32 generation = 1;</code>
+     */
+    int getGeneration();
+
+    /**
+     * <code>optional bytes signature = 2;</code>
+     */
+    boolean hasSignature();
+    /**
+     * <code>optional bytes signature = 2;</code>
+     */
+    com.google.protobuf.ByteString getSignature();
+  }
+  /**
+   * Protobuf type {@code textsecure.DeviceConsistencyCodeMessage}
+   */
+  public static final class DeviceConsistencyCodeMessage extends
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.DeviceConsistencyCodeMessage)
+      DeviceConsistencyCodeMessageOrBuilder {
+    // Use DeviceConsistencyCodeMessage.newBuilder() to construct.
+    private DeviceConsistencyCodeMessage(com.google.protobuf.GeneratedMessageLite.Builder builder) {
+      super(builder);
+      this.unknownFields = builder.getUnknownFields();
+    }
+    private DeviceConsistencyCodeMessage(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
+
+    private static final DeviceConsistencyCodeMessage defaultInstance;
+    public static DeviceConsistencyCodeMessage getDefaultInstance() {
+      return defaultInstance;
+    }
+
+    public DeviceConsistencyCodeMessage getDefaultInstanceForType() {
+      return defaultInstance;
+    }
+
+    private final com.google.protobuf.ByteString unknownFields;
+    private DeviceConsistencyCodeMessage(
+        com.google.protobuf.CodedInputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      initFields();
+      int mutable_bitField0_ = 0;
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
+      try {
+        boolean done = false;
+        while (!done) {
+          int tag = input.readTag();
+          switch (tag) {
+            case 0:
+              done = true;
+              break;
+            default: {
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
+                                     extensionRegistry, tag)) {
+                done = true;
+              }
+              break;
+            }
+            case 8: {
+              bitField0_ |= 0x00000001;
+              generation_ = input.readUInt32();
+              break;
+            }
+            case 18: {
+              bitField0_ |= 0x00000002;
+              signature_ = input.readBytes();
+              break;
+            }
+          }
+        }
+      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+        throw e.setUnfinishedMessage(this);
+      } catch (java.io.IOException e) {
+        throw new com.google.protobuf.InvalidProtocolBufferException(
+            e.getMessage()).setUnfinishedMessage(this);
+      } finally {
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
+        makeExtensionsImmutable();
+      }
+    }
+    public static com.google.protobuf.Parser<DeviceConsistencyCodeMessage> PARSER =
+        new com.google.protobuf.AbstractParser<DeviceConsistencyCodeMessage>() {
+      public DeviceConsistencyCodeMessage parsePartialFrom(
+          com.google.protobuf.CodedInputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return new DeviceConsistencyCodeMessage(input, extensionRegistry);
+      }
+    };
+
+    @java.lang.Override
+    public com.google.protobuf.Parser<DeviceConsistencyCodeMessage> getParserForType() {
+      return PARSER;
+    }
+
+    private int bitField0_;
+    public static final int GENERATION_FIELD_NUMBER = 1;
+    private int generation_;
+    /**
+     * <code>optional uint32 generation = 1;</code>
+     */
+    public boolean hasGeneration() {
+      return ((bitField0_ & 0x00000001) == 0x00000001);
+    }
+    /**
+     * <code>optional uint32 generation = 1;</code>
+     */
+    public int getGeneration() {
+      return generation_;
+    }
+
+    public static final int SIGNATURE_FIELD_NUMBER = 2;
+    private com.google.protobuf.ByteString signature_;
+    /**
+     * <code>optional bytes signature = 2;</code>
+     */
+    public boolean hasSignature() {
+      return ((bitField0_ & 0x00000002) == 0x00000002);
+    }
+    /**
+     * <code>optional bytes signature = 2;</code>
+     */
+    public com.google.protobuf.ByteString getSignature() {
+      return signature_;
+    }
+
+    private void initFields() {
+      generation_ = 0;
+      signature_ = com.google.protobuf.ByteString.EMPTY;
+    }
+    private byte memoizedIsInitialized = -1;
+    public final boolean isInitialized() {
+      byte isInitialized = memoizedIsInitialized;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
+
+      memoizedIsInitialized = 1;
+      return true;
+    }
+
+    public void writeTo(com.google.protobuf.CodedOutputStream output)
+                        throws java.io.IOException {
+      getSerializedSize();
+      if (((bitField0_ & 0x00000001) == 0x00000001)) {
+        output.writeUInt32(1, generation_);
+      }
+      if (((bitField0_ & 0x00000002) == 0x00000002)) {
+        output.writeBytes(2, signature_);
+      }
+      output.writeRawBytes(unknownFields);
+    }
+
+    private int memoizedSerializedSize = -1;
+    public int getSerializedSize() {
+      int size = memoizedSerializedSize;
+      if (size != -1) return size;
+
+      size = 0;
+      if (((bitField0_ & 0x00000001) == 0x00000001)) {
+        size += com.google.protobuf.CodedOutputStream
+          .computeUInt32Size(1, generation_);
+      }
+      if (((bitField0_ & 0x00000002) == 0x00000002)) {
+        size += com.google.protobuf.CodedOutputStream
+          .computeBytesSize(2, signature_);
+      }
+      size += unknownFields.size();
+      memoizedSerializedSize = size;
+      return size;
     }
 
     private static final long serialVersionUID = 0L;
@@ -3700,43 +4079,21 @@ public final class SignalProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.DeviceConsistencyCodeMessage}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessageOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_DeviceConsistencyCodeMessage_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_DeviceConsistencyCodeMessage_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage.class, org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.DeviceConsistencyCodeMessage)
+        org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessageOrBuilder {
       // Construct using org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -3755,11 +4112,6 @@ public final class SignalProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.protocol.SignalProtos.internal_static_textsecure_DeviceConsistencyCodeMessage_descriptor;
-      }
-
       public org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage getDefaultInstanceForType() {
         return org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage.getDefaultInstance();
       }
@@ -3785,19 +4137,9 @@ public final class SignalProtos {
         }
         result.signature_ = signature_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage) {
-          return mergeFrom((org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage other) {
         if (other == org.whispersystems.libsignal.protocol.SignalProtos.DeviceConsistencyCodeMessage.getDefaultInstance()) return this;
         if (other.hasGeneration()) {
@@ -3806,7 +4148,8 @@ public final class SignalProtos {
         if (other.hasSignature()) {
           setSignature(other.getSignature());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -3833,7 +4176,6 @@ public final class SignalProtos {
       }
       private int bitField0_;
 
-      // optional uint32 generation = 1;
       private int generation_ ;
       /**
        * <code>optional uint32 generation = 1;</code>
@@ -3853,7 +4195,7 @@ public final class SignalProtos {
       public Builder setGeneration(int value) {
         bitField0_ |= 0x00000001;
         generation_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -3862,11 +4204,10 @@ public final class SignalProtos {
       public Builder clearGeneration() {
         bitField0_ = (bitField0_ & ~0x00000001);
         generation_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes signature = 2;
       private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes signature = 2;</code>
@@ -3889,7 +4230,7 @@ public final class SignalProtos {
   }
   bitField0_ |= 0x00000002;
         signature_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -3898,7 +4239,7 @@ public final class SignalProtos {
       public Builder clearSignature() {
         bitField0_ = (bitField0_ & ~0x00000002);
         signature_ = getDefaultInstance().getSignature();
-        onChanged();
+        
         return this;
       }
 
@@ -3913,112 +4254,8 @@ public final class SignalProtos {
     // @@protoc_insertion_point(class_scope:textsecure.DeviceConsistencyCodeMessage)
   }
 
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SignalMessage_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SignalMessage_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_PreKeySignalMessage_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_PreKeySignalMessage_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_KeyExchangeMessage_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_KeyExchangeMessage_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SenderKeyMessage_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SenderKeyMessage_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SenderKeyDistributionMessage_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SenderKeyDistributionMessage_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_DeviceConsistencyCodeMessage_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_DeviceConsistencyCodeMessage_fieldAccessorTable;
-
-  public static com.google.protobuf.Descriptors.FileDescriptor
-      getDescriptor() {
-    return descriptor;
-  }
-  private static com.google.protobuf.Descriptors.FileDescriptor
-      descriptor;
+
   static {
-    java.lang.String[] descriptorData = {
-      "\n\031WhisperTextProtocol.proto\022\ntextsecure\"" +
-      "a\n\rSignalMessage\022\022\n\nratchetKey\030\001 \001(\014\022\017\n\007" +
-      "counter\030\002 \001(\r\022\027\n\017previousCounter\030\003 \001(\r\022\022" +
-      "\n\nciphertext\030\004 \001(\014\"\216\001\n\023PreKeySignalMessa" +
-      "ge\022\026\n\016registrationId\030\005 \001(\r\022\020\n\010preKeyId\030\001" +
-      " \001(\r\022\026\n\016signedPreKeyId\030\006 \001(\r\022\017\n\007baseKey\030" +
-      "\002 \001(\014\022\023\n\013identityKey\030\003 \001(\014\022\017\n\007message\030\004 " +
-      "\001(\014\"t\n\022KeyExchangeMessage\022\n\n\002id\030\001 \001(\r\022\017\n" +
-      "\007baseKey\030\002 \001(\014\022\022\n\nratchetKey\030\003 \001(\014\022\023\n\013id" +
-      "entityKey\030\004 \001(\014\022\030\n\020baseKeySignature\030\005 \001(",
-      "\014\"E\n\020SenderKeyMessage\022\n\n\002id\030\001 \001(\r\022\021\n\tite" +
-      "ration\030\002 \001(\r\022\022\n\nciphertext\030\003 \001(\014\"c\n\034Send" +
-      "erKeyDistributionMessage\022\n\n\002id\030\001 \001(\r\022\021\n\t" +
-      "iteration\030\002 \001(\r\022\020\n\010chainKey\030\003 \001(\014\022\022\n\nsig" +
-      "ningKey\030\004 \001(\014\"E\n\034DeviceConsistencyCodeMe" +
-      "ssage\022\022\n\ngeneration\030\001 \001(\r\022\021\n\tsignature\030\002" +
-      " \001(\014B5\n%org.whispersystems.libsignal.pro" +
-      "tocolB\014SignalProtos"
-    };
-    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
-      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
-        public com.google.protobuf.ExtensionRegistry assignDescriptors(
-            com.google.protobuf.Descriptors.FileDescriptor root) {
-          descriptor = root;
-          internal_static_textsecure_SignalMessage_descriptor =
-            getDescriptor().getMessageTypes().get(0);
-          internal_static_textsecure_SignalMessage_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SignalMessage_descriptor,
-              new java.lang.String[] { "RatchetKey", "Counter", "PreviousCounter", "Ciphertext", });
-          internal_static_textsecure_PreKeySignalMessage_descriptor =
-            getDescriptor().getMessageTypes().get(1);
-          internal_static_textsecure_PreKeySignalMessage_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_PreKeySignalMessage_descriptor,
-              new java.lang.String[] { "RegistrationId", "PreKeyId", "SignedPreKeyId", "BaseKey", "IdentityKey", "Message", });
-          internal_static_textsecure_KeyExchangeMessage_descriptor =
-            getDescriptor().getMessageTypes().get(2);
-          internal_static_textsecure_KeyExchangeMessage_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_KeyExchangeMessage_descriptor,
-              new java.lang.String[] { "Id", "BaseKey", "RatchetKey", "IdentityKey", "BaseKeySignature", });
-          internal_static_textsecure_SenderKeyMessage_descriptor =
-            getDescriptor().getMessageTypes().get(3);
-          internal_static_textsecure_SenderKeyMessage_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SenderKeyMessage_descriptor,
-              new java.lang.String[] { "Id", "Iteration", "Ciphertext", });
-          internal_static_textsecure_SenderKeyDistributionMessage_descriptor =
-            getDescriptor().getMessageTypes().get(4);
-          internal_static_textsecure_SenderKeyDistributionMessage_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SenderKeyDistributionMessage_descriptor,
-              new java.lang.String[] { "Id", "Iteration", "ChainKey", "SigningKey", });
-          internal_static_textsecure_DeviceConsistencyCodeMessage_descriptor =
-            getDescriptor().getMessageTypes().get(5);
-          internal_static_textsecure_DeviceConsistencyCodeMessage_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_DeviceConsistencyCodeMessage_descriptor,
-              new java.lang.String[] { "Generation", "Signature", });
-          return null;
-        }
-      };
-    com.google.protobuf.Descriptors.FileDescriptor
-      .internalBuildGeneratedFileFrom(descriptorData,
-        new com.google.protobuf.Descriptors.FileDescriptor[] {
-        }, assigner);
   }
 
   // @@protoc_insertion_point(outer_class_scope)
diff --git a/java/src/main/java/org/whispersystems/libsignal/state/StorageProtos.java b/java/src/main/java/org/whispersystems/libsignal/state/StorageProtos.java
index 6fceb8f..13fb49c 100644
--- a/java/src/main/java/org/whispersystems/libsignal/state/StorageProtos.java
+++ b/java/src/main/java/org/whispersystems/libsignal/state/StorageProtos.java
@@ -6,12 +6,12 @@ package org.whispersystems.libsignal.state;
 public final class StorageProtos {
   private StorageProtos() {}
   public static void registerAllExtensions(
-      com.google.protobuf.ExtensionRegistry registry) {
+      com.google.protobuf.ExtensionRegistryLite registry) {
   }
-  public interface SessionStructureOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface SessionStructureOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.SessionStructure)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 sessionVersion = 1;
     /**
      * <code>optional uint32 sessionVersion = 1;</code>
      */
@@ -21,7 +21,6 @@ public final class StorageProtos {
      */
     int getSessionVersion();
 
-    // optional bytes localIdentityPublic = 2;
     /**
      * <code>optional bytes localIdentityPublic = 2;</code>
      */
@@ -31,7 +30,6 @@ public final class StorageProtos {
      */
     com.google.protobuf.ByteString getLocalIdentityPublic();
 
-    // optional bytes remoteIdentityPublic = 3;
     /**
      * <code>optional bytes remoteIdentityPublic = 3;</code>
      */
@@ -41,7 +39,6 @@ public final class StorageProtos {
      */
     com.google.protobuf.ByteString getRemoteIdentityPublic();
 
-    // optional bytes rootKey = 4;
     /**
      * <code>optional bytes rootKey = 4;</code>
      */
@@ -51,7 +48,6 @@ public final class StorageProtos {
      */
     com.google.protobuf.ByteString getRootKey();
 
-    // optional uint32 previousCounter = 5;
     /**
      * <code>optional uint32 previousCounter = 5;</code>
      */
@@ -61,7 +57,6 @@ public final class StorageProtos {
      */
     int getPreviousCounter();
 
-    // optional .textsecure.SessionStructure.Chain senderChain = 6;
     /**
      * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
      */
@@ -70,12 +65,7 @@ public final class StorageProtos {
      * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
      */
     org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain getSenderChain();
-    /**
-     * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder getSenderChainOrBuilder();
 
-    // repeated .textsecure.SessionStructure.Chain receiverChains = 7;
     /**
      * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
      */
@@ -89,18 +79,7 @@ public final class StorageProtos {
      * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
      */
     int getReceiverChainsCount();
-    /**
-     * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
-     */
-    java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder> 
-        getReceiverChainsOrBuilderList();
-    /**
-     * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder getReceiverChainsOrBuilder(
-        int index);
 
-    // optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;
     /**
      * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
      */
@@ -109,12 +88,7 @@ public final class StorageProtos {
      * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
      */
     org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange getPendingKeyExchange();
-    /**
-     * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchangeOrBuilder getPendingKeyExchangeOrBuilder();
 
-    // optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;
     /**
      * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
      */
@@ -123,12 +97,7 @@ public final class StorageProtos {
      * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
      */
     org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey getPendingPreKey();
-    /**
-     * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKeyOrBuilder getPendingPreKeyOrBuilder();
 
-    // optional uint32 remoteRegistrationId = 10;
     /**
      * <code>optional uint32 remoteRegistrationId = 10;</code>
      */
@@ -138,7 +107,6 @@ public final class StorageProtos {
      */
     int getRemoteRegistrationId();
 
-    // optional uint32 localRegistrationId = 11;
     /**
      * <code>optional uint32 localRegistrationId = 11;</code>
      */
@@ -148,7 +116,6 @@ public final class StorageProtos {
      */
     int getLocalRegistrationId();
 
-    // optional bool needsRefresh = 12;
     /**
      * <code>optional bool needsRefresh = 12;</code>
      */
@@ -158,7 +125,6 @@ public final class StorageProtos {
      */
     boolean getNeedsRefresh();
 
-    // optional bytes aliceBaseKey = 13;
     /**
      * <code>optional bytes aliceBaseKey = 13;</code>
      */
@@ -172,14 +138,15 @@ public final class StorageProtos {
    * Protobuf type {@code textsecure.SessionStructure}
    */
   public static final class SessionStructure extends
-      com.google.protobuf.GeneratedMessage
-      implements SessionStructureOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.SessionStructure)
+      SessionStructureOrBuilder {
     // Use SessionStructure.newBuilder() to construct.
-    private SessionStructure(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private SessionStructure(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private SessionStructure(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private SessionStructure(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final SessionStructure defaultInstance;
     public static SessionStructure getDefaultInstance() {
@@ -190,20 +157,18 @@ public final class StorageProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private SessionStructure(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -213,7 +178,7 @@ public final class StorageProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -322,22 +287,16 @@ public final class StorageProtos {
         if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
           receiverChains_ = java.util.Collections.unmodifiableList(receiverChains_);
         }
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<SessionStructure> PARSER =
         new com.google.protobuf.AbstractParser<SessionStructure>() {
       public SessionStructure parsePartialFrom(
@@ -353,10 +312,10 @@ public final class StorageProtos {
       return PARSER;
     }
 
-    public interface ChainOrBuilder
-        extends com.google.protobuf.MessageOrBuilder {
+    public interface ChainOrBuilder extends
+        // @@protoc_insertion_point(interface_extends:textsecure.SessionStructure.Chain)
+        com.google.protobuf.MessageLiteOrBuilder {
 
-      // optional bytes senderRatchetKey = 1;
       /**
        * <code>optional bytes senderRatchetKey = 1;</code>
        */
@@ -366,7 +325,6 @@ public final class StorageProtos {
        */
       com.google.protobuf.ByteString getSenderRatchetKey();
 
-      // optional bytes senderRatchetKeyPrivate = 2;
       /**
        * <code>optional bytes senderRatchetKeyPrivate = 2;</code>
        */
@@ -376,7 +334,6 @@ public final class StorageProtos {
        */
       com.google.protobuf.ByteString getSenderRatchetKeyPrivate();
 
-      // optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;
       /**
        * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
        */
@@ -385,12 +342,7 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
        */
       org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey getChainKey();
-      /**
-       * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
-       */
-      org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKeyOrBuilder getChainKeyOrBuilder();
 
-      // repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;
       /**
        * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
        */
@@ -404,29 +356,20 @@ public final class StorageProtos {
        * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
        */
       int getMessageKeysCount();
-      /**
-       * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
-       */
-      java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKeyOrBuilder> 
-          getMessageKeysOrBuilderList();
-      /**
-       * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
-       */
-      org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKeyOrBuilder getMessageKeysOrBuilder(
-          int index);
     }
     /**
      * Protobuf type {@code textsecure.SessionStructure.Chain}
      */
     public static final class Chain extends
-        com.google.protobuf.GeneratedMessage
-        implements ChainOrBuilder {
+        com.google.protobuf.GeneratedMessageLite implements
+        // @@protoc_insertion_point(message_implements:textsecure.SessionStructure.Chain)
+        ChainOrBuilder {
       // Use Chain.newBuilder() to construct.
-      private Chain(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+      private Chain(com.google.protobuf.GeneratedMessageLite.Builder builder) {
         super(builder);
         this.unknownFields = builder.getUnknownFields();
       }
-      private Chain(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+      private Chain(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
       private static final Chain defaultInstance;
       public static Chain getDefaultInstance() {
@@ -437,20 +380,18 @@ public final class StorageProtos {
         return defaultInstance;
       }
 
-      private final com.google.protobuf.UnknownFieldSet unknownFields;
-      @java.lang.Override
-      public final com.google.protobuf.UnknownFieldSet
-          getUnknownFields() {
-        return this.unknownFields;
-      }
+      private final com.google.protobuf.ByteString unknownFields;
       private Chain(
           com.google.protobuf.CodedInputStream input,
           com.google.protobuf.ExtensionRegistryLite extensionRegistry)
           throws com.google.protobuf.InvalidProtocolBufferException {
         initFields();
         int mutable_bitField0_ = 0;
-        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-            com.google.protobuf.UnknownFieldSet.newBuilder();
+        com.google.protobuf.ByteString.Output unknownFieldsOutput =
+            com.google.protobuf.ByteString.newOutput();
+        com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+            com.google.protobuf.CodedOutputStream.newInstance(
+                unknownFieldsOutput);
         try {
           boolean done = false;
           while (!done) {
@@ -460,7 +401,7 @@ public final class StorageProtos {
                 done = true;
                 break;
               default: {
-                if (!parseUnknownField(input, unknownFields,
+                if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                        extensionRegistry, tag)) {
                   done = true;
                 }
@@ -508,22 +449,16 @@ public final class StorageProtos {
           if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
             messageKeys_ = java.util.Collections.unmodifiableList(messageKeys_);
           }
-          this.unknownFields = unknownFields.build();
+          try {
+            unknownFieldsCodedOutput.flush();
+          } catch (java.io.IOException e) {
+          // Should not happen
+          } finally {
+            unknownFields = unknownFieldsOutput.toByteString();
+          }
           makeExtensionsImmutable();
         }
       }
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder.class);
-      }
-
       public static com.google.protobuf.Parser<Chain> PARSER =
           new com.google.protobuf.AbstractParser<Chain>() {
         public Chain parsePartialFrom(
@@ -539,10 +474,10 @@ public final class StorageProtos {
         return PARSER;
       }
 
-      public interface ChainKeyOrBuilder
-          extends com.google.protobuf.MessageOrBuilder {
+      public interface ChainKeyOrBuilder extends
+          // @@protoc_insertion_point(interface_extends:textsecure.SessionStructure.Chain.ChainKey)
+          com.google.protobuf.MessageLiteOrBuilder {
 
-        // optional uint32 index = 1;
         /**
          * <code>optional uint32 index = 1;</code>
          */
@@ -552,7 +487,6 @@ public final class StorageProtos {
          */
         int getIndex();
 
-        // optional bytes key = 2;
         /**
          * <code>optional bytes key = 2;</code>
          */
@@ -566,14 +500,15 @@ public final class StorageProtos {
        * Protobuf type {@code textsecure.SessionStructure.Chain.ChainKey}
        */
       public static final class ChainKey extends
-          com.google.protobuf.GeneratedMessage
-          implements ChainKeyOrBuilder {
+          com.google.protobuf.GeneratedMessageLite implements
+          // @@protoc_insertion_point(message_implements:textsecure.SessionStructure.Chain.ChainKey)
+          ChainKeyOrBuilder {
         // Use ChainKey.newBuilder() to construct.
-        private ChainKey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+        private ChainKey(com.google.protobuf.GeneratedMessageLite.Builder builder) {
           super(builder);
           this.unknownFields = builder.getUnknownFields();
         }
-        private ChainKey(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+        private ChainKey(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
         private static final ChainKey defaultInstance;
         public static ChainKey getDefaultInstance() {
@@ -584,20 +519,18 @@ public final class StorageProtos {
           return defaultInstance;
         }
 
-        private final com.google.protobuf.UnknownFieldSet unknownFields;
-        @java.lang.Override
-        public final com.google.protobuf.UnknownFieldSet
-            getUnknownFields() {
-          return this.unknownFields;
-        }
+        private final com.google.protobuf.ByteString unknownFields;
         private ChainKey(
             com.google.protobuf.CodedInputStream input,
             com.google.protobuf.ExtensionRegistryLite extensionRegistry)
             throws com.google.protobuf.InvalidProtocolBufferException {
           initFields();
           int mutable_bitField0_ = 0;
-          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-              com.google.protobuf.UnknownFieldSet.newBuilder();
+          com.google.protobuf.ByteString.Output unknownFieldsOutput =
+              com.google.protobuf.ByteString.newOutput();
+          com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+              com.google.protobuf.CodedOutputStream.newInstance(
+                  unknownFieldsOutput);
           try {
             boolean done = false;
             while (!done) {
@@ -607,7 +540,7 @@ public final class StorageProtos {
                   done = true;
                   break;
                 default: {
-                  if (!parseUnknownField(input, unknownFields,
+                  if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                          extensionRegistry, tag)) {
                     done = true;
                   }
@@ -631,22 +564,16 @@ public final class StorageProtos {
             throw new com.google.protobuf.InvalidProtocolBufferException(
                 e.getMessage()).setUnfinishedMessage(this);
           } finally {
-            this.unknownFields = unknownFields.build();
+            try {
+              unknownFieldsCodedOutput.flush();
+            } catch (java.io.IOException e) {
+            // Should not happen
+            } finally {
+              unknownFields = unknownFieldsOutput.toByteString();
+            }
             makeExtensionsImmutable();
           }
         }
-        public static final com.google.protobuf.Descriptors.Descriptor
-            getDescriptor() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_ChainKey_descriptor;
-        }
-
-        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-            internalGetFieldAccessorTable() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_ChainKey_fieldAccessorTable
-              .ensureFieldAccessorsInitialized(
-                  org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.Builder.class);
-        }
-
         public static com.google.protobuf.Parser<ChainKey> PARSER =
             new com.google.protobuf.AbstractParser<ChainKey>() {
           public ChainKey parsePartialFrom(
@@ -663,7 +590,6 @@ public final class StorageProtos {
         }
 
         private int bitField0_;
-        // optional uint32 index = 1;
         public static final int INDEX_FIELD_NUMBER = 1;
         private int index_;
         /**
@@ -679,7 +605,6 @@ public final class StorageProtos {
           return index_;
         }
 
-        // optional bytes key = 2;
         public static final int KEY_FIELD_NUMBER = 2;
         private com.google.protobuf.ByteString key_;
         /**
@@ -702,7 +627,8 @@ public final class StorageProtos {
         private byte memoizedIsInitialized = -1;
         public final boolean isInitialized() {
           byte isInitialized = memoizedIsInitialized;
-          if (isInitialized != -1) return isInitialized == 1;
+          if (isInitialized == 1) return true;
+          if (isInitialized == 0) return false;
 
           memoizedIsInitialized = 1;
           return true;
@@ -717,7 +643,7 @@ public final class StorageProtos {
           if (((bitField0_ & 0x00000002) == 0x00000002)) {
             output.writeBytes(2, key_);
           }
-          getUnknownFields().writeTo(output);
+          output.writeRawBytes(unknownFields);
         }
 
         private int memoizedSerializedSize = -1;
@@ -734,7 +660,7 @@ public final class StorageProtos {
             size += com.google.protobuf.CodedOutputStream
               .computeBytesSize(2, key_);
           }
-          size += getUnknownFields().getSerializedSize();
+          size += unknownFields.size();
           memoizedSerializedSize = size;
           return size;
         }
@@ -806,43 +732,21 @@ public final class StorageProtos {
         }
         public Builder toBuilder() { return newBuilder(this); }
 
-        @java.lang.Override
-        protected Builder newBuilderForType(
-            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-          Builder builder = new Builder(parent);
-          return builder;
-        }
         /**
          * Protobuf type {@code textsecure.SessionStructure.Chain.ChainKey}
          */
         public static final class Builder extends
-            com.google.protobuf.GeneratedMessage.Builder<Builder>
-           implements org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKeyOrBuilder {
-          public static final com.google.protobuf.Descriptors.Descriptor
-              getDescriptor() {
-            return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_ChainKey_descriptor;
-          }
-
-          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-              internalGetFieldAccessorTable() {
-            return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_ChainKey_fieldAccessorTable
-                .ensureFieldAccessorsInitialized(
-                    org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.Builder.class);
-          }
-
+            com.google.protobuf.GeneratedMessageLite.Builder<
+              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey, Builder>
+            implements
+            // @@protoc_insertion_point(builder_implements:textsecure.SessionStructure.Chain.ChainKey)
+            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKeyOrBuilder {
           // Construct using org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.newBuilder()
           private Builder() {
             maybeForceBuilderInitialization();
           }
 
-          private Builder(
-              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-            super(parent);
-            maybeForceBuilderInitialization();
-          }
           private void maybeForceBuilderInitialization() {
-            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-            }
           }
           private static Builder create() {
             return new Builder();
@@ -861,11 +765,6 @@ public final class StorageProtos {
             return create().mergeFrom(buildPartial());
           }
 
-          public com.google.protobuf.Descriptors.Descriptor
-              getDescriptorForType() {
-            return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_ChainKey_descriptor;
-          }
-
           public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey getDefaultInstanceForType() {
             return org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.getDefaultInstance();
           }
@@ -891,19 +790,9 @@ public final class StorageProtos {
             }
             result.key_ = key_;
             result.bitField0_ = to_bitField0_;
-            onBuilt();
             return result;
           }
 
-          public Builder mergeFrom(com.google.protobuf.Message other) {
-            if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey) {
-              return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey)other);
-            } else {
-              super.mergeFrom(other);
-              return this;
-            }
-          }
-
           public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey other) {
             if (other == org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.getDefaultInstance()) return this;
             if (other.hasIndex()) {
@@ -912,7 +801,8 @@ public final class StorageProtos {
             if (other.hasKey()) {
               setKey(other.getKey());
             }
-            this.mergeUnknownFields(other.getUnknownFields());
+            setUnknownFields(
+                getUnknownFields().concat(other.unknownFields));
             return this;
           }
 
@@ -939,7 +829,6 @@ public final class StorageProtos {
           }
           private int bitField0_;
 
-          // optional uint32 index = 1;
           private int index_ ;
           /**
            * <code>optional uint32 index = 1;</code>
@@ -959,7 +848,7 @@ public final class StorageProtos {
           public Builder setIndex(int value) {
             bitField0_ |= 0x00000001;
             index_ = value;
-            onChanged();
+            
             return this;
           }
           /**
@@ -968,11 +857,10 @@ public final class StorageProtos {
           public Builder clearIndex() {
             bitField0_ = (bitField0_ & ~0x00000001);
             index_ = 0;
-            onChanged();
+            
             return this;
           }
 
-          // optional bytes key = 2;
           private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
           /**
            * <code>optional bytes key = 2;</code>
@@ -995,7 +883,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
             key_ = value;
-            onChanged();
+            
             return this;
           }
           /**
@@ -1004,7 +892,7 @@ public final class StorageProtos {
           public Builder clearKey() {
             bitField0_ = (bitField0_ & ~0x00000002);
             key_ = getDefaultInstance().getKey();
-            onChanged();
+            
             return this;
           }
 
@@ -1019,10 +907,10 @@ public final class StorageProtos {
         // @@protoc_insertion_point(class_scope:textsecure.SessionStructure.Chain.ChainKey)
       }
 
-      public interface MessageKeyOrBuilder
-          extends com.google.protobuf.MessageOrBuilder {
+      public interface MessageKeyOrBuilder extends
+          // @@protoc_insertion_point(interface_extends:textsecure.SessionStructure.Chain.MessageKey)
+          com.google.protobuf.MessageLiteOrBuilder {
 
-        // optional uint32 index = 1;
         /**
          * <code>optional uint32 index = 1;</code>
          */
@@ -1032,7 +920,6 @@ public final class StorageProtos {
          */
         int getIndex();
 
-        // optional bytes cipherKey = 2;
         /**
          * <code>optional bytes cipherKey = 2;</code>
          */
@@ -1042,7 +929,6 @@ public final class StorageProtos {
          */
         com.google.protobuf.ByteString getCipherKey();
 
-        // optional bytes macKey = 3;
         /**
          * <code>optional bytes macKey = 3;</code>
          */
@@ -1052,7 +938,6 @@ public final class StorageProtos {
          */
         com.google.protobuf.ByteString getMacKey();
 
-        // optional bytes iv = 4;
         /**
          * <code>optional bytes iv = 4;</code>
          */
@@ -1066,14 +951,15 @@ public final class StorageProtos {
        * Protobuf type {@code textsecure.SessionStructure.Chain.MessageKey}
        */
       public static final class MessageKey extends
-          com.google.protobuf.GeneratedMessage
-          implements MessageKeyOrBuilder {
+          com.google.protobuf.GeneratedMessageLite implements
+          // @@protoc_insertion_point(message_implements:textsecure.SessionStructure.Chain.MessageKey)
+          MessageKeyOrBuilder {
         // Use MessageKey.newBuilder() to construct.
-        private MessageKey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+        private MessageKey(com.google.protobuf.GeneratedMessageLite.Builder builder) {
           super(builder);
           this.unknownFields = builder.getUnknownFields();
         }
-        private MessageKey(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+        private MessageKey(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
         private static final MessageKey defaultInstance;
         public static MessageKey getDefaultInstance() {
@@ -1084,20 +970,18 @@ public final class StorageProtos {
           return defaultInstance;
         }
 
-        private final com.google.protobuf.UnknownFieldSet unknownFields;
-        @java.lang.Override
-        public final com.google.protobuf.UnknownFieldSet
-            getUnknownFields() {
-          return this.unknownFields;
-        }
+        private final com.google.protobuf.ByteString unknownFields;
         private MessageKey(
             com.google.protobuf.CodedInputStream input,
             com.google.protobuf.ExtensionRegistryLite extensionRegistry)
             throws com.google.protobuf.InvalidProtocolBufferException {
           initFields();
           int mutable_bitField0_ = 0;
-          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-              com.google.protobuf.UnknownFieldSet.newBuilder();
+          com.google.protobuf.ByteString.Output unknownFieldsOutput =
+              com.google.protobuf.ByteString.newOutput();
+          com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+              com.google.protobuf.CodedOutputStream.newInstance(
+                  unknownFieldsOutput);
           try {
             boolean done = false;
             while (!done) {
@@ -1107,7 +991,7 @@ public final class StorageProtos {
                   done = true;
                   break;
                 default: {
-                  if (!parseUnknownField(input, unknownFields,
+                  if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                          extensionRegistry, tag)) {
                     done = true;
                   }
@@ -1141,22 +1025,16 @@ public final class StorageProtos {
             throw new com.google.protobuf.InvalidProtocolBufferException(
                 e.getMessage()).setUnfinishedMessage(this);
           } finally {
-            this.unknownFields = unknownFields.build();
+            try {
+              unknownFieldsCodedOutput.flush();
+            } catch (java.io.IOException e) {
+            // Should not happen
+            } finally {
+              unknownFields = unknownFieldsOutput.toByteString();
+            }
             makeExtensionsImmutable();
           }
         }
-        public static final com.google.protobuf.Descriptors.Descriptor
-            getDescriptor() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_MessageKey_descriptor;
-        }
-
-        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-            internalGetFieldAccessorTable() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_MessageKey_fieldAccessorTable
-              .ensureFieldAccessorsInitialized(
-                  org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder.class);
-        }
-
         public static com.google.protobuf.Parser<MessageKey> PARSER =
             new com.google.protobuf.AbstractParser<MessageKey>() {
           public MessageKey parsePartialFrom(
@@ -1173,7 +1051,6 @@ public final class StorageProtos {
         }
 
         private int bitField0_;
-        // optional uint32 index = 1;
         public static final int INDEX_FIELD_NUMBER = 1;
         private int index_;
         /**
@@ -1189,7 +1066,6 @@ public final class StorageProtos {
           return index_;
         }
 
-        // optional bytes cipherKey = 2;
         public static final int CIPHERKEY_FIELD_NUMBER = 2;
         private com.google.protobuf.ByteString cipherKey_;
         /**
@@ -1205,7 +1081,6 @@ public final class StorageProtos {
           return cipherKey_;
         }
 
-        // optional bytes macKey = 3;
         public static final int MACKEY_FIELD_NUMBER = 3;
         private com.google.protobuf.ByteString macKey_;
         /**
@@ -1221,7 +1096,6 @@ public final class StorageProtos {
           return macKey_;
         }
 
-        // optional bytes iv = 4;
         public static final int IV_FIELD_NUMBER = 4;
         private com.google.protobuf.ByteString iv_;
         /**
@@ -1246,7 +1120,8 @@ public final class StorageProtos {
         private byte memoizedIsInitialized = -1;
         public final boolean isInitialized() {
           byte isInitialized = memoizedIsInitialized;
-          if (isInitialized != -1) return isInitialized == 1;
+          if (isInitialized == 1) return true;
+          if (isInitialized == 0) return false;
 
           memoizedIsInitialized = 1;
           return true;
@@ -1267,7 +1142,7 @@ public final class StorageProtos {
           if (((bitField0_ & 0x00000008) == 0x00000008)) {
             output.writeBytes(4, iv_);
           }
-          getUnknownFields().writeTo(output);
+          output.writeRawBytes(unknownFields);
         }
 
         private int memoizedSerializedSize = -1;
@@ -1292,7 +1167,7 @@ public final class StorageProtos {
             size += com.google.protobuf.CodedOutputStream
               .computeBytesSize(4, iv_);
           }
-          size += getUnknownFields().getSerializedSize();
+          size += unknownFields.size();
           memoizedSerializedSize = size;
           return size;
         }
@@ -1364,43 +1239,21 @@ public final class StorageProtos {
         }
         public Builder toBuilder() { return newBuilder(this); }
 
-        @java.lang.Override
-        protected Builder newBuilderForType(
-            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-          Builder builder = new Builder(parent);
-          return builder;
-        }
         /**
          * Protobuf type {@code textsecure.SessionStructure.Chain.MessageKey}
          */
         public static final class Builder extends
-            com.google.protobuf.GeneratedMessage.Builder<Builder>
-           implements org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKeyOrBuilder {
-          public static final com.google.protobuf.Descriptors.Descriptor
-              getDescriptor() {
-            return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_MessageKey_descriptor;
-          }
-
-          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-              internalGetFieldAccessorTable() {
-            return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_MessageKey_fieldAccessorTable
-                .ensureFieldAccessorsInitialized(
-                    org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder.class);
-          }
-
+            com.google.protobuf.GeneratedMessageLite.Builder<
+              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey, Builder>
+            implements
+            // @@protoc_insertion_point(builder_implements:textsecure.SessionStructure.Chain.MessageKey)
+            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKeyOrBuilder {
           // Construct using org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.newBuilder()
           private Builder() {
             maybeForceBuilderInitialization();
           }
 
-          private Builder(
-              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-            super(parent);
-            maybeForceBuilderInitialization();
-          }
           private void maybeForceBuilderInitialization() {
-            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-            }
           }
           private static Builder create() {
             return new Builder();
@@ -1423,11 +1276,6 @@ public final class StorageProtos {
             return create().mergeFrom(buildPartial());
           }
 
-          public com.google.protobuf.Descriptors.Descriptor
-              getDescriptorForType() {
-            return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_MessageKey_descriptor;
-          }
-
           public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey getDefaultInstanceForType() {
             return org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.getDefaultInstance();
           }
@@ -1461,19 +1309,9 @@ public final class StorageProtos {
             }
             result.iv_ = iv_;
             result.bitField0_ = to_bitField0_;
-            onBuilt();
             return result;
           }
 
-          public Builder mergeFrom(com.google.protobuf.Message other) {
-            if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey) {
-              return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey)other);
-            } else {
-              super.mergeFrom(other);
-              return this;
-            }
-          }
-
           public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey other) {
             if (other == org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.getDefaultInstance()) return this;
             if (other.hasIndex()) {
@@ -1488,7 +1326,8 @@ public final class StorageProtos {
             if (other.hasIv()) {
               setIv(other.getIv());
             }
-            this.mergeUnknownFields(other.getUnknownFields());
+            setUnknownFields(
+                getUnknownFields().concat(other.unknownFields));
             return this;
           }
 
@@ -1515,7 +1354,6 @@ public final class StorageProtos {
           }
           private int bitField0_;
 
-          // optional uint32 index = 1;
           private int index_ ;
           /**
            * <code>optional uint32 index = 1;</code>
@@ -1535,7 +1373,7 @@ public final class StorageProtos {
           public Builder setIndex(int value) {
             bitField0_ |= 0x00000001;
             index_ = value;
-            onChanged();
+            
             return this;
           }
           /**
@@ -1544,11 +1382,10 @@ public final class StorageProtos {
           public Builder clearIndex() {
             bitField0_ = (bitField0_ & ~0x00000001);
             index_ = 0;
-            onChanged();
+            
             return this;
           }
 
-          // optional bytes cipherKey = 2;
           private com.google.protobuf.ByteString cipherKey_ = com.google.protobuf.ByteString.EMPTY;
           /**
            * <code>optional bytes cipherKey = 2;</code>
@@ -1571,7 +1408,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
             cipherKey_ = value;
-            onChanged();
+            
             return this;
           }
           /**
@@ -1580,11 +1417,10 @@ public final class StorageProtos {
           public Builder clearCipherKey() {
             bitField0_ = (bitField0_ & ~0x00000002);
             cipherKey_ = getDefaultInstance().getCipherKey();
-            onChanged();
+            
             return this;
           }
 
-          // optional bytes macKey = 3;
           private com.google.protobuf.ByteString macKey_ = com.google.protobuf.ByteString.EMPTY;
           /**
            * <code>optional bytes macKey = 3;</code>
@@ -1607,7 +1443,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000004;
             macKey_ = value;
-            onChanged();
+            
             return this;
           }
           /**
@@ -1616,11 +1452,10 @@ public final class StorageProtos {
           public Builder clearMacKey() {
             bitField0_ = (bitField0_ & ~0x00000004);
             macKey_ = getDefaultInstance().getMacKey();
-            onChanged();
+            
             return this;
           }
 
-          // optional bytes iv = 4;
           private com.google.protobuf.ByteString iv_ = com.google.protobuf.ByteString.EMPTY;
           /**
            * <code>optional bytes iv = 4;</code>
@@ -1643,7 +1478,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000008;
             iv_ = value;
-            onChanged();
+            
             return this;
           }
           /**
@@ -1652,7 +1487,7 @@ public final class StorageProtos {
           public Builder clearIv() {
             bitField0_ = (bitField0_ & ~0x00000008);
             iv_ = getDefaultInstance().getIv();
-            onChanged();
+            
             return this;
           }
 
@@ -1668,7 +1503,6 @@ public final class StorageProtos {
       }
 
       private int bitField0_;
-      // optional bytes senderRatchetKey = 1;
       public static final int SENDERRATCHETKEY_FIELD_NUMBER = 1;
       private com.google.protobuf.ByteString senderRatchetKey_;
       /**
@@ -1684,7 +1518,6 @@ public final class StorageProtos {
         return senderRatchetKey_;
       }
 
-      // optional bytes senderRatchetKeyPrivate = 2;
       public static final int SENDERRATCHETKEYPRIVATE_FIELD_NUMBER = 2;
       private com.google.protobuf.ByteString senderRatchetKeyPrivate_;
       /**
@@ -1700,7 +1533,6 @@ public final class StorageProtos {
         return senderRatchetKeyPrivate_;
       }
 
-      // optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;
       public static final int CHAINKEY_FIELD_NUMBER = 3;
       private org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey chainKey_;
       /**
@@ -1715,14 +1547,7 @@ public final class StorageProtos {
       public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey getChainKey() {
         return chainKey_;
       }
-      /**
-       * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKeyOrBuilder getChainKeyOrBuilder() {
-        return chainKey_;
-      }
 
-      // repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;
       public static final int MESSAGEKEYS_FIELD_NUMBER = 4;
       private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey> messageKeys_;
       /**
@@ -1767,7 +1592,8 @@ public final class StorageProtos {
       private byte memoizedIsInitialized = -1;
       public final boolean isInitialized() {
         byte isInitialized = memoizedIsInitialized;
-        if (isInitialized != -1) return isInitialized == 1;
+        if (isInitialized == 1) return true;
+        if (isInitialized == 0) return false;
 
         memoizedIsInitialized = 1;
         return true;
@@ -1788,7 +1614,7 @@ public final class StorageProtos {
         for (int i = 0; i < messageKeys_.size(); i++) {
           output.writeMessage(4, messageKeys_.get(i));
         }
-        getUnknownFields().writeTo(output);
+        output.writeRawBytes(unknownFields);
       }
 
       private int memoizedSerializedSize = -1;
@@ -1813,7 +1639,7 @@ public final class StorageProtos {
           size += com.google.protobuf.CodedOutputStream
             .computeMessageSize(4, messageKeys_.get(i));
         }
-        size += getUnknownFields().getSerializedSize();
+        size += unknownFields.size();
         memoizedSerializedSize = size;
         return size;
       }
@@ -1885,45 +1711,21 @@ public final class StorageProtos {
       }
       public Builder toBuilder() { return newBuilder(this); }
 
-      @java.lang.Override
-      protected Builder newBuilderForType(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        Builder builder = new Builder(parent);
-        return builder;
-      }
       /**
        * Protobuf type {@code textsecure.SessionStructure.Chain}
        */
       public static final class Builder extends
-          com.google.protobuf.GeneratedMessage.Builder<Builder>
-         implements org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder {
-        public static final com.google.protobuf.Descriptors.Descriptor
-            getDescriptor() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_descriptor;
-        }
-
-        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-            internalGetFieldAccessorTable() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_fieldAccessorTable
-              .ensureFieldAccessorsInitialized(
-                  org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder.class);
-        }
-
+          com.google.protobuf.GeneratedMessageLite.Builder<
+            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain, Builder>
+          implements
+          // @@protoc_insertion_point(builder_implements:textsecure.SessionStructure.Chain)
+          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder {
         // Construct using org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.newBuilder()
         private Builder() {
           maybeForceBuilderInitialization();
         }
 
-        private Builder(
-            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-          super(parent);
-          maybeForceBuilderInitialization();
-        }
         private void maybeForceBuilderInitialization() {
-          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-            getChainKeyFieldBuilder();
-            getMessageKeysFieldBuilder();
-          }
         }
         private static Builder create() {
           return new Builder();
@@ -1935,18 +1737,10 @@ public final class StorageProtos {
           bitField0_ = (bitField0_ & ~0x00000001);
           senderRatchetKeyPrivate_ = com.google.protobuf.ByteString.EMPTY;
           bitField0_ = (bitField0_ & ~0x00000002);
-          if (chainKeyBuilder_ == null) {
-            chainKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.getDefaultInstance();
-          } else {
-            chainKeyBuilder_.clear();
-          }
+          chainKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.getDefaultInstance();
           bitField0_ = (bitField0_ & ~0x00000004);
-          if (messageKeysBuilder_ == null) {
-            messageKeys_ = java.util.Collections.emptyList();
-            bitField0_ = (bitField0_ & ~0x00000008);
-          } else {
-            messageKeysBuilder_.clear();
-          }
+          messageKeys_ = java.util.Collections.emptyList();
+          bitField0_ = (bitField0_ & ~0x00000008);
           return this;
         }
 
@@ -1954,11 +1748,6 @@ public final class StorageProtos {
           return create().mergeFrom(buildPartial());
         }
 
-        public com.google.protobuf.Descriptors.Descriptor
-            getDescriptorForType() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_Chain_descriptor;
-        }
-
         public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain getDefaultInstanceForType() {
           return org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance();
         }
@@ -1986,34 +1775,16 @@ public final class StorageProtos {
           if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
             to_bitField0_ |= 0x00000004;
           }
-          if (chainKeyBuilder_ == null) {
-            result.chainKey_ = chainKey_;
-          } else {
-            result.chainKey_ = chainKeyBuilder_.build();
-          }
-          if (messageKeysBuilder_ == null) {
-            if (((bitField0_ & 0x00000008) == 0x00000008)) {
-              messageKeys_ = java.util.Collections.unmodifiableList(messageKeys_);
-              bitField0_ = (bitField0_ & ~0x00000008);
-            }
-            result.messageKeys_ = messageKeys_;
-          } else {
-            result.messageKeys_ = messageKeysBuilder_.build();
+          result.chainKey_ = chainKey_;
+          if (((bitField0_ & 0x00000008) == 0x00000008)) {
+            messageKeys_ = java.util.Collections.unmodifiableList(messageKeys_);
+            bitField0_ = (bitField0_ & ~0x00000008);
           }
+          result.messageKeys_ = messageKeys_;
           result.bitField0_ = to_bitField0_;
-          onBuilt();
           return result;
         }
 
-        public Builder mergeFrom(com.google.protobuf.Message other) {
-          if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain) {
-            return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain)other);
-          } else {
-            super.mergeFrom(other);
-            return this;
-          }
-        }
-
         public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain other) {
           if (other == org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance()) return this;
           if (other.hasSenderRatchetKey()) {
@@ -2025,33 +1796,18 @@ public final class StorageProtos {
           if (other.hasChainKey()) {
             mergeChainKey(other.getChainKey());
           }
-          if (messageKeysBuilder_ == null) {
-            if (!other.messageKeys_.isEmpty()) {
-              if (messageKeys_.isEmpty()) {
-                messageKeys_ = other.messageKeys_;
-                bitField0_ = (bitField0_ & ~0x00000008);
-              } else {
-                ensureMessageKeysIsMutable();
-                messageKeys_.addAll(other.messageKeys_);
-              }
-              onChanged();
-            }
-          } else {
-            if (!other.messageKeys_.isEmpty()) {
-              if (messageKeysBuilder_.isEmpty()) {
-                messageKeysBuilder_.dispose();
-                messageKeysBuilder_ = null;
-                messageKeys_ = other.messageKeys_;
-                bitField0_ = (bitField0_ & ~0x00000008);
-                messageKeysBuilder_ = 
-                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
-                     getMessageKeysFieldBuilder() : null;
-              } else {
-                messageKeysBuilder_.addAllMessages(other.messageKeys_);
-              }
+          if (!other.messageKeys_.isEmpty()) {
+            if (messageKeys_.isEmpty()) {
+              messageKeys_ = other.messageKeys_;
+              bitField0_ = (bitField0_ & ~0x00000008);
+            } else {
+              ensureMessageKeysIsMutable();
+              messageKeys_.addAll(other.messageKeys_);
             }
+            
           }
-          this.mergeUnknownFields(other.getUnknownFields());
+          setUnknownFields(
+              getUnknownFields().concat(other.unknownFields));
           return this;
         }
 
@@ -2078,7 +1834,6 @@ public final class StorageProtos {
         }
         private int bitField0_;
 
-        // optional bytes senderRatchetKey = 1;
         private com.google.protobuf.ByteString senderRatchetKey_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes senderRatchetKey = 1;</code>
@@ -2101,7 +1856,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000001;
           senderRatchetKey_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -2110,11 +1865,10 @@ public final class StorageProtos {
         public Builder clearSenderRatchetKey() {
           bitField0_ = (bitField0_ & ~0x00000001);
           senderRatchetKey_ = getDefaultInstance().getSenderRatchetKey();
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes senderRatchetKeyPrivate = 2;
         private com.google.protobuf.ByteString senderRatchetKeyPrivate_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes senderRatchetKeyPrivate = 2;</code>
@@ -2137,7 +1891,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
           senderRatchetKeyPrivate_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -2146,14 +1900,11 @@ public final class StorageProtos {
         public Builder clearSenderRatchetKeyPrivate() {
           bitField0_ = (bitField0_ & ~0x00000002);
           senderRatchetKeyPrivate_ = getDefaultInstance().getSenderRatchetKeyPrivate();
-          onChanged();
+          
           return this;
         }
 
-        // optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;
         private org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey chainKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.getDefaultInstance();
-        private com.google.protobuf.SingleFieldBuilder<
-            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKeyOrBuilder> chainKeyBuilder_;
         /**
          * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
          */
@@ -2164,25 +1915,17 @@ public final class StorageProtos {
          * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
          */
         public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey getChainKey() {
-          if (chainKeyBuilder_ == null) {
-            return chainKey_;
-          } else {
-            return chainKeyBuilder_.getMessage();
-          }
+          return chainKey_;
         }
         /**
          * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
          */
         public Builder setChainKey(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey value) {
-          if (chainKeyBuilder_ == null) {
-            if (value == null) {
-              throw new NullPointerException();
-            }
-            chainKey_ = value;
-            onChanged();
-          } else {
-            chainKeyBuilder_.setMessage(value);
+          if (value == null) {
+            throw new NullPointerException();
           }
+          chainKey_ = value;
+
           bitField0_ |= 0x00000004;
           return this;
         }
@@ -2191,12 +1934,8 @@ public final class StorageProtos {
          */
         public Builder setChainKey(
             org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.Builder builderForValue) {
-          if (chainKeyBuilder_ == null) {
-            chainKey_ = builderForValue.build();
-            onChanged();
-          } else {
-            chainKeyBuilder_.setMessage(builderForValue.build());
-          }
+          chainKey_ = builderForValue.build();
+
           bitField0_ |= 0x00000004;
           return this;
         }
@@ -2204,18 +1943,14 @@ public final class StorageProtos {
          * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
          */
         public Builder mergeChainKey(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey value) {
-          if (chainKeyBuilder_ == null) {
-            if (((bitField0_ & 0x00000004) == 0x00000004) &&
-                chainKey_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.getDefaultInstance()) {
-              chainKey_ =
-                org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.newBuilder(chainKey_).mergeFrom(value).buildPartial();
-            } else {
-              chainKey_ = value;
-            }
-            onChanged();
+          if (((bitField0_ & 0x00000004) == 0x00000004) &&
+              chainKey_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.getDefaultInstance()) {
+            chainKey_ =
+              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.newBuilder(chainKey_).mergeFrom(value).buildPartial();
           } else {
-            chainKeyBuilder_.mergeFrom(value);
+            chainKey_ = value;
           }
+
           bitField0_ |= 0x00000004;
           return this;
         }
@@ -2223,51 +1958,12 @@ public final class StorageProtos {
          * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
          */
         public Builder clearChainKey() {
-          if (chainKeyBuilder_ == null) {
-            chainKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.getDefaultInstance();
-            onChanged();
-          } else {
-            chainKeyBuilder_.clear();
-          }
+          chainKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.getDefaultInstance();
+
           bitField0_ = (bitField0_ & ~0x00000004);
           return this;
         }
-        /**
-         * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
-         */
-        public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.Builder getChainKeyBuilder() {
-          bitField0_ |= 0x00000004;
-          onChanged();
-          return getChainKeyFieldBuilder().getBuilder();
-        }
-        /**
-         * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
-         */
-        public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKeyOrBuilder getChainKeyOrBuilder() {
-          if (chainKeyBuilder_ != null) {
-            return chainKeyBuilder_.getMessageOrBuilder();
-          } else {
-            return chainKey_;
-          }
-        }
-        /**
-         * <code>optional .textsecure.SessionStructure.Chain.ChainKey chainKey = 3;</code>
-         */
-        private com.google.protobuf.SingleFieldBuilder<
-            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKeyOrBuilder> 
-            getChainKeyFieldBuilder() {
-          if (chainKeyBuilder_ == null) {
-            chainKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
-                org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.ChainKeyOrBuilder>(
-                    chainKey_,
-                    getParentForChildren(),
-                    isClean());
-            chainKey_ = null;
-          }
-          return chainKeyBuilder_;
-        }
 
-        // repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;
         private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey> messageKeys_ =
           java.util.Collections.emptyList();
         private void ensureMessageKeysIsMutable() {
@@ -2277,54 +1973,35 @@ public final class StorageProtos {
            }
         }
 
-        private com.google.protobuf.RepeatedFieldBuilder<
-            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKeyOrBuilder> messageKeysBuilder_;
-
         /**
          * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
          */
         public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey> getMessageKeysList() {
-          if (messageKeysBuilder_ == null) {
-            return java.util.Collections.unmodifiableList(messageKeys_);
-          } else {
-            return messageKeysBuilder_.getMessageList();
-          }
+          return java.util.Collections.unmodifiableList(messageKeys_);
         }
         /**
          * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
          */
         public int getMessageKeysCount() {
-          if (messageKeysBuilder_ == null) {
-            return messageKeys_.size();
-          } else {
-            return messageKeysBuilder_.getCount();
-          }
+          return messageKeys_.size();
         }
         /**
          * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
          */
         public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey getMessageKeys(int index) {
-          if (messageKeysBuilder_ == null) {
-            return messageKeys_.get(index);
-          } else {
-            return messageKeysBuilder_.getMessage(index);
-          }
+          return messageKeys_.get(index);
         }
         /**
          * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
          */
         public Builder setMessageKeys(
             int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey value) {
-          if (messageKeysBuilder_ == null) {
-            if (value == null) {
-              throw new NullPointerException();
-            }
-            ensureMessageKeysIsMutable();
-            messageKeys_.set(index, value);
-            onChanged();
-          } else {
-            messageKeysBuilder_.setMessage(index, value);
+          if (value == null) {
+            throw new NullPointerException();
           }
+          ensureMessageKeysIsMutable();
+          messageKeys_.set(index, value);
+
           return this;
         }
         /**
@@ -2332,29 +2009,21 @@ public final class StorageProtos {
          */
         public Builder setMessageKeys(
             int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder builderForValue) {
-          if (messageKeysBuilder_ == null) {
-            ensureMessageKeysIsMutable();
-            messageKeys_.set(index, builderForValue.build());
-            onChanged();
-          } else {
-            messageKeysBuilder_.setMessage(index, builderForValue.build());
-          }
+          ensureMessageKeysIsMutable();
+          messageKeys_.set(index, builderForValue.build());
+
           return this;
         }
         /**
          * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
          */
         public Builder addMessageKeys(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey value) {
-          if (messageKeysBuilder_ == null) {
-            if (value == null) {
-              throw new NullPointerException();
-            }
-            ensureMessageKeysIsMutable();
-            messageKeys_.add(value);
-            onChanged();
-          } else {
-            messageKeysBuilder_.addMessage(value);
+          if (value == null) {
+            throw new NullPointerException();
           }
+          ensureMessageKeysIsMutable();
+          messageKeys_.add(value);
+
           return this;
         }
         /**
@@ -2362,16 +2031,12 @@ public final class StorageProtos {
          */
         public Builder addMessageKeys(
             int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey value) {
-          if (messageKeysBuilder_ == null) {
-            if (value == null) {
-              throw new NullPointerException();
-            }
-            ensureMessageKeysIsMutable();
-            messageKeys_.add(index, value);
-            onChanged();
-          } else {
-            messageKeysBuilder_.addMessage(index, value);
+          if (value == null) {
+            throw new NullPointerException();
           }
+          ensureMessageKeysIsMutable();
+          messageKeys_.add(index, value);
+
           return this;
         }
         /**
@@ -2379,13 +2044,9 @@ public final class StorageProtos {
          */
         public Builder addMessageKeys(
             org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder builderForValue) {
-          if (messageKeysBuilder_ == null) {
-            ensureMessageKeysIsMutable();
-            messageKeys_.add(builderForValue.build());
-            onChanged();
-          } else {
-            messageKeysBuilder_.addMessage(builderForValue.build());
-          }
+          ensureMessageKeysIsMutable();
+          messageKeys_.add(builderForValue.build());
+
           return this;
         }
         /**
@@ -2393,13 +2054,9 @@ public final class StorageProtos {
          */
         public Builder addMessageKeys(
             int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder builderForValue) {
-          if (messageKeysBuilder_ == null) {
-            ensureMessageKeysIsMutable();
-            messageKeys_.add(index, builderForValue.build());
-            onChanged();
-          } else {
-            messageKeysBuilder_.addMessage(index, builderForValue.build());
-          }
+          ensureMessageKeysIsMutable();
+          messageKeys_.add(index, builderForValue.build());
+
           return this;
         }
         /**
@@ -2407,105 +2064,30 @@ public final class StorageProtos {
          */
         public Builder addAllMessageKeys(
             java.lang.Iterable<? extends org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey> values) {
-          if (messageKeysBuilder_ == null) {
-            ensureMessageKeysIsMutable();
-            super.addAll(values, messageKeys_);
-            onChanged();
-          } else {
-            messageKeysBuilder_.addAllMessages(values);
-          }
+          ensureMessageKeysIsMutable();
+          com.google.protobuf.AbstractMessageLite.Builder.addAll(
+              values, messageKeys_);
+
           return this;
         }
         /**
          * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
          */
         public Builder clearMessageKeys() {
-          if (messageKeysBuilder_ == null) {
-            messageKeys_ = java.util.Collections.emptyList();
-            bitField0_ = (bitField0_ & ~0x00000008);
-            onChanged();
-          } else {
-            messageKeysBuilder_.clear();
-          }
+          messageKeys_ = java.util.Collections.emptyList();
+          bitField0_ = (bitField0_ & ~0x00000008);
+
           return this;
         }
         /**
          * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
          */
         public Builder removeMessageKeys(int index) {
-          if (messageKeysBuilder_ == null) {
-            ensureMessageKeysIsMutable();
-            messageKeys_.remove(index);
-            onChanged();
-          } else {
-            messageKeysBuilder_.remove(index);
-          }
+          ensureMessageKeysIsMutable();
+          messageKeys_.remove(index);
+
           return this;
         }
-        /**
-         * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
-         */
-        public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder getMessageKeysBuilder(
-            int index) {
-          return getMessageKeysFieldBuilder().getBuilder(index);
-        }
-        /**
-         * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
-         */
-        public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKeyOrBuilder getMessageKeysOrBuilder(
-            int index) {
-          if (messageKeysBuilder_ == null) {
-            return messageKeys_.get(index);  } else {
-            return messageKeysBuilder_.getMessageOrBuilder(index);
-          }
-        }
-        /**
-         * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
-         */
-        public java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKeyOrBuilder> 
-             getMessageKeysOrBuilderList() {
-          if (messageKeysBuilder_ != null) {
-            return messageKeysBuilder_.getMessageOrBuilderList();
-          } else {
-            return java.util.Collections.unmodifiableList(messageKeys_);
-          }
-        }
-        /**
-         * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
-         */
-        public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder addMessageKeysBuilder() {
-          return getMessageKeysFieldBuilder().addBuilder(
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.getDefaultInstance());
-        }
-        /**
-         * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
-         */
-        public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder addMessageKeysBuilder(
-            int index) {
-          return getMessageKeysFieldBuilder().addBuilder(
-              index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.getDefaultInstance());
-        }
-        /**
-         * <code>repeated .textsecure.SessionStructure.Chain.MessageKey messageKeys = 4;</code>
-         */
-        public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder> 
-             getMessageKeysBuilderList() {
-          return getMessageKeysFieldBuilder().getBuilderList();
-        }
-        private com.google.protobuf.RepeatedFieldBuilder<
-            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKeyOrBuilder> 
-            getMessageKeysFieldBuilder() {
-          if (messageKeysBuilder_ == null) {
-            messageKeysBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
-                org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.MessageKeyOrBuilder>(
-                    messageKeys_,
-                    ((bitField0_ & 0x00000008) == 0x00000008),
-                    getParentForChildren(),
-                    isClean());
-            messageKeys_ = null;
-          }
-          return messageKeysBuilder_;
-        }
 
         // @@protoc_insertion_point(builder_scope:textsecure.SessionStructure.Chain)
       }
@@ -2518,10 +2100,10 @@ public final class StorageProtos {
       // @@protoc_insertion_point(class_scope:textsecure.SessionStructure.Chain)
     }
 
-    public interface PendingKeyExchangeOrBuilder
-        extends com.google.protobuf.MessageOrBuilder {
+    public interface PendingKeyExchangeOrBuilder extends
+        // @@protoc_insertion_point(interface_extends:textsecure.SessionStructure.PendingKeyExchange)
+        com.google.protobuf.MessageLiteOrBuilder {
 
-      // optional uint32 sequence = 1;
       /**
        * <code>optional uint32 sequence = 1;</code>
        */
@@ -2531,7 +2113,6 @@ public final class StorageProtos {
        */
       int getSequence();
 
-      // optional bytes localBaseKey = 2;
       /**
        * <code>optional bytes localBaseKey = 2;</code>
        */
@@ -2541,7 +2122,6 @@ public final class StorageProtos {
        */
       com.google.protobuf.ByteString getLocalBaseKey();
 
-      // optional bytes localBaseKeyPrivate = 3;
       /**
        * <code>optional bytes localBaseKeyPrivate = 3;</code>
        */
@@ -2551,7 +2131,6 @@ public final class StorageProtos {
        */
       com.google.protobuf.ByteString getLocalBaseKeyPrivate();
 
-      // optional bytes localRatchetKey = 4;
       /**
        * <code>optional bytes localRatchetKey = 4;</code>
        */
@@ -2561,7 +2140,6 @@ public final class StorageProtos {
        */
       com.google.protobuf.ByteString getLocalRatchetKey();
 
-      // optional bytes localRatchetKeyPrivate = 5;
       /**
        * <code>optional bytes localRatchetKeyPrivate = 5;</code>
        */
@@ -2571,7 +2149,6 @@ public final class StorageProtos {
        */
       com.google.protobuf.ByteString getLocalRatchetKeyPrivate();
 
-      // optional bytes localIdentityKey = 7;
       /**
        * <code>optional bytes localIdentityKey = 7;</code>
        */
@@ -2581,7 +2158,6 @@ public final class StorageProtos {
        */
       com.google.protobuf.ByteString getLocalIdentityKey();
 
-      // optional bytes localIdentityKeyPrivate = 8;
       /**
        * <code>optional bytes localIdentityKeyPrivate = 8;</code>
        */
@@ -2595,14 +2171,15 @@ public final class StorageProtos {
      * Protobuf type {@code textsecure.SessionStructure.PendingKeyExchange}
      */
     public static final class PendingKeyExchange extends
-        com.google.protobuf.GeneratedMessage
-        implements PendingKeyExchangeOrBuilder {
+        com.google.protobuf.GeneratedMessageLite implements
+        // @@protoc_insertion_point(message_implements:textsecure.SessionStructure.PendingKeyExchange)
+        PendingKeyExchangeOrBuilder {
       // Use PendingKeyExchange.newBuilder() to construct.
-      private PendingKeyExchange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+      private PendingKeyExchange(com.google.protobuf.GeneratedMessageLite.Builder builder) {
         super(builder);
         this.unknownFields = builder.getUnknownFields();
       }
-      private PendingKeyExchange(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+      private PendingKeyExchange(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
       private static final PendingKeyExchange defaultInstance;
       public static PendingKeyExchange getDefaultInstance() {
@@ -2613,20 +2190,18 @@ public final class StorageProtos {
         return defaultInstance;
       }
 
-      private final com.google.protobuf.UnknownFieldSet unknownFields;
-      @java.lang.Override
-      public final com.google.protobuf.UnknownFieldSet
-          getUnknownFields() {
-        return this.unknownFields;
-      }
+      private final com.google.protobuf.ByteString unknownFields;
       private PendingKeyExchange(
           com.google.protobuf.CodedInputStream input,
           com.google.protobuf.ExtensionRegistryLite extensionRegistry)
           throws com.google.protobuf.InvalidProtocolBufferException {
         initFields();
         int mutable_bitField0_ = 0;
-        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-            com.google.protobuf.UnknownFieldSet.newBuilder();
+        com.google.protobuf.ByteString.Output unknownFieldsOutput =
+            com.google.protobuf.ByteString.newOutput();
+        com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+            com.google.protobuf.CodedOutputStream.newInstance(
+                unknownFieldsOutput);
         try {
           boolean done = false;
           while (!done) {
@@ -2636,7 +2211,7 @@ public final class StorageProtos {
                 done = true;
                 break;
               default: {
-                if (!parseUnknownField(input, unknownFields,
+                if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                        extensionRegistry, tag)) {
                   done = true;
                 }
@@ -2685,22 +2260,16 @@ public final class StorageProtos {
           throw new com.google.protobuf.InvalidProtocolBufferException(
               e.getMessage()).setUnfinishedMessage(this);
         } finally {
-          this.unknownFields = unknownFields.build();
+          try {
+            unknownFieldsCodedOutput.flush();
+          } catch (java.io.IOException e) {
+          // Should not happen
+          } finally {
+            unknownFields = unknownFieldsOutput.toByteString();
+          }
           makeExtensionsImmutable();
         }
       }
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingKeyExchange_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingKeyExchange_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.Builder.class);
-      }
-
       public static com.google.protobuf.Parser<PendingKeyExchange> PARSER =
           new com.google.protobuf.AbstractParser<PendingKeyExchange>() {
         public PendingKeyExchange parsePartialFrom(
@@ -2717,7 +2286,6 @@ public final class StorageProtos {
       }
 
       private int bitField0_;
-      // optional uint32 sequence = 1;
       public static final int SEQUENCE_FIELD_NUMBER = 1;
       private int sequence_;
       /**
@@ -2733,7 +2301,6 @@ public final class StorageProtos {
         return sequence_;
       }
 
-      // optional bytes localBaseKey = 2;
       public static final int LOCALBASEKEY_FIELD_NUMBER = 2;
       private com.google.protobuf.ByteString localBaseKey_;
       /**
@@ -2749,7 +2316,6 @@ public final class StorageProtos {
         return localBaseKey_;
       }
 
-      // optional bytes localBaseKeyPrivate = 3;
       public static final int LOCALBASEKEYPRIVATE_FIELD_NUMBER = 3;
       private com.google.protobuf.ByteString localBaseKeyPrivate_;
       /**
@@ -2765,7 +2331,6 @@ public final class StorageProtos {
         return localBaseKeyPrivate_;
       }
 
-      // optional bytes localRatchetKey = 4;
       public static final int LOCALRATCHETKEY_FIELD_NUMBER = 4;
       private com.google.protobuf.ByteString localRatchetKey_;
       /**
@@ -2781,7 +2346,6 @@ public final class StorageProtos {
         return localRatchetKey_;
       }
 
-      // optional bytes localRatchetKeyPrivate = 5;
       public static final int LOCALRATCHETKEYPRIVATE_FIELD_NUMBER = 5;
       private com.google.protobuf.ByteString localRatchetKeyPrivate_;
       /**
@@ -2797,7 +2361,6 @@ public final class StorageProtos {
         return localRatchetKeyPrivate_;
       }
 
-      // optional bytes localIdentityKey = 7;
       public static final int LOCALIDENTITYKEY_FIELD_NUMBER = 7;
       private com.google.protobuf.ByteString localIdentityKey_;
       /**
@@ -2813,7 +2376,6 @@ public final class StorageProtos {
         return localIdentityKey_;
       }
 
-      // optional bytes localIdentityKeyPrivate = 8;
       public static final int LOCALIDENTITYKEYPRIVATE_FIELD_NUMBER = 8;
       private com.google.protobuf.ByteString localIdentityKeyPrivate_;
       /**
@@ -2841,7 +2403,8 @@ public final class StorageProtos {
       private byte memoizedIsInitialized = -1;
       public final boolean isInitialized() {
         byte isInitialized = memoizedIsInitialized;
-        if (isInitialized != -1) return isInitialized == 1;
+        if (isInitialized == 1) return true;
+        if (isInitialized == 0) return false;
 
         memoizedIsInitialized = 1;
         return true;
@@ -2871,7 +2434,7 @@ public final class StorageProtos {
         if (((bitField0_ & 0x00000040) == 0x00000040)) {
           output.writeBytes(8, localIdentityKeyPrivate_);
         }
-        getUnknownFields().writeTo(output);
+        output.writeRawBytes(unknownFields);
       }
 
       private int memoizedSerializedSize = -1;
@@ -2908,7 +2471,7 @@ public final class StorageProtos {
           size += com.google.protobuf.CodedOutputStream
             .computeBytesSize(8, localIdentityKeyPrivate_);
         }
-        size += getUnknownFields().getSerializedSize();
+        size += unknownFields.size();
         memoizedSerializedSize = size;
         return size;
       }
@@ -2980,43 +2543,21 @@ public final class StorageProtos {
       }
       public Builder toBuilder() { return newBuilder(this); }
 
-      @java.lang.Override
-      protected Builder newBuilderForType(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        Builder builder = new Builder(parent);
-        return builder;
-      }
       /**
        * Protobuf type {@code textsecure.SessionStructure.PendingKeyExchange}
        */
       public static final class Builder extends
-          com.google.protobuf.GeneratedMessage.Builder<Builder>
-         implements org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchangeOrBuilder {
-        public static final com.google.protobuf.Descriptors.Descriptor
-            getDescriptor() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingKeyExchange_descriptor;
-        }
-
-        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-            internalGetFieldAccessorTable() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingKeyExchange_fieldAccessorTable
-              .ensureFieldAccessorsInitialized(
-                  org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.Builder.class);
-        }
-
+          com.google.protobuf.GeneratedMessageLite.Builder<
+            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange, Builder>
+          implements
+          // @@protoc_insertion_point(builder_implements:textsecure.SessionStructure.PendingKeyExchange)
+          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchangeOrBuilder {
         // Construct using org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.newBuilder()
         private Builder() {
           maybeForceBuilderInitialization();
         }
 
-        private Builder(
-            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-          super(parent);
-          maybeForceBuilderInitialization();
-        }
         private void maybeForceBuilderInitialization() {
-          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          }
         }
         private static Builder create() {
           return new Builder();
@@ -3045,11 +2586,6 @@ public final class StorageProtos {
           return create().mergeFrom(buildPartial());
         }
 
-        public com.google.protobuf.Descriptors.Descriptor
-            getDescriptorForType() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingKeyExchange_descriptor;
-        }
-
         public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange getDefaultInstanceForType() {
           return org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.getDefaultInstance();
         }
@@ -3095,19 +2631,9 @@ public final class StorageProtos {
           }
           result.localIdentityKeyPrivate_ = localIdentityKeyPrivate_;
           result.bitField0_ = to_bitField0_;
-          onBuilt();
           return result;
         }
 
-        public Builder mergeFrom(com.google.protobuf.Message other) {
-          if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange) {
-            return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange)other);
-          } else {
-            super.mergeFrom(other);
-            return this;
-          }
-        }
-
         public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange other) {
           if (other == org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.getDefaultInstance()) return this;
           if (other.hasSequence()) {
@@ -3131,7 +2657,8 @@ public final class StorageProtos {
           if (other.hasLocalIdentityKeyPrivate()) {
             setLocalIdentityKeyPrivate(other.getLocalIdentityKeyPrivate());
           }
-          this.mergeUnknownFields(other.getUnknownFields());
+          setUnknownFields(
+              getUnknownFields().concat(other.unknownFields));
           return this;
         }
 
@@ -3158,7 +2685,6 @@ public final class StorageProtos {
         }
         private int bitField0_;
 
-        // optional uint32 sequence = 1;
         private int sequence_ ;
         /**
          * <code>optional uint32 sequence = 1;</code>
@@ -3178,7 +2704,7 @@ public final class StorageProtos {
         public Builder setSequence(int value) {
           bitField0_ |= 0x00000001;
           sequence_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3187,11 +2713,10 @@ public final class StorageProtos {
         public Builder clearSequence() {
           bitField0_ = (bitField0_ & ~0x00000001);
           sequence_ = 0;
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes localBaseKey = 2;
         private com.google.protobuf.ByteString localBaseKey_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes localBaseKey = 2;</code>
@@ -3214,7 +2739,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
           localBaseKey_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3223,11 +2748,10 @@ public final class StorageProtos {
         public Builder clearLocalBaseKey() {
           bitField0_ = (bitField0_ & ~0x00000002);
           localBaseKey_ = getDefaultInstance().getLocalBaseKey();
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes localBaseKeyPrivate = 3;
         private com.google.protobuf.ByteString localBaseKeyPrivate_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes localBaseKeyPrivate = 3;</code>
@@ -3250,7 +2774,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000004;
           localBaseKeyPrivate_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3259,11 +2783,10 @@ public final class StorageProtos {
         public Builder clearLocalBaseKeyPrivate() {
           bitField0_ = (bitField0_ & ~0x00000004);
           localBaseKeyPrivate_ = getDefaultInstance().getLocalBaseKeyPrivate();
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes localRatchetKey = 4;
         private com.google.protobuf.ByteString localRatchetKey_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes localRatchetKey = 4;</code>
@@ -3286,7 +2809,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000008;
           localRatchetKey_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3295,11 +2818,10 @@ public final class StorageProtos {
         public Builder clearLocalRatchetKey() {
           bitField0_ = (bitField0_ & ~0x00000008);
           localRatchetKey_ = getDefaultInstance().getLocalRatchetKey();
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes localRatchetKeyPrivate = 5;
         private com.google.protobuf.ByteString localRatchetKeyPrivate_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes localRatchetKeyPrivate = 5;</code>
@@ -3322,7 +2844,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000010;
           localRatchetKeyPrivate_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3331,11 +2853,10 @@ public final class StorageProtos {
         public Builder clearLocalRatchetKeyPrivate() {
           bitField0_ = (bitField0_ & ~0x00000010);
           localRatchetKeyPrivate_ = getDefaultInstance().getLocalRatchetKeyPrivate();
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes localIdentityKey = 7;
         private com.google.protobuf.ByteString localIdentityKey_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes localIdentityKey = 7;</code>
@@ -3358,7 +2879,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000020;
           localIdentityKey_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3367,11 +2888,10 @@ public final class StorageProtos {
         public Builder clearLocalIdentityKey() {
           bitField0_ = (bitField0_ & ~0x00000020);
           localIdentityKey_ = getDefaultInstance().getLocalIdentityKey();
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes localIdentityKeyPrivate = 8;
         private com.google.protobuf.ByteString localIdentityKeyPrivate_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes localIdentityKeyPrivate = 8;</code>
@@ -3394,7 +2914,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000040;
           localIdentityKeyPrivate_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3403,7 +2923,7 @@ public final class StorageProtos {
         public Builder clearLocalIdentityKeyPrivate() {
           bitField0_ = (bitField0_ & ~0x00000040);
           localIdentityKeyPrivate_ = getDefaultInstance().getLocalIdentityKeyPrivate();
-          onChanged();
+          
           return this;
         }
 
@@ -3418,10 +2938,10 @@ public final class StorageProtos {
       // @@protoc_insertion_point(class_scope:textsecure.SessionStructure.PendingKeyExchange)
     }
 
-    public interface PendingPreKeyOrBuilder
-        extends com.google.protobuf.MessageOrBuilder {
+    public interface PendingPreKeyOrBuilder extends
+        // @@protoc_insertion_point(interface_extends:textsecure.SessionStructure.PendingPreKey)
+        com.google.protobuf.MessageLiteOrBuilder {
 
-      // optional uint32 preKeyId = 1;
       /**
        * <code>optional uint32 preKeyId = 1;</code>
        */
@@ -3431,7 +2951,6 @@ public final class StorageProtos {
        */
       int getPreKeyId();
 
-      // optional int32 signedPreKeyId = 3;
       /**
        * <code>optional int32 signedPreKeyId = 3;</code>
        */
@@ -3441,7 +2960,6 @@ public final class StorageProtos {
        */
       int getSignedPreKeyId();
 
-      // optional bytes baseKey = 2;
       /**
        * <code>optional bytes baseKey = 2;</code>
        */
@@ -3455,14 +2973,15 @@ public final class StorageProtos {
      * Protobuf type {@code textsecure.SessionStructure.PendingPreKey}
      */
     public static final class PendingPreKey extends
-        com.google.protobuf.GeneratedMessage
-        implements PendingPreKeyOrBuilder {
+        com.google.protobuf.GeneratedMessageLite implements
+        // @@protoc_insertion_point(message_implements:textsecure.SessionStructure.PendingPreKey)
+        PendingPreKeyOrBuilder {
       // Use PendingPreKey.newBuilder() to construct.
-      private PendingPreKey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+      private PendingPreKey(com.google.protobuf.GeneratedMessageLite.Builder builder) {
         super(builder);
         this.unknownFields = builder.getUnknownFields();
       }
-      private PendingPreKey(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+      private PendingPreKey(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
       private static final PendingPreKey defaultInstance;
       public static PendingPreKey getDefaultInstance() {
@@ -3473,20 +2992,18 @@ public final class StorageProtos {
         return defaultInstance;
       }
 
-      private final com.google.protobuf.UnknownFieldSet unknownFields;
-      @java.lang.Override
-      public final com.google.protobuf.UnknownFieldSet
-          getUnknownFields() {
-        return this.unknownFields;
-      }
+      private final com.google.protobuf.ByteString unknownFields;
       private PendingPreKey(
           com.google.protobuf.CodedInputStream input,
           com.google.protobuf.ExtensionRegistryLite extensionRegistry)
           throws com.google.protobuf.InvalidProtocolBufferException {
         initFields();
         int mutable_bitField0_ = 0;
-        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-            com.google.protobuf.UnknownFieldSet.newBuilder();
+        com.google.protobuf.ByteString.Output unknownFieldsOutput =
+            com.google.protobuf.ByteString.newOutput();
+        com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+            com.google.protobuf.CodedOutputStream.newInstance(
+                unknownFieldsOutput);
         try {
           boolean done = false;
           while (!done) {
@@ -3496,7 +3013,7 @@ public final class StorageProtos {
                 done = true;
                 break;
               default: {
-                if (!parseUnknownField(input, unknownFields,
+                if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                        extensionRegistry, tag)) {
                   done = true;
                 }
@@ -3525,22 +3042,16 @@ public final class StorageProtos {
           throw new com.google.protobuf.InvalidProtocolBufferException(
               e.getMessage()).setUnfinishedMessage(this);
         } finally {
-          this.unknownFields = unknownFields.build();
+          try {
+            unknownFieldsCodedOutput.flush();
+          } catch (java.io.IOException e) {
+          // Should not happen
+          } finally {
+            unknownFields = unknownFieldsOutput.toByteString();
+          }
           makeExtensionsImmutable();
         }
       }
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingPreKey_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingPreKey_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.Builder.class);
-      }
-
       public static com.google.protobuf.Parser<PendingPreKey> PARSER =
           new com.google.protobuf.AbstractParser<PendingPreKey>() {
         public PendingPreKey parsePartialFrom(
@@ -3557,7 +3068,6 @@ public final class StorageProtos {
       }
 
       private int bitField0_;
-      // optional uint32 preKeyId = 1;
       public static final int PREKEYID_FIELD_NUMBER = 1;
       private int preKeyId_;
       /**
@@ -3573,7 +3083,6 @@ public final class StorageProtos {
         return preKeyId_;
       }
 
-      // optional int32 signedPreKeyId = 3;
       public static final int SIGNEDPREKEYID_FIELD_NUMBER = 3;
       private int signedPreKeyId_;
       /**
@@ -3589,7 +3098,6 @@ public final class StorageProtos {
         return signedPreKeyId_;
       }
 
-      // optional bytes baseKey = 2;
       public static final int BASEKEY_FIELD_NUMBER = 2;
       private com.google.protobuf.ByteString baseKey_;
       /**
@@ -3613,7 +3121,8 @@ public final class StorageProtos {
       private byte memoizedIsInitialized = -1;
       public final boolean isInitialized() {
         byte isInitialized = memoizedIsInitialized;
-        if (isInitialized != -1) return isInitialized == 1;
+        if (isInitialized == 1) return true;
+        if (isInitialized == 0) return false;
 
         memoizedIsInitialized = 1;
         return true;
@@ -3631,7 +3140,7 @@ public final class StorageProtos {
         if (((bitField0_ & 0x00000002) == 0x00000002)) {
           output.writeInt32(3, signedPreKeyId_);
         }
-        getUnknownFields().writeTo(output);
+        output.writeRawBytes(unknownFields);
       }
 
       private int memoizedSerializedSize = -1;
@@ -3652,7 +3161,7 @@ public final class StorageProtos {
           size += com.google.protobuf.CodedOutputStream
             .computeInt32Size(3, signedPreKeyId_);
         }
-        size += getUnknownFields().getSerializedSize();
+        size += unknownFields.size();
         memoizedSerializedSize = size;
         return size;
       }
@@ -3724,43 +3233,21 @@ public final class StorageProtos {
       }
       public Builder toBuilder() { return newBuilder(this); }
 
-      @java.lang.Override
-      protected Builder newBuilderForType(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        Builder builder = new Builder(parent);
-        return builder;
-      }
       /**
        * Protobuf type {@code textsecure.SessionStructure.PendingPreKey}
        */
       public static final class Builder extends
-          com.google.protobuf.GeneratedMessage.Builder<Builder>
-         implements org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKeyOrBuilder {
-        public static final com.google.protobuf.Descriptors.Descriptor
-            getDescriptor() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingPreKey_descriptor;
-        }
-
-        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-            internalGetFieldAccessorTable() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingPreKey_fieldAccessorTable
-              .ensureFieldAccessorsInitialized(
-                  org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.Builder.class);
-        }
-
+          com.google.protobuf.GeneratedMessageLite.Builder<
+            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey, Builder>
+          implements
+          // @@protoc_insertion_point(builder_implements:textsecure.SessionStructure.PendingPreKey)
+          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKeyOrBuilder {
         // Construct using org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.newBuilder()
         private Builder() {
           maybeForceBuilderInitialization();
         }
 
-        private Builder(
-            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-          super(parent);
-          maybeForceBuilderInitialization();
-        }
         private void maybeForceBuilderInitialization() {
-          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          }
         }
         private static Builder create() {
           return new Builder();
@@ -3781,11 +3268,6 @@ public final class StorageProtos {
           return create().mergeFrom(buildPartial());
         }
 
-        public com.google.protobuf.Descriptors.Descriptor
-            getDescriptorForType() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_PendingPreKey_descriptor;
-        }
-
         public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey getDefaultInstanceForType() {
           return org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.getDefaultInstance();
         }
@@ -3815,19 +3297,9 @@ public final class StorageProtos {
           }
           result.baseKey_ = baseKey_;
           result.bitField0_ = to_bitField0_;
-          onBuilt();
           return result;
         }
 
-        public Builder mergeFrom(com.google.protobuf.Message other) {
-          if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey) {
-            return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey)other);
-          } else {
-            super.mergeFrom(other);
-            return this;
-          }
-        }
-
         public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey other) {
           if (other == org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.getDefaultInstance()) return this;
           if (other.hasPreKeyId()) {
@@ -3839,7 +3311,8 @@ public final class StorageProtos {
           if (other.hasBaseKey()) {
             setBaseKey(other.getBaseKey());
           }
-          this.mergeUnknownFields(other.getUnknownFields());
+          setUnknownFields(
+              getUnknownFields().concat(other.unknownFields));
           return this;
         }
 
@@ -3866,7 +3339,6 @@ public final class StorageProtos {
         }
         private int bitField0_;
 
-        // optional uint32 preKeyId = 1;
         private int preKeyId_ ;
         /**
          * <code>optional uint32 preKeyId = 1;</code>
@@ -3886,7 +3358,7 @@ public final class StorageProtos {
         public Builder setPreKeyId(int value) {
           bitField0_ |= 0x00000001;
           preKeyId_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3895,11 +3367,10 @@ public final class StorageProtos {
         public Builder clearPreKeyId() {
           bitField0_ = (bitField0_ & ~0x00000001);
           preKeyId_ = 0;
-          onChanged();
+          
           return this;
         }
 
-        // optional int32 signedPreKeyId = 3;
         private int signedPreKeyId_ ;
         /**
          * <code>optional int32 signedPreKeyId = 3;</code>
@@ -3919,7 +3390,7 @@ public final class StorageProtos {
         public Builder setSignedPreKeyId(int value) {
           bitField0_ |= 0x00000002;
           signedPreKeyId_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3928,11 +3399,10 @@ public final class StorageProtos {
         public Builder clearSignedPreKeyId() {
           bitField0_ = (bitField0_ & ~0x00000002);
           signedPreKeyId_ = 0;
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes baseKey = 2;
         private com.google.protobuf.ByteString baseKey_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes baseKey = 2;</code>
@@ -3955,7 +3425,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000004;
           baseKey_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -3964,7 +3434,7 @@ public final class StorageProtos {
         public Builder clearBaseKey() {
           bitField0_ = (bitField0_ & ~0x00000004);
           baseKey_ = getDefaultInstance().getBaseKey();
-          onChanged();
+          
           return this;
         }
 
@@ -3980,7 +3450,6 @@ public final class StorageProtos {
     }
 
     private int bitField0_;
-    // optional uint32 sessionVersion = 1;
     public static final int SESSIONVERSION_FIELD_NUMBER = 1;
     private int sessionVersion_;
     /**
@@ -3996,7 +3465,6 @@ public final class StorageProtos {
       return sessionVersion_;
     }
 
-    // optional bytes localIdentityPublic = 2;
     public static final int LOCALIDENTITYPUBLIC_FIELD_NUMBER = 2;
     private com.google.protobuf.ByteString localIdentityPublic_;
     /**
@@ -4012,7 +3480,6 @@ public final class StorageProtos {
       return localIdentityPublic_;
     }
 
-    // optional bytes remoteIdentityPublic = 3;
     public static final int REMOTEIDENTITYPUBLIC_FIELD_NUMBER = 3;
     private com.google.protobuf.ByteString remoteIdentityPublic_;
     /**
@@ -4028,7 +3495,6 @@ public final class StorageProtos {
       return remoteIdentityPublic_;
     }
 
-    // optional bytes rootKey = 4;
     public static final int ROOTKEY_FIELD_NUMBER = 4;
     private com.google.protobuf.ByteString rootKey_;
     /**
@@ -4044,7 +3510,6 @@ public final class StorageProtos {
       return rootKey_;
     }
 
-    // optional uint32 previousCounter = 5;
     public static final int PREVIOUSCOUNTER_FIELD_NUMBER = 5;
     private int previousCounter_;
     /**
@@ -4060,7 +3525,6 @@ public final class StorageProtos {
       return previousCounter_;
     }
 
-    // optional .textsecure.SessionStructure.Chain senderChain = 6;
     public static final int SENDERCHAIN_FIELD_NUMBER = 6;
     private org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain senderChain_;
     /**
@@ -4075,14 +3539,7 @@ public final class StorageProtos {
     public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain getSenderChain() {
       return senderChain_;
     }
-    /**
-     * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
-     */
-    public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder getSenderChainOrBuilder() {
-      return senderChain_;
-    }
 
-    // repeated .textsecure.SessionStructure.Chain receiverChains = 7;
     public static final int RECEIVERCHAINS_FIELD_NUMBER = 7;
     private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain> receiverChains_;
     /**
@@ -4118,7 +3575,6 @@ public final class StorageProtos {
       return receiverChains_.get(index);
     }
 
-    // optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;
     public static final int PENDINGKEYEXCHANGE_FIELD_NUMBER = 8;
     private org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange pendingKeyExchange_;
     /**
@@ -4133,14 +3589,7 @@ public final class StorageProtos {
     public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange getPendingKeyExchange() {
       return pendingKeyExchange_;
     }
-    /**
-     * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
-     */
-    public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchangeOrBuilder getPendingKeyExchangeOrBuilder() {
-      return pendingKeyExchange_;
-    }
 
-    // optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;
     public static final int PENDINGPREKEY_FIELD_NUMBER = 9;
     private org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey pendingPreKey_;
     /**
@@ -4155,14 +3604,7 @@ public final class StorageProtos {
     public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey getPendingPreKey() {
       return pendingPreKey_;
     }
-    /**
-     * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
-     */
-    public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKeyOrBuilder getPendingPreKeyOrBuilder() {
-      return pendingPreKey_;
-    }
 
-    // optional uint32 remoteRegistrationId = 10;
     public static final int REMOTEREGISTRATIONID_FIELD_NUMBER = 10;
     private int remoteRegistrationId_;
     /**
@@ -4178,7 +3620,6 @@ public final class StorageProtos {
       return remoteRegistrationId_;
     }
 
-    // optional uint32 localRegistrationId = 11;
     public static final int LOCALREGISTRATIONID_FIELD_NUMBER = 11;
     private int localRegistrationId_;
     /**
@@ -4194,7 +3635,6 @@ public final class StorageProtos {
       return localRegistrationId_;
     }
 
-    // optional bool needsRefresh = 12;
     public static final int NEEDSREFRESH_FIELD_NUMBER = 12;
     private boolean needsRefresh_;
     /**
@@ -4210,7 +3650,6 @@ public final class StorageProtos {
       return needsRefresh_;
     }
 
-    // optional bytes aliceBaseKey = 13;
     public static final int ALICEBASEKEY_FIELD_NUMBER = 13;
     private com.google.protobuf.ByteString aliceBaseKey_;
     /**
@@ -4244,7 +3683,8 @@ public final class StorageProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -4292,7 +3732,7 @@ public final class StorageProtos {
       if (((bitField0_ & 0x00000800) == 0x00000800)) {
         output.writeBytes(13, aliceBaseKey_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -4353,7 +3793,7 @@ public final class StorageProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeBytesSize(13, aliceBaseKey_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -4425,47 +3865,21 @@ public final class StorageProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.SessionStructure}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SessionStructure.class, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.state.StorageProtos.SessionStructure, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.SessionStructure)
+        org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder {
       // Construct using org.whispersystems.libsignal.state.StorageProtos.SessionStructure.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          getSenderChainFieldBuilder();
-          getReceiverChainsFieldBuilder();
-          getPendingKeyExchangeFieldBuilder();
-          getPendingPreKeyFieldBuilder();
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -4483,29 +3897,13 @@ public final class StorageProtos {
         bitField0_ = (bitField0_ & ~0x00000008);
         previousCounter_ = 0;
         bitField0_ = (bitField0_ & ~0x00000010);
-        if (senderChainBuilder_ == null) {
-          senderChain_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance();
-        } else {
-          senderChainBuilder_.clear();
-        }
+        senderChain_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance();
         bitField0_ = (bitField0_ & ~0x00000020);
-        if (receiverChainsBuilder_ == null) {
-          receiverChains_ = java.util.Collections.emptyList();
-          bitField0_ = (bitField0_ & ~0x00000040);
-        } else {
-          receiverChainsBuilder_.clear();
-        }
-        if (pendingKeyExchangeBuilder_ == null) {
-          pendingKeyExchange_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.getDefaultInstance();
-        } else {
-          pendingKeyExchangeBuilder_.clear();
-        }
+        receiverChains_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000040);
+        pendingKeyExchange_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.getDefaultInstance();
         bitField0_ = (bitField0_ & ~0x00000080);
-        if (pendingPreKeyBuilder_ == null) {
-          pendingPreKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.getDefaultInstance();
-        } else {
-          pendingPreKeyBuilder_.clear();
-        }
+        pendingPreKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.getDefaultInstance();
         bitField0_ = (bitField0_ & ~0x00000100);
         remoteRegistrationId_ = 0;
         bitField0_ = (bitField0_ & ~0x00000200);
@@ -4522,11 +3920,6 @@ public final class StorageProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SessionStructure_descriptor;
-      }
-
       public org.whispersystems.libsignal.state.StorageProtos.SessionStructure getDefaultInstanceForType() {
         return org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance();
       }
@@ -4566,36 +3959,20 @@ public final class StorageProtos {
         if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
           to_bitField0_ |= 0x00000020;
         }
-        if (senderChainBuilder_ == null) {
-          result.senderChain_ = senderChain_;
-        } else {
-          result.senderChain_ = senderChainBuilder_.build();
-        }
-        if (receiverChainsBuilder_ == null) {
-          if (((bitField0_ & 0x00000040) == 0x00000040)) {
-            receiverChains_ = java.util.Collections.unmodifiableList(receiverChains_);
-            bitField0_ = (bitField0_ & ~0x00000040);
-          }
-          result.receiverChains_ = receiverChains_;
-        } else {
-          result.receiverChains_ = receiverChainsBuilder_.build();
+        result.senderChain_ = senderChain_;
+        if (((bitField0_ & 0x00000040) == 0x00000040)) {
+          receiverChains_ = java.util.Collections.unmodifiableList(receiverChains_);
+          bitField0_ = (bitField0_ & ~0x00000040);
         }
+        result.receiverChains_ = receiverChains_;
         if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
           to_bitField0_ |= 0x00000040;
         }
-        if (pendingKeyExchangeBuilder_ == null) {
-          result.pendingKeyExchange_ = pendingKeyExchange_;
-        } else {
-          result.pendingKeyExchange_ = pendingKeyExchangeBuilder_.build();
-        }
+        result.pendingKeyExchange_ = pendingKeyExchange_;
         if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
           to_bitField0_ |= 0x00000080;
         }
-        if (pendingPreKeyBuilder_ == null) {
-          result.pendingPreKey_ = pendingPreKey_;
-        } else {
-          result.pendingPreKey_ = pendingPreKeyBuilder_.build();
-        }
+        result.pendingPreKey_ = pendingPreKey_;
         if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
           to_bitField0_ |= 0x00000100;
         }
@@ -4613,19 +3990,9 @@ public final class StorageProtos {
         }
         result.aliceBaseKey_ = aliceBaseKey_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SessionStructure) {
-          return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SessionStructure)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SessionStructure other) {
         if (other == org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance()) return this;
         if (other.hasSessionVersion()) {
@@ -4646,31 +4013,15 @@ public final class StorageProtos {
         if (other.hasSenderChain()) {
           mergeSenderChain(other.getSenderChain());
         }
-        if (receiverChainsBuilder_ == null) {
-          if (!other.receiverChains_.isEmpty()) {
-            if (receiverChains_.isEmpty()) {
-              receiverChains_ = other.receiverChains_;
-              bitField0_ = (bitField0_ & ~0x00000040);
-            } else {
-              ensureReceiverChainsIsMutable();
-              receiverChains_.addAll(other.receiverChains_);
-            }
-            onChanged();
-          }
-        } else {
-          if (!other.receiverChains_.isEmpty()) {
-            if (receiverChainsBuilder_.isEmpty()) {
-              receiverChainsBuilder_.dispose();
-              receiverChainsBuilder_ = null;
-              receiverChains_ = other.receiverChains_;
-              bitField0_ = (bitField0_ & ~0x00000040);
-              receiverChainsBuilder_ = 
-                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
-                   getReceiverChainsFieldBuilder() : null;
-            } else {
-              receiverChainsBuilder_.addAllMessages(other.receiverChains_);
-            }
+        if (!other.receiverChains_.isEmpty()) {
+          if (receiverChains_.isEmpty()) {
+            receiverChains_ = other.receiverChains_;
+            bitField0_ = (bitField0_ & ~0x00000040);
+          } else {
+            ensureReceiverChainsIsMutable();
+            receiverChains_.addAll(other.receiverChains_);
           }
+          
         }
         if (other.hasPendingKeyExchange()) {
           mergePendingKeyExchange(other.getPendingKeyExchange());
@@ -4690,7 +4041,8 @@ public final class StorageProtos {
         if (other.hasAliceBaseKey()) {
           setAliceBaseKey(other.getAliceBaseKey());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -4717,7 +4069,6 @@ public final class StorageProtos {
       }
       private int bitField0_;
 
-      // optional uint32 sessionVersion = 1;
       private int sessionVersion_ ;
       /**
        * <code>optional uint32 sessionVersion = 1;</code>
@@ -4737,7 +4088,7 @@ public final class StorageProtos {
       public Builder setSessionVersion(int value) {
         bitField0_ |= 0x00000001;
         sessionVersion_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -4746,11 +4097,10 @@ public final class StorageProtos {
       public Builder clearSessionVersion() {
         bitField0_ = (bitField0_ & ~0x00000001);
         sessionVersion_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes localIdentityPublic = 2;
       private com.google.protobuf.ByteString localIdentityPublic_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes localIdentityPublic = 2;</code>
@@ -4773,7 +4123,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
         localIdentityPublic_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -4782,11 +4132,10 @@ public final class StorageProtos {
       public Builder clearLocalIdentityPublic() {
         bitField0_ = (bitField0_ & ~0x00000002);
         localIdentityPublic_ = getDefaultInstance().getLocalIdentityPublic();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes remoteIdentityPublic = 3;
       private com.google.protobuf.ByteString remoteIdentityPublic_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes remoteIdentityPublic = 3;</code>
@@ -4809,7 +4158,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000004;
         remoteIdentityPublic_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -4818,11 +4167,10 @@ public final class StorageProtos {
       public Builder clearRemoteIdentityPublic() {
         bitField0_ = (bitField0_ & ~0x00000004);
         remoteIdentityPublic_ = getDefaultInstance().getRemoteIdentityPublic();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes rootKey = 4;
       private com.google.protobuf.ByteString rootKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes rootKey = 4;</code>
@@ -4845,7 +4193,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000008;
         rootKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -4854,11 +4202,10 @@ public final class StorageProtos {
       public Builder clearRootKey() {
         bitField0_ = (bitField0_ & ~0x00000008);
         rootKey_ = getDefaultInstance().getRootKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional uint32 previousCounter = 5;
       private int previousCounter_ ;
       /**
        * <code>optional uint32 previousCounter = 5;</code>
@@ -4878,7 +4225,7 @@ public final class StorageProtos {
       public Builder setPreviousCounter(int value) {
         bitField0_ |= 0x00000010;
         previousCounter_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -4887,14 +4234,11 @@ public final class StorageProtos {
       public Builder clearPreviousCounter() {
         bitField0_ = (bitField0_ & ~0x00000010);
         previousCounter_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional .textsecure.SessionStructure.Chain senderChain = 6;
       private org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain senderChain_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance();
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder> senderChainBuilder_;
       /**
        * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
        */
@@ -4905,25 +4249,17 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain getSenderChain() {
-        if (senderChainBuilder_ == null) {
-          return senderChain_;
-        } else {
-          return senderChainBuilder_.getMessage();
-        }
+        return senderChain_;
       }
       /**
        * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
        */
       public Builder setSenderChain(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain value) {
-        if (senderChainBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          senderChain_ = value;
-          onChanged();
-        } else {
-          senderChainBuilder_.setMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        senderChain_ = value;
+
         bitField0_ |= 0x00000020;
         return this;
       }
@@ -4932,12 +4268,8 @@ public final class StorageProtos {
        */
       public Builder setSenderChain(
           org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder builderForValue) {
-        if (senderChainBuilder_ == null) {
-          senderChain_ = builderForValue.build();
-          onChanged();
-        } else {
-          senderChainBuilder_.setMessage(builderForValue.build());
-        }
+        senderChain_ = builderForValue.build();
+
         bitField0_ |= 0x00000020;
         return this;
       }
@@ -4945,18 +4277,14 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
        */
       public Builder mergeSenderChain(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain value) {
-        if (senderChainBuilder_ == null) {
-          if (((bitField0_ & 0x00000020) == 0x00000020) &&
-              senderChain_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance()) {
-            senderChain_ =
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.newBuilder(senderChain_).mergeFrom(value).buildPartial();
-          } else {
-            senderChain_ = value;
-          }
-          onChanged();
+        if (((bitField0_ & 0x00000020) == 0x00000020) &&
+            senderChain_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance()) {
+          senderChain_ =
+            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.newBuilder(senderChain_).mergeFrom(value).buildPartial();
         } else {
-          senderChainBuilder_.mergeFrom(value);
+          senderChain_ = value;
         }
+
         bitField0_ |= 0x00000020;
         return this;
       }
@@ -4964,51 +4292,12 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
        */
       public Builder clearSenderChain() {
-        if (senderChainBuilder_ == null) {
-          senderChain_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance();
-          onChanged();
-        } else {
-          senderChainBuilder_.clear();
-        }
+        senderChain_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance();
+
         bitField0_ = (bitField0_ & ~0x00000020);
         return this;
       }
-      /**
-       * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder getSenderChainBuilder() {
-        bitField0_ |= 0x00000020;
-        onChanged();
-        return getSenderChainFieldBuilder().getBuilder();
-      }
-      /**
-       * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder getSenderChainOrBuilder() {
-        if (senderChainBuilder_ != null) {
-          return senderChainBuilder_.getMessageOrBuilder();
-        } else {
-          return senderChain_;
-        }
-      }
-      /**
-       * <code>optional .textsecure.SessionStructure.Chain senderChain = 6;</code>
-       */
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder> 
-          getSenderChainFieldBuilder() {
-        if (senderChainBuilder_ == null) {
-          senderChainBuilder_ = new com.google.protobuf.SingleFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder>(
-                  senderChain_,
-                  getParentForChildren(),
-                  isClean());
-          senderChain_ = null;
-        }
-        return senderChainBuilder_;
-      }
 
-      // repeated .textsecure.SessionStructure.Chain receiverChains = 7;
       private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain> receiverChains_ =
         java.util.Collections.emptyList();
       private void ensureReceiverChainsIsMutable() {
@@ -5018,54 +4307,35 @@ public final class StorageProtos {
          }
       }
 
-      private com.google.protobuf.RepeatedFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder> receiverChainsBuilder_;
-
       /**
        * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
        */
       public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain> getReceiverChainsList() {
-        if (receiverChainsBuilder_ == null) {
-          return java.util.Collections.unmodifiableList(receiverChains_);
-        } else {
-          return receiverChainsBuilder_.getMessageList();
-        }
+        return java.util.Collections.unmodifiableList(receiverChains_);
       }
       /**
        * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
        */
       public int getReceiverChainsCount() {
-        if (receiverChainsBuilder_ == null) {
-          return receiverChains_.size();
-        } else {
-          return receiverChainsBuilder_.getCount();
-        }
+        return receiverChains_.size();
       }
       /**
        * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain getReceiverChains(int index) {
-        if (receiverChainsBuilder_ == null) {
-          return receiverChains_.get(index);
-        } else {
-          return receiverChainsBuilder_.getMessage(index);
-        }
+        return receiverChains_.get(index);
       }
       /**
        * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
        */
       public Builder setReceiverChains(
           int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain value) {
-        if (receiverChainsBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensureReceiverChainsIsMutable();
-          receiverChains_.set(index, value);
-          onChanged();
-        } else {
-          receiverChainsBuilder_.setMessage(index, value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensureReceiverChainsIsMutable();
+        receiverChains_.set(index, value);
+
         return this;
       }
       /**
@@ -5073,29 +4343,21 @@ public final class StorageProtos {
        */
       public Builder setReceiverChains(
           int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder builderForValue) {
-        if (receiverChainsBuilder_ == null) {
-          ensureReceiverChainsIsMutable();
-          receiverChains_.set(index, builderForValue.build());
-          onChanged();
-        } else {
-          receiverChainsBuilder_.setMessage(index, builderForValue.build());
-        }
+        ensureReceiverChainsIsMutable();
+        receiverChains_.set(index, builderForValue.build());
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
        */
       public Builder addReceiverChains(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain value) {
-        if (receiverChainsBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensureReceiverChainsIsMutable();
-          receiverChains_.add(value);
-          onChanged();
-        } else {
-          receiverChainsBuilder_.addMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensureReceiverChainsIsMutable();
+        receiverChains_.add(value);
+
         return this;
       }
       /**
@@ -5103,16 +4365,12 @@ public final class StorageProtos {
        */
       public Builder addReceiverChains(
           int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain value) {
-        if (receiverChainsBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensureReceiverChainsIsMutable();
-          receiverChains_.add(index, value);
-          onChanged();
-        } else {
-          receiverChainsBuilder_.addMessage(index, value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensureReceiverChainsIsMutable();
+        receiverChains_.add(index, value);
+
         return this;
       }
       /**
@@ -5120,13 +4378,9 @@ public final class StorageProtos {
        */
       public Builder addReceiverChains(
           org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder builderForValue) {
-        if (receiverChainsBuilder_ == null) {
-          ensureReceiverChainsIsMutable();
-          receiverChains_.add(builderForValue.build());
-          onChanged();
-        } else {
-          receiverChainsBuilder_.addMessage(builderForValue.build());
-        }
+        ensureReceiverChainsIsMutable();
+        receiverChains_.add(builderForValue.build());
+
         return this;
       }
       /**
@@ -5134,13 +4388,9 @@ public final class StorageProtos {
        */
       public Builder addReceiverChains(
           int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder builderForValue) {
-        if (receiverChainsBuilder_ == null) {
-          ensureReceiverChainsIsMutable();
-          receiverChains_.add(index, builderForValue.build());
-          onChanged();
-        } else {
-          receiverChainsBuilder_.addMessage(index, builderForValue.build());
-        }
+        ensureReceiverChainsIsMutable();
+        receiverChains_.add(index, builderForValue.build());
+
         return this;
       }
       /**
@@ -5148,110 +4398,32 @@ public final class StorageProtos {
        */
       public Builder addAllReceiverChains(
           java.lang.Iterable<? extends org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain> values) {
-        if (receiverChainsBuilder_ == null) {
-          ensureReceiverChainsIsMutable();
-          super.addAll(values, receiverChains_);
-          onChanged();
-        } else {
-          receiverChainsBuilder_.addAllMessages(values);
-        }
+        ensureReceiverChainsIsMutable();
+        com.google.protobuf.AbstractMessageLite.Builder.addAll(
+            values, receiverChains_);
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
        */
       public Builder clearReceiverChains() {
-        if (receiverChainsBuilder_ == null) {
-          receiverChains_ = java.util.Collections.emptyList();
-          bitField0_ = (bitField0_ & ~0x00000040);
-          onChanged();
-        } else {
-          receiverChainsBuilder_.clear();
-        }
+        receiverChains_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000040);
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
        */
       public Builder removeReceiverChains(int index) {
-        if (receiverChainsBuilder_ == null) {
-          ensureReceiverChainsIsMutable();
-          receiverChains_.remove(index);
-          onChanged();
-        } else {
-          receiverChainsBuilder_.remove(index);
-        }
+        ensureReceiverChainsIsMutable();
+        receiverChains_.remove(index);
+
         return this;
       }
-      /**
-       * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder getReceiverChainsBuilder(
-          int index) {
-        return getReceiverChainsFieldBuilder().getBuilder(index);
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder getReceiverChainsOrBuilder(
-          int index) {
-        if (receiverChainsBuilder_ == null) {
-          return receiverChains_.get(index);  } else {
-          return receiverChainsBuilder_.getMessageOrBuilder(index);
-        }
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
-       */
-      public java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder> 
-           getReceiverChainsOrBuilderList() {
-        if (receiverChainsBuilder_ != null) {
-          return receiverChainsBuilder_.getMessageOrBuilderList();
-        } else {
-          return java.util.Collections.unmodifiableList(receiverChains_);
-        }
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder addReceiverChainsBuilder() {
-        return getReceiverChainsFieldBuilder().addBuilder(
-            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance());
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder addReceiverChainsBuilder(
-          int index) {
-        return getReceiverChainsFieldBuilder().addBuilder(
-            index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.getDefaultInstance());
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure.Chain receiverChains = 7;</code>
-       */
-      public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder> 
-           getReceiverChainsBuilderList() {
-        return getReceiverChainsFieldBuilder().getBuilderList();
-      }
-      private com.google.protobuf.RepeatedFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder> 
-          getReceiverChainsFieldBuilder() {
-        if (receiverChainsBuilder_ == null) {
-          receiverChainsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Chain.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.ChainOrBuilder>(
-                  receiverChains_,
-                  ((bitField0_ & 0x00000040) == 0x00000040),
-                  getParentForChildren(),
-                  isClean());
-          receiverChains_ = null;
-        }
-        return receiverChainsBuilder_;
-      }
 
-      // optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;
       private org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange pendingKeyExchange_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.getDefaultInstance();
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchangeOrBuilder> pendingKeyExchangeBuilder_;
       /**
        * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
        */
@@ -5262,25 +4434,17 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange getPendingKeyExchange() {
-        if (pendingKeyExchangeBuilder_ == null) {
-          return pendingKeyExchange_;
-        } else {
-          return pendingKeyExchangeBuilder_.getMessage();
-        }
+        return pendingKeyExchange_;
       }
       /**
        * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
        */
       public Builder setPendingKeyExchange(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange value) {
-        if (pendingKeyExchangeBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          pendingKeyExchange_ = value;
-          onChanged();
-        } else {
-          pendingKeyExchangeBuilder_.setMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        pendingKeyExchange_ = value;
+
         bitField0_ |= 0x00000080;
         return this;
       }
@@ -5289,12 +4453,8 @@ public final class StorageProtos {
        */
       public Builder setPendingKeyExchange(
           org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.Builder builderForValue) {
-        if (pendingKeyExchangeBuilder_ == null) {
-          pendingKeyExchange_ = builderForValue.build();
-          onChanged();
-        } else {
-          pendingKeyExchangeBuilder_.setMessage(builderForValue.build());
-        }
+        pendingKeyExchange_ = builderForValue.build();
+
         bitField0_ |= 0x00000080;
         return this;
       }
@@ -5302,18 +4462,14 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
        */
       public Builder mergePendingKeyExchange(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange value) {
-        if (pendingKeyExchangeBuilder_ == null) {
-          if (((bitField0_ & 0x00000080) == 0x00000080) &&
-              pendingKeyExchange_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.getDefaultInstance()) {
-            pendingKeyExchange_ =
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.newBuilder(pendingKeyExchange_).mergeFrom(value).buildPartial();
-          } else {
-            pendingKeyExchange_ = value;
-          }
-          onChanged();
+        if (((bitField0_ & 0x00000080) == 0x00000080) &&
+            pendingKeyExchange_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.getDefaultInstance()) {
+          pendingKeyExchange_ =
+            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.newBuilder(pendingKeyExchange_).mergeFrom(value).buildPartial();
         } else {
-          pendingKeyExchangeBuilder_.mergeFrom(value);
+          pendingKeyExchange_ = value;
         }
+
         bitField0_ |= 0x00000080;
         return this;
       }
@@ -5321,54 +4477,13 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
        */
       public Builder clearPendingKeyExchange() {
-        if (pendingKeyExchangeBuilder_ == null) {
-          pendingKeyExchange_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.getDefaultInstance();
-          onChanged();
-        } else {
-          pendingKeyExchangeBuilder_.clear();
-        }
+        pendingKeyExchange_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.getDefaultInstance();
+
         bitField0_ = (bitField0_ & ~0x00000080);
         return this;
       }
-      /**
-       * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.Builder getPendingKeyExchangeBuilder() {
-        bitField0_ |= 0x00000080;
-        onChanged();
-        return getPendingKeyExchangeFieldBuilder().getBuilder();
-      }
-      /**
-       * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchangeOrBuilder getPendingKeyExchangeOrBuilder() {
-        if (pendingKeyExchangeBuilder_ != null) {
-          return pendingKeyExchangeBuilder_.getMessageOrBuilder();
-        } else {
-          return pendingKeyExchange_;
-        }
-      }
-      /**
-       * <code>optional .textsecure.SessionStructure.PendingKeyExchange pendingKeyExchange = 8;</code>
-       */
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchangeOrBuilder> 
-          getPendingKeyExchangeFieldBuilder() {
-        if (pendingKeyExchangeBuilder_ == null) {
-          pendingKeyExchangeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchange.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingKeyExchangeOrBuilder>(
-                  pendingKeyExchange_,
-                  getParentForChildren(),
-                  isClean());
-          pendingKeyExchange_ = null;
-        }
-        return pendingKeyExchangeBuilder_;
-      }
 
-      // optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;
       private org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey pendingPreKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.getDefaultInstance();
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKeyOrBuilder> pendingPreKeyBuilder_;
       /**
        * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
        */
@@ -5379,25 +4494,17 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey getPendingPreKey() {
-        if (pendingPreKeyBuilder_ == null) {
-          return pendingPreKey_;
-        } else {
-          return pendingPreKeyBuilder_.getMessage();
-        }
+        return pendingPreKey_;
       }
       /**
        * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
        */
       public Builder setPendingPreKey(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey value) {
-        if (pendingPreKeyBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          pendingPreKey_ = value;
-          onChanged();
-        } else {
-          pendingPreKeyBuilder_.setMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        pendingPreKey_ = value;
+
         bitField0_ |= 0x00000100;
         return this;
       }
@@ -5406,12 +4513,8 @@ public final class StorageProtos {
        */
       public Builder setPendingPreKey(
           org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.Builder builderForValue) {
-        if (pendingPreKeyBuilder_ == null) {
-          pendingPreKey_ = builderForValue.build();
-          onChanged();
-        } else {
-          pendingPreKeyBuilder_.setMessage(builderForValue.build());
-        }
+        pendingPreKey_ = builderForValue.build();
+
         bitField0_ |= 0x00000100;
         return this;
       }
@@ -5419,18 +4522,14 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
        */
       public Builder mergePendingPreKey(org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey value) {
-        if (pendingPreKeyBuilder_ == null) {
-          if (((bitField0_ & 0x00000100) == 0x00000100) &&
-              pendingPreKey_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.getDefaultInstance()) {
-            pendingPreKey_ =
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.newBuilder(pendingPreKey_).mergeFrom(value).buildPartial();
-          } else {
-            pendingPreKey_ = value;
-          }
-          onChanged();
+        if (((bitField0_ & 0x00000100) == 0x00000100) &&
+            pendingPreKey_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.getDefaultInstance()) {
+          pendingPreKey_ =
+            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.newBuilder(pendingPreKey_).mergeFrom(value).buildPartial();
         } else {
-          pendingPreKeyBuilder_.mergeFrom(value);
+          pendingPreKey_ = value;
         }
+
         bitField0_ |= 0x00000100;
         return this;
       }
@@ -5438,51 +4537,12 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
        */
       public Builder clearPendingPreKey() {
-        if (pendingPreKeyBuilder_ == null) {
-          pendingPreKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.getDefaultInstance();
-          onChanged();
-        } else {
-          pendingPreKeyBuilder_.clear();
-        }
+        pendingPreKey_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.getDefaultInstance();
+
         bitField0_ = (bitField0_ & ~0x00000100);
         return this;
       }
-      /**
-       * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.Builder getPendingPreKeyBuilder() {
-        bitField0_ |= 0x00000100;
-        onChanged();
-        return getPendingPreKeyFieldBuilder().getBuilder();
-      }
-      /**
-       * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKeyOrBuilder getPendingPreKeyOrBuilder() {
-        if (pendingPreKeyBuilder_ != null) {
-          return pendingPreKeyBuilder_.getMessageOrBuilder();
-        } else {
-          return pendingPreKey_;
-        }
-      }
-      /**
-       * <code>optional .textsecure.SessionStructure.PendingPreKey pendingPreKey = 9;</code>
-       */
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKeyOrBuilder> 
-          getPendingPreKeyFieldBuilder() {
-        if (pendingPreKeyBuilder_ == null) {
-          pendingPreKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.PendingPreKeyOrBuilder>(
-                  pendingPreKey_,
-                  getParentForChildren(),
-                  isClean());
-          pendingPreKey_ = null;
-        }
-        return pendingPreKeyBuilder_;
-      }
 
-      // optional uint32 remoteRegistrationId = 10;
       private int remoteRegistrationId_ ;
       /**
        * <code>optional uint32 remoteRegistrationId = 10;</code>
@@ -5502,7 +4562,7 @@ public final class StorageProtos {
       public Builder setRemoteRegistrationId(int value) {
         bitField0_ |= 0x00000200;
         remoteRegistrationId_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -5511,11 +4571,10 @@ public final class StorageProtos {
       public Builder clearRemoteRegistrationId() {
         bitField0_ = (bitField0_ & ~0x00000200);
         remoteRegistrationId_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional uint32 localRegistrationId = 11;
       private int localRegistrationId_ ;
       /**
        * <code>optional uint32 localRegistrationId = 11;</code>
@@ -5535,7 +4594,7 @@ public final class StorageProtos {
       public Builder setLocalRegistrationId(int value) {
         bitField0_ |= 0x00000400;
         localRegistrationId_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -5544,11 +4603,10 @@ public final class StorageProtos {
       public Builder clearLocalRegistrationId() {
         bitField0_ = (bitField0_ & ~0x00000400);
         localRegistrationId_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bool needsRefresh = 12;
       private boolean needsRefresh_ ;
       /**
        * <code>optional bool needsRefresh = 12;</code>
@@ -5568,7 +4626,7 @@ public final class StorageProtos {
       public Builder setNeedsRefresh(boolean value) {
         bitField0_ |= 0x00000800;
         needsRefresh_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -5577,11 +4635,10 @@ public final class StorageProtos {
       public Builder clearNeedsRefresh() {
         bitField0_ = (bitField0_ & ~0x00000800);
         needsRefresh_ = false;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes aliceBaseKey = 13;
       private com.google.protobuf.ByteString aliceBaseKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes aliceBaseKey = 13;</code>
@@ -5604,7 +4661,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00001000;
         aliceBaseKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -5613,7 +4670,7 @@ public final class StorageProtos {
       public Builder clearAliceBaseKey() {
         bitField0_ = (bitField0_ & ~0x00001000);
         aliceBaseKey_ = getDefaultInstance().getAliceBaseKey();
-        onChanged();
+        
         return this;
       }
 
@@ -5628,10 +4685,10 @@ public final class StorageProtos {
     // @@protoc_insertion_point(class_scope:textsecure.SessionStructure)
   }
 
-  public interface RecordStructureOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface RecordStructureOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.RecordStructure)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional .textsecure.SessionStructure currentSession = 1;
     /**
      * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
      */
@@ -5640,12 +4697,7 @@ public final class StorageProtos {
      * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
      */
     org.whispersystems.libsignal.state.StorageProtos.SessionStructure getCurrentSession();
-    /**
-     * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder getCurrentSessionOrBuilder();
 
-    // repeated .textsecure.SessionStructure previousSessions = 2;
     /**
      * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
      */
@@ -5659,29 +4711,20 @@ public final class StorageProtos {
      * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
      */
     int getPreviousSessionsCount();
-    /**
-     * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
-     */
-    java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder> 
-        getPreviousSessionsOrBuilderList();
-    /**
-     * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder getPreviousSessionsOrBuilder(
-        int index);
   }
   /**
    * Protobuf type {@code textsecure.RecordStructure}
    */
   public static final class RecordStructure extends
-      com.google.protobuf.GeneratedMessage
-      implements RecordStructureOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.RecordStructure)
+      RecordStructureOrBuilder {
     // Use RecordStructure.newBuilder() to construct.
-    private RecordStructure(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private RecordStructure(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private RecordStructure(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private RecordStructure(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final RecordStructure defaultInstance;
     public static RecordStructure getDefaultInstance() {
@@ -5692,20 +4735,18 @@ public final class StorageProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private RecordStructure(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -5715,7 +4756,7 @@ public final class StorageProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -5753,22 +4794,16 @@ public final class StorageProtos {
         if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
           previousSessions_ = java.util.Collections.unmodifiableList(previousSessions_);
         }
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_RecordStructure_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_RecordStructure_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.state.StorageProtos.RecordStructure.class, org.whispersystems.libsignal.state.StorageProtos.RecordStructure.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<RecordStructure> PARSER =
         new com.google.protobuf.AbstractParser<RecordStructure>() {
       public RecordStructure parsePartialFrom(
@@ -5785,7 +4820,6 @@ public final class StorageProtos {
     }
 
     private int bitField0_;
-    // optional .textsecure.SessionStructure currentSession = 1;
     public static final int CURRENTSESSION_FIELD_NUMBER = 1;
     private org.whispersystems.libsignal.state.StorageProtos.SessionStructure currentSession_;
     /**
@@ -5800,14 +4834,7 @@ public final class StorageProtos {
     public org.whispersystems.libsignal.state.StorageProtos.SessionStructure getCurrentSession() {
       return currentSession_;
     }
-    /**
-     * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
-     */
-    public org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder getCurrentSessionOrBuilder() {
-      return currentSession_;
-    }
 
-    // repeated .textsecure.SessionStructure previousSessions = 2;
     public static final int PREVIOUSSESSIONS_FIELD_NUMBER = 2;
     private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure> previousSessions_;
     /**
@@ -5850,7 +4877,8 @@ public final class StorageProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -5865,7 +4893,7 @@ public final class StorageProtos {
       for (int i = 0; i < previousSessions_.size(); i++) {
         output.writeMessage(2, previousSessions_.get(i));
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -5882,7 +4910,7 @@ public final class StorageProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeMessageSize(2, previousSessions_.get(i));
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -5954,45 +4982,21 @@ public final class StorageProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.RecordStructure}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.state.StorageProtos.RecordStructureOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_RecordStructure_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_RecordStructure_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.RecordStructure.class, org.whispersystems.libsignal.state.StorageProtos.RecordStructure.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.state.StorageProtos.RecordStructure, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.RecordStructure)
+        org.whispersystems.libsignal.state.StorageProtos.RecordStructureOrBuilder {
       // Construct using org.whispersystems.libsignal.state.StorageProtos.RecordStructure.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          getCurrentSessionFieldBuilder();
-          getPreviousSessionsFieldBuilder();
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -6000,18 +5004,10 @@ public final class StorageProtos {
 
       public Builder clear() {
         super.clear();
-        if (currentSessionBuilder_ == null) {
-          currentSession_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance();
-        } else {
-          currentSessionBuilder_.clear();
-        }
+        currentSession_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance();
         bitField0_ = (bitField0_ & ~0x00000001);
-        if (previousSessionsBuilder_ == null) {
-          previousSessions_ = java.util.Collections.emptyList();
-          bitField0_ = (bitField0_ & ~0x00000002);
-        } else {
-          previousSessionsBuilder_.clear();
-        }
+        previousSessions_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000002);
         return this;
       }
 
@@ -6019,11 +5015,6 @@ public final class StorageProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_RecordStructure_descriptor;
-      }
-
       public org.whispersystems.libsignal.state.StorageProtos.RecordStructure getDefaultInstanceForType() {
         return org.whispersystems.libsignal.state.StorageProtos.RecordStructure.getDefaultInstance();
       }
@@ -6043,66 +5034,33 @@ public final class StorageProtos {
         if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
           to_bitField0_ |= 0x00000001;
         }
-        if (currentSessionBuilder_ == null) {
-          result.currentSession_ = currentSession_;
-        } else {
-          result.currentSession_ = currentSessionBuilder_.build();
-        }
-        if (previousSessionsBuilder_ == null) {
-          if (((bitField0_ & 0x00000002) == 0x00000002)) {
-            previousSessions_ = java.util.Collections.unmodifiableList(previousSessions_);
-            bitField0_ = (bitField0_ & ~0x00000002);
-          }
-          result.previousSessions_ = previousSessions_;
-        } else {
-          result.previousSessions_ = previousSessionsBuilder_.build();
+        result.currentSession_ = currentSession_;
+        if (((bitField0_ & 0x00000002) == 0x00000002)) {
+          previousSessions_ = java.util.Collections.unmodifiableList(previousSessions_);
+          bitField0_ = (bitField0_ & ~0x00000002);
         }
+        result.previousSessions_ = previousSessions_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.state.StorageProtos.RecordStructure) {
-          return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.RecordStructure)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.RecordStructure other) {
         if (other == org.whispersystems.libsignal.state.StorageProtos.RecordStructure.getDefaultInstance()) return this;
         if (other.hasCurrentSession()) {
           mergeCurrentSession(other.getCurrentSession());
         }
-        if (previousSessionsBuilder_ == null) {
-          if (!other.previousSessions_.isEmpty()) {
-            if (previousSessions_.isEmpty()) {
-              previousSessions_ = other.previousSessions_;
-              bitField0_ = (bitField0_ & ~0x00000002);
-            } else {
-              ensurePreviousSessionsIsMutable();
-              previousSessions_.addAll(other.previousSessions_);
-            }
-            onChanged();
-          }
-        } else {
-          if (!other.previousSessions_.isEmpty()) {
-            if (previousSessionsBuilder_.isEmpty()) {
-              previousSessionsBuilder_.dispose();
-              previousSessionsBuilder_ = null;
-              previousSessions_ = other.previousSessions_;
-              bitField0_ = (bitField0_ & ~0x00000002);
-              previousSessionsBuilder_ = 
-                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
-                   getPreviousSessionsFieldBuilder() : null;
-            } else {
-              previousSessionsBuilder_.addAllMessages(other.previousSessions_);
-            }
+        if (!other.previousSessions_.isEmpty()) {
+          if (previousSessions_.isEmpty()) {
+            previousSessions_ = other.previousSessions_;
+            bitField0_ = (bitField0_ & ~0x00000002);
+          } else {
+            ensurePreviousSessionsIsMutable();
+            previousSessions_.addAll(other.previousSessions_);
           }
+          
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -6129,10 +5087,7 @@ public final class StorageProtos {
       }
       private int bitField0_;
 
-      // optional .textsecure.SessionStructure currentSession = 1;
       private org.whispersystems.libsignal.state.StorageProtos.SessionStructure currentSession_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance();
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder> currentSessionBuilder_;
       /**
        * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
        */
@@ -6143,25 +5098,17 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SessionStructure getCurrentSession() {
-        if (currentSessionBuilder_ == null) {
-          return currentSession_;
-        } else {
-          return currentSessionBuilder_.getMessage();
-        }
+        return currentSession_;
       }
       /**
        * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
        */
       public Builder setCurrentSession(org.whispersystems.libsignal.state.StorageProtos.SessionStructure value) {
-        if (currentSessionBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          currentSession_ = value;
-          onChanged();
-        } else {
-          currentSessionBuilder_.setMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        currentSession_ = value;
+
         bitField0_ |= 0x00000001;
         return this;
       }
@@ -6170,12 +5117,8 @@ public final class StorageProtos {
        */
       public Builder setCurrentSession(
           org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder builderForValue) {
-        if (currentSessionBuilder_ == null) {
-          currentSession_ = builderForValue.build();
-          onChanged();
-        } else {
-          currentSessionBuilder_.setMessage(builderForValue.build());
-        }
+        currentSession_ = builderForValue.build();
+
         bitField0_ |= 0x00000001;
         return this;
       }
@@ -6183,18 +5126,14 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
        */
       public Builder mergeCurrentSession(org.whispersystems.libsignal.state.StorageProtos.SessionStructure value) {
-        if (currentSessionBuilder_ == null) {
-          if (((bitField0_ & 0x00000001) == 0x00000001) &&
-              currentSession_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance()) {
-            currentSession_ =
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure.newBuilder(currentSession_).mergeFrom(value).buildPartial();
-          } else {
-            currentSession_ = value;
-          }
-          onChanged();
+        if (((bitField0_ & 0x00000001) == 0x00000001) &&
+            currentSession_ != org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance()) {
+          currentSession_ =
+            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.newBuilder(currentSession_).mergeFrom(value).buildPartial();
         } else {
-          currentSessionBuilder_.mergeFrom(value);
+          currentSession_ = value;
         }
+
         bitField0_ |= 0x00000001;
         return this;
       }
@@ -6202,51 +5141,12 @@ public final class StorageProtos {
        * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
        */
       public Builder clearCurrentSession() {
-        if (currentSessionBuilder_ == null) {
-          currentSession_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance();
-          onChanged();
-        } else {
-          currentSessionBuilder_.clear();
-        }
+        currentSession_ = org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance();
+
         bitField0_ = (bitField0_ & ~0x00000001);
         return this;
       }
-      /**
-       * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder getCurrentSessionBuilder() {
-        bitField0_ |= 0x00000001;
-        onChanged();
-        return getCurrentSessionFieldBuilder().getBuilder();
-      }
-      /**
-       * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder getCurrentSessionOrBuilder() {
-        if (currentSessionBuilder_ != null) {
-          return currentSessionBuilder_.getMessageOrBuilder();
-        } else {
-          return currentSession_;
-        }
-      }
-      /**
-       * <code>optional .textsecure.SessionStructure currentSession = 1;</code>
-       */
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder> 
-          getCurrentSessionFieldBuilder() {
-        if (currentSessionBuilder_ == null) {
-          currentSessionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder>(
-                  currentSession_,
-                  getParentForChildren(),
-                  isClean());
-          currentSession_ = null;
-        }
-        return currentSessionBuilder_;
-      }
 
-      // repeated .textsecure.SessionStructure previousSessions = 2;
       private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure> previousSessions_ =
         java.util.Collections.emptyList();
       private void ensurePreviousSessionsIsMutable() {
@@ -6256,54 +5156,35 @@ public final class StorageProtos {
          }
       }
 
-      private com.google.protobuf.RepeatedFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder> previousSessionsBuilder_;
-
       /**
        * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
        */
       public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure> getPreviousSessionsList() {
-        if (previousSessionsBuilder_ == null) {
-          return java.util.Collections.unmodifiableList(previousSessions_);
-        } else {
-          return previousSessionsBuilder_.getMessageList();
-        }
+        return java.util.Collections.unmodifiableList(previousSessions_);
       }
       /**
        * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
        */
       public int getPreviousSessionsCount() {
-        if (previousSessionsBuilder_ == null) {
-          return previousSessions_.size();
-        } else {
-          return previousSessionsBuilder_.getCount();
-        }
+        return previousSessions_.size();
       }
       /**
        * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SessionStructure getPreviousSessions(int index) {
-        if (previousSessionsBuilder_ == null) {
-          return previousSessions_.get(index);
-        } else {
-          return previousSessionsBuilder_.getMessage(index);
-        }
+        return previousSessions_.get(index);
       }
       /**
        * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
        */
       public Builder setPreviousSessions(
           int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure value) {
-        if (previousSessionsBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensurePreviousSessionsIsMutable();
-          previousSessions_.set(index, value);
-          onChanged();
-        } else {
-          previousSessionsBuilder_.setMessage(index, value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensurePreviousSessionsIsMutable();
+        previousSessions_.set(index, value);
+
         return this;
       }
       /**
@@ -6311,29 +5192,21 @@ public final class StorageProtos {
        */
       public Builder setPreviousSessions(
           int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder builderForValue) {
-        if (previousSessionsBuilder_ == null) {
-          ensurePreviousSessionsIsMutable();
-          previousSessions_.set(index, builderForValue.build());
-          onChanged();
-        } else {
-          previousSessionsBuilder_.setMessage(index, builderForValue.build());
-        }
+        ensurePreviousSessionsIsMutable();
+        previousSessions_.set(index, builderForValue.build());
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
        */
       public Builder addPreviousSessions(org.whispersystems.libsignal.state.StorageProtos.SessionStructure value) {
-        if (previousSessionsBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensurePreviousSessionsIsMutable();
-          previousSessions_.add(value);
-          onChanged();
-        } else {
-          previousSessionsBuilder_.addMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensurePreviousSessionsIsMutable();
+        previousSessions_.add(value);
+
         return this;
       }
       /**
@@ -6341,16 +5214,12 @@ public final class StorageProtos {
        */
       public Builder addPreviousSessions(
           int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure value) {
-        if (previousSessionsBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensurePreviousSessionsIsMutable();
-          previousSessions_.add(index, value);
-          onChanged();
-        } else {
-          previousSessionsBuilder_.addMessage(index, value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensurePreviousSessionsIsMutable();
+        previousSessions_.add(index, value);
+
         return this;
       }
       /**
@@ -6358,13 +5227,9 @@ public final class StorageProtos {
        */
       public Builder addPreviousSessions(
           org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder builderForValue) {
-        if (previousSessionsBuilder_ == null) {
-          ensurePreviousSessionsIsMutable();
-          previousSessions_.add(builderForValue.build());
-          onChanged();
-        } else {
-          previousSessionsBuilder_.addMessage(builderForValue.build());
-        }
+        ensurePreviousSessionsIsMutable();
+        previousSessions_.add(builderForValue.build());
+
         return this;
       }
       /**
@@ -6372,13 +5237,9 @@ public final class StorageProtos {
        */
       public Builder addPreviousSessions(
           int index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder builderForValue) {
-        if (previousSessionsBuilder_ == null) {
-          ensurePreviousSessionsIsMutable();
-          previousSessions_.add(index, builderForValue.build());
-          onChanged();
-        } else {
-          previousSessionsBuilder_.addMessage(index, builderForValue.build());
-        }
+        ensurePreviousSessionsIsMutable();
+        previousSessions_.add(index, builderForValue.build());
+
         return this;
       }
       /**
@@ -6386,105 +5247,30 @@ public final class StorageProtos {
        */
       public Builder addAllPreviousSessions(
           java.lang.Iterable<? extends org.whispersystems.libsignal.state.StorageProtos.SessionStructure> values) {
-        if (previousSessionsBuilder_ == null) {
-          ensurePreviousSessionsIsMutable();
-          super.addAll(values, previousSessions_);
-          onChanged();
-        } else {
-          previousSessionsBuilder_.addAllMessages(values);
-        }
+        ensurePreviousSessionsIsMutable();
+        com.google.protobuf.AbstractMessageLite.Builder.addAll(
+            values, previousSessions_);
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
        */
       public Builder clearPreviousSessions() {
-        if (previousSessionsBuilder_ == null) {
-          previousSessions_ = java.util.Collections.emptyList();
-          bitField0_ = (bitField0_ & ~0x00000002);
-          onChanged();
-        } else {
-          previousSessionsBuilder_.clear();
-        }
+        previousSessions_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000002);
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
        */
       public Builder removePreviousSessions(int index) {
-        if (previousSessionsBuilder_ == null) {
-          ensurePreviousSessionsIsMutable();
-          previousSessions_.remove(index);
-          onChanged();
-        } else {
-          previousSessionsBuilder_.remove(index);
-        }
+        ensurePreviousSessionsIsMutable();
+        previousSessions_.remove(index);
+
         return this;
       }
-      /**
-       * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder getPreviousSessionsBuilder(
-          int index) {
-        return getPreviousSessionsFieldBuilder().getBuilder(index);
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder getPreviousSessionsOrBuilder(
-          int index) {
-        if (previousSessionsBuilder_ == null) {
-          return previousSessions_.get(index);  } else {
-          return previousSessionsBuilder_.getMessageOrBuilder(index);
-        }
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
-       */
-      public java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder> 
-           getPreviousSessionsOrBuilderList() {
-        if (previousSessionsBuilder_ != null) {
-          return previousSessionsBuilder_.getMessageOrBuilderList();
-        } else {
-          return java.util.Collections.unmodifiableList(previousSessions_);
-        }
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder addPreviousSessionsBuilder() {
-        return getPreviousSessionsFieldBuilder().addBuilder(
-            org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance());
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder addPreviousSessionsBuilder(
-          int index) {
-        return getPreviousSessionsFieldBuilder().addBuilder(
-            index, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.getDefaultInstance());
-      }
-      /**
-       * <code>repeated .textsecure.SessionStructure previousSessions = 2;</code>
-       */
-      public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder> 
-           getPreviousSessionsBuilderList() {
-        return getPreviousSessionsFieldBuilder().getBuilderList();
-      }
-      private com.google.protobuf.RepeatedFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SessionStructure, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder> 
-          getPreviousSessionsFieldBuilder() {
-        if (previousSessionsBuilder_ == null) {
-          previousSessionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SessionStructure, org.whispersystems.libsignal.state.StorageProtos.SessionStructure.Builder, org.whispersystems.libsignal.state.StorageProtos.SessionStructureOrBuilder>(
-                  previousSessions_,
-                  ((bitField0_ & 0x00000002) == 0x00000002),
-                  getParentForChildren(),
-                  isClean());
-          previousSessions_ = null;
-        }
-        return previousSessionsBuilder_;
-      }
 
       // @@protoc_insertion_point(builder_scope:textsecure.RecordStructure)
     }
@@ -6497,10 +5283,10 @@ public final class StorageProtos {
     // @@protoc_insertion_point(class_scope:textsecure.RecordStructure)
   }
 
-  public interface PreKeyRecordStructureOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface PreKeyRecordStructureOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.PreKeyRecordStructure)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 id = 1;
     /**
      * <code>optional uint32 id = 1;</code>
      */
@@ -6510,7 +5296,6 @@ public final class StorageProtos {
      */
     int getId();
 
-    // optional bytes publicKey = 2;
     /**
      * <code>optional bytes publicKey = 2;</code>
      */
@@ -6520,7 +5305,6 @@ public final class StorageProtos {
      */
     com.google.protobuf.ByteString getPublicKey();
 
-    // optional bytes privateKey = 3;
     /**
      * <code>optional bytes privateKey = 3;</code>
      */
@@ -6534,14 +5318,15 @@ public final class StorageProtos {
    * Protobuf type {@code textsecure.PreKeyRecordStructure}
    */
   public static final class PreKeyRecordStructure extends
-      com.google.protobuf.GeneratedMessage
-      implements PreKeyRecordStructureOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.PreKeyRecordStructure)
+      PreKeyRecordStructureOrBuilder {
     // Use PreKeyRecordStructure.newBuilder() to construct.
-    private PreKeyRecordStructure(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private PreKeyRecordStructure(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private PreKeyRecordStructure(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private PreKeyRecordStructure(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final PreKeyRecordStructure defaultInstance;
     public static PreKeyRecordStructure getDefaultInstance() {
@@ -6552,20 +5337,18 @@ public final class StorageProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private PreKeyRecordStructure(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -6575,7 +5358,7 @@ public final class StorageProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -6604,22 +5387,16 @@ public final class StorageProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_PreKeyRecordStructure_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_PreKeyRecordStructure_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure.class, org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<PreKeyRecordStructure> PARSER =
         new com.google.protobuf.AbstractParser<PreKeyRecordStructure>() {
       public PreKeyRecordStructure parsePartialFrom(
@@ -6636,7 +5413,6 @@ public final class StorageProtos {
     }
 
     private int bitField0_;
-    // optional uint32 id = 1;
     public static final int ID_FIELD_NUMBER = 1;
     private int id_;
     /**
@@ -6652,7 +5428,6 @@ public final class StorageProtos {
       return id_;
     }
 
-    // optional bytes publicKey = 2;
     public static final int PUBLICKEY_FIELD_NUMBER = 2;
     private com.google.protobuf.ByteString publicKey_;
     /**
@@ -6668,7 +5443,6 @@ public final class StorageProtos {
       return publicKey_;
     }
 
-    // optional bytes privateKey = 3;
     public static final int PRIVATEKEY_FIELD_NUMBER = 3;
     private com.google.protobuf.ByteString privateKey_;
     /**
@@ -6692,7 +5466,8 @@ public final class StorageProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -6710,7 +5485,7 @@ public final class StorageProtos {
       if (((bitField0_ & 0x00000004) == 0x00000004)) {
         output.writeBytes(3, privateKey_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -6731,7 +5506,7 @@ public final class StorageProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeBytesSize(3, privateKey_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -6803,43 +5578,21 @@ public final class StorageProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.PreKeyRecordStructure}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructureOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_PreKeyRecordStructure_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_PreKeyRecordStructure_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure.class, org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.PreKeyRecordStructure)
+        org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructureOrBuilder {
       // Construct using org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -6860,11 +5613,6 @@ public final class StorageProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_PreKeyRecordStructure_descriptor;
-      }
-
       public org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure getDefaultInstanceForType() {
         return org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure.getDefaultInstance();
       }
@@ -6894,19 +5642,9 @@ public final class StorageProtos {
         }
         result.privateKey_ = privateKey_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure) {
-          return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure other) {
         if (other == org.whispersystems.libsignal.state.StorageProtos.PreKeyRecordStructure.getDefaultInstance()) return this;
         if (other.hasId()) {
@@ -6918,7 +5656,8 @@ public final class StorageProtos {
         if (other.hasPrivateKey()) {
           setPrivateKey(other.getPrivateKey());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -6945,7 +5684,6 @@ public final class StorageProtos {
       }
       private int bitField0_;
 
-      // optional uint32 id = 1;
       private int id_ ;
       /**
        * <code>optional uint32 id = 1;</code>
@@ -6965,7 +5703,7 @@ public final class StorageProtos {
       public Builder setId(int value) {
         bitField0_ |= 0x00000001;
         id_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -6974,11 +5712,10 @@ public final class StorageProtos {
       public Builder clearId() {
         bitField0_ = (bitField0_ & ~0x00000001);
         id_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes publicKey = 2;
       private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes publicKey = 2;</code>
@@ -7001,7 +5738,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
         publicKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -7010,11 +5747,10 @@ public final class StorageProtos {
       public Builder clearPublicKey() {
         bitField0_ = (bitField0_ & ~0x00000002);
         publicKey_ = getDefaultInstance().getPublicKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes privateKey = 3;
       private com.google.protobuf.ByteString privateKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes privateKey = 3;</code>
@@ -7037,7 +5773,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000004;
         privateKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -7046,7 +5782,7 @@ public final class StorageProtos {
       public Builder clearPrivateKey() {
         bitField0_ = (bitField0_ & ~0x00000004);
         privateKey_ = getDefaultInstance().getPrivateKey();
-        onChanged();
+        
         return this;
       }
 
@@ -7061,10 +5797,10 @@ public final class StorageProtos {
     // @@protoc_insertion_point(class_scope:textsecure.PreKeyRecordStructure)
   }
 
-  public interface SignedPreKeyRecordStructureOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface SignedPreKeyRecordStructureOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.SignedPreKeyRecordStructure)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 id = 1;
     /**
      * <code>optional uint32 id = 1;</code>
      */
@@ -7074,7 +5810,6 @@ public final class StorageProtos {
      */
     int getId();
 
-    // optional bytes publicKey = 2;
     /**
      * <code>optional bytes publicKey = 2;</code>
      */
@@ -7084,7 +5819,6 @@ public final class StorageProtos {
      */
     com.google.protobuf.ByteString getPublicKey();
 
-    // optional bytes privateKey = 3;
     /**
      * <code>optional bytes privateKey = 3;</code>
      */
@@ -7094,7 +5828,6 @@ public final class StorageProtos {
      */
     com.google.protobuf.ByteString getPrivateKey();
 
-    // optional bytes signature = 4;
     /**
      * <code>optional bytes signature = 4;</code>
      */
@@ -7104,7 +5837,6 @@ public final class StorageProtos {
      */
     com.google.protobuf.ByteString getSignature();
 
-    // optional fixed64 timestamp = 5;
     /**
      * <code>optional fixed64 timestamp = 5;</code>
      */
@@ -7118,14 +5850,15 @@ public final class StorageProtos {
    * Protobuf type {@code textsecure.SignedPreKeyRecordStructure}
    */
   public static final class SignedPreKeyRecordStructure extends
-      com.google.protobuf.GeneratedMessage
-      implements SignedPreKeyRecordStructureOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.SignedPreKeyRecordStructure)
+      SignedPreKeyRecordStructureOrBuilder {
     // Use SignedPreKeyRecordStructure.newBuilder() to construct.
-    private SignedPreKeyRecordStructure(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private SignedPreKeyRecordStructure(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private SignedPreKeyRecordStructure(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private SignedPreKeyRecordStructure(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final SignedPreKeyRecordStructure defaultInstance;
     public static SignedPreKeyRecordStructure getDefaultInstance() {
@@ -7136,20 +5869,18 @@ public final class StorageProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private SignedPreKeyRecordStructure(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -7159,7 +5890,7 @@ public final class StorageProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -7198,22 +5929,16 @@ public final class StorageProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SignedPreKeyRecordStructure_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SignedPreKeyRecordStructure_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure.class, org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<SignedPreKeyRecordStructure> PARSER =
         new com.google.protobuf.AbstractParser<SignedPreKeyRecordStructure>() {
       public SignedPreKeyRecordStructure parsePartialFrom(
@@ -7230,7 +5955,6 @@ public final class StorageProtos {
     }
 
     private int bitField0_;
-    // optional uint32 id = 1;
     public static final int ID_FIELD_NUMBER = 1;
     private int id_;
     /**
@@ -7246,7 +5970,6 @@ public final class StorageProtos {
       return id_;
     }
 
-    // optional bytes publicKey = 2;
     public static final int PUBLICKEY_FIELD_NUMBER = 2;
     private com.google.protobuf.ByteString publicKey_;
     /**
@@ -7262,7 +5985,6 @@ public final class StorageProtos {
       return publicKey_;
     }
 
-    // optional bytes privateKey = 3;
     public static final int PRIVATEKEY_FIELD_NUMBER = 3;
     private com.google.protobuf.ByteString privateKey_;
     /**
@@ -7278,7 +6000,6 @@ public final class StorageProtos {
       return privateKey_;
     }
 
-    // optional bytes signature = 4;
     public static final int SIGNATURE_FIELD_NUMBER = 4;
     private com.google.protobuf.ByteString signature_;
     /**
@@ -7294,7 +6015,6 @@ public final class StorageProtos {
       return signature_;
     }
 
-    // optional fixed64 timestamp = 5;
     public static final int TIMESTAMP_FIELD_NUMBER = 5;
     private long timestamp_;
     /**
@@ -7320,7 +6040,8 @@ public final class StorageProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -7344,7 +6065,7 @@ public final class StorageProtos {
       if (((bitField0_ & 0x00000010) == 0x00000010)) {
         output.writeFixed64(5, timestamp_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -7373,7 +6094,7 @@ public final class StorageProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeFixed64Size(5, timestamp_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -7445,43 +6166,21 @@ public final class StorageProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.SignedPreKeyRecordStructure}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructureOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SignedPreKeyRecordStructure_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SignedPreKeyRecordStructure_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure.class, org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.SignedPreKeyRecordStructure)
+        org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructureOrBuilder {
       // Construct using org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -7506,11 +6205,6 @@ public final class StorageProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SignedPreKeyRecordStructure_descriptor;
-      }
-
       public org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure getDefaultInstanceForType() {
         return org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure.getDefaultInstance();
       }
@@ -7548,19 +6242,9 @@ public final class StorageProtos {
         }
         result.timestamp_ = timestamp_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure) {
-          return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure other) {
         if (other == org.whispersystems.libsignal.state.StorageProtos.SignedPreKeyRecordStructure.getDefaultInstance()) return this;
         if (other.hasId()) {
@@ -7578,7 +6262,8 @@ public final class StorageProtos {
         if (other.hasTimestamp()) {
           setTimestamp(other.getTimestamp());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -7605,7 +6290,6 @@ public final class StorageProtos {
       }
       private int bitField0_;
 
-      // optional uint32 id = 1;
       private int id_ ;
       /**
        * <code>optional uint32 id = 1;</code>
@@ -7625,7 +6309,7 @@ public final class StorageProtos {
       public Builder setId(int value) {
         bitField0_ |= 0x00000001;
         id_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -7634,11 +6318,10 @@ public final class StorageProtos {
       public Builder clearId() {
         bitField0_ = (bitField0_ & ~0x00000001);
         id_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes publicKey = 2;
       private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes publicKey = 2;</code>
@@ -7661,7 +6344,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
         publicKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -7670,11 +6353,10 @@ public final class StorageProtos {
       public Builder clearPublicKey() {
         bitField0_ = (bitField0_ & ~0x00000002);
         publicKey_ = getDefaultInstance().getPublicKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes privateKey = 3;
       private com.google.protobuf.ByteString privateKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes privateKey = 3;</code>
@@ -7697,7 +6379,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000004;
         privateKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -7706,11 +6388,10 @@ public final class StorageProtos {
       public Builder clearPrivateKey() {
         bitField0_ = (bitField0_ & ~0x00000004);
         privateKey_ = getDefaultInstance().getPrivateKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes signature = 4;
       private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes signature = 4;</code>
@@ -7733,7 +6414,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000008;
         signature_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -7742,11 +6423,10 @@ public final class StorageProtos {
       public Builder clearSignature() {
         bitField0_ = (bitField0_ & ~0x00000008);
         signature_ = getDefaultInstance().getSignature();
-        onChanged();
+        
         return this;
       }
 
-      // optional fixed64 timestamp = 5;
       private long timestamp_ ;
       /**
        * <code>optional fixed64 timestamp = 5;</code>
@@ -7766,7 +6446,7 @@ public final class StorageProtos {
       public Builder setTimestamp(long value) {
         bitField0_ |= 0x00000010;
         timestamp_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -7775,7 +6455,7 @@ public final class StorageProtos {
       public Builder clearTimestamp() {
         bitField0_ = (bitField0_ & ~0x00000010);
         timestamp_ = 0L;
-        onChanged();
+        
         return this;
       }
 
@@ -7790,10 +6470,10 @@ public final class StorageProtos {
     // @@protoc_insertion_point(class_scope:textsecure.SignedPreKeyRecordStructure)
   }
 
-  public interface IdentityKeyPairStructureOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface IdentityKeyPairStructureOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.IdentityKeyPairStructure)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional bytes publicKey = 1;
     /**
      * <code>optional bytes publicKey = 1;</code>
      */
@@ -7803,7 +6483,6 @@ public final class StorageProtos {
      */
     com.google.protobuf.ByteString getPublicKey();
 
-    // optional bytes privateKey = 2;
     /**
      * <code>optional bytes privateKey = 2;</code>
      */
@@ -7817,14 +6496,15 @@ public final class StorageProtos {
    * Protobuf type {@code textsecure.IdentityKeyPairStructure}
    */
   public static final class IdentityKeyPairStructure extends
-      com.google.protobuf.GeneratedMessage
-      implements IdentityKeyPairStructureOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.IdentityKeyPairStructure)
+      IdentityKeyPairStructureOrBuilder {
     // Use IdentityKeyPairStructure.newBuilder() to construct.
-    private IdentityKeyPairStructure(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private IdentityKeyPairStructure(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private IdentityKeyPairStructure(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private IdentityKeyPairStructure(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final IdentityKeyPairStructure defaultInstance;
     public static IdentityKeyPairStructure getDefaultInstance() {
@@ -7835,20 +6515,18 @@ public final class StorageProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private IdentityKeyPairStructure(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -7858,7 +6536,7 @@ public final class StorageProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -7882,22 +6560,16 @@ public final class StorageProtos {
         throw new com.google.protobuf.InvalidProtocolBufferException(
             e.getMessage()).setUnfinishedMessage(this);
       } finally {
-        this.unknownFields = unknownFields.build();
-        makeExtensionsImmutable();
-      }
-    }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_IdentityKeyPairStructure_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_IdentityKeyPairStructure_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure.class, org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure.Builder.class);
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
+        makeExtensionsImmutable();
+      }
     }
-
     public static com.google.protobuf.Parser<IdentityKeyPairStructure> PARSER =
         new com.google.protobuf.AbstractParser<IdentityKeyPairStructure>() {
       public IdentityKeyPairStructure parsePartialFrom(
@@ -7914,7 +6586,6 @@ public final class StorageProtos {
     }
 
     private int bitField0_;
-    // optional bytes publicKey = 1;
     public static final int PUBLICKEY_FIELD_NUMBER = 1;
     private com.google.protobuf.ByteString publicKey_;
     /**
@@ -7930,7 +6601,6 @@ public final class StorageProtos {
       return publicKey_;
     }
 
-    // optional bytes privateKey = 2;
     public static final int PRIVATEKEY_FIELD_NUMBER = 2;
     private com.google.protobuf.ByteString privateKey_;
     /**
@@ -7953,7 +6623,8 @@ public final class StorageProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -7968,7 +6639,7 @@ public final class StorageProtos {
       if (((bitField0_ & 0x00000002) == 0x00000002)) {
         output.writeBytes(2, privateKey_);
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -7985,7 +6656,7 @@ public final class StorageProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeBytesSize(2, privateKey_);
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -8057,43 +6728,21 @@ public final class StorageProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.IdentityKeyPairStructure}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructureOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_IdentityKeyPairStructure_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_IdentityKeyPairStructure_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure.class, org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.IdentityKeyPairStructure)
+        org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructureOrBuilder {
       // Construct using org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -8112,11 +6761,6 @@ public final class StorageProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_IdentityKeyPairStructure_descriptor;
-      }
-
       public org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure getDefaultInstanceForType() {
         return org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure.getDefaultInstance();
       }
@@ -8142,19 +6786,9 @@ public final class StorageProtos {
         }
         result.privateKey_ = privateKey_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure) {
-          return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure other) {
         if (other == org.whispersystems.libsignal.state.StorageProtos.IdentityKeyPairStructure.getDefaultInstance()) return this;
         if (other.hasPublicKey()) {
@@ -8163,7 +6797,8 @@ public final class StorageProtos {
         if (other.hasPrivateKey()) {
           setPrivateKey(other.getPrivateKey());
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -8190,7 +6825,6 @@ public final class StorageProtos {
       }
       private int bitField0_;
 
-      // optional bytes publicKey = 1;
       private com.google.protobuf.ByteString publicKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes publicKey = 1;</code>
@@ -8213,7 +6847,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000001;
         publicKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -8222,11 +6856,10 @@ public final class StorageProtos {
       public Builder clearPublicKey() {
         bitField0_ = (bitField0_ & ~0x00000001);
         publicKey_ = getDefaultInstance().getPublicKey();
-        onChanged();
+        
         return this;
       }
 
-      // optional bytes privateKey = 2;
       private com.google.protobuf.ByteString privateKey_ = com.google.protobuf.ByteString.EMPTY;
       /**
        * <code>optional bytes privateKey = 2;</code>
@@ -8249,7 +6882,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
         privateKey_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -8258,7 +6891,7 @@ public final class StorageProtos {
       public Builder clearPrivateKey() {
         bitField0_ = (bitField0_ & ~0x00000002);
         privateKey_ = getDefaultInstance().getPrivateKey();
-        onChanged();
+        
         return this;
       }
 
@@ -8273,10 +6906,10 @@ public final class StorageProtos {
     // @@protoc_insertion_point(class_scope:textsecure.IdentityKeyPairStructure)
   }
 
-  public interface SenderKeyStateStructureOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface SenderKeyStateStructureOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.SenderKeyStateStructure)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // optional uint32 senderKeyId = 1;
     /**
      * <code>optional uint32 senderKeyId = 1;</code>
      */
@@ -8286,7 +6919,6 @@ public final class StorageProtos {
      */
     int getSenderKeyId();
 
-    // optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;
     /**
      * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
      */
@@ -8295,12 +6927,7 @@ public final class StorageProtos {
      * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
      */
     org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey getSenderChainKey();
-    /**
-     * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder getSenderChainKeyOrBuilder();
 
-    // optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;
     /**
      * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
      */
@@ -8309,12 +6936,7 @@ public final class StorageProtos {
      * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
      */
     org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey getSenderSigningKey();
-    /**
-     * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKeyOrBuilder getSenderSigningKeyOrBuilder();
 
-    // repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;
     /**
      * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
      */
@@ -8328,29 +6950,20 @@ public final class StorageProtos {
      * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
      */
     int getSenderMessageKeysCount();
-    /**
-     * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
-     */
-    java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKeyOrBuilder> 
-        getSenderMessageKeysOrBuilderList();
-    /**
-     * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKeyOrBuilder getSenderMessageKeysOrBuilder(
-        int index);
   }
   /**
    * Protobuf type {@code textsecure.SenderKeyStateStructure}
    */
   public static final class SenderKeyStateStructure extends
-      com.google.protobuf.GeneratedMessage
-      implements SenderKeyStateStructureOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.SenderKeyStateStructure)
+      SenderKeyStateStructureOrBuilder {
     // Use SenderKeyStateStructure.newBuilder() to construct.
-    private SenderKeyStateStructure(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private SenderKeyStateStructure(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private SenderKeyStateStructure(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private SenderKeyStateStructure(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final SenderKeyStateStructure defaultInstance;
     public static SenderKeyStateStructure getDefaultInstance() {
@@ -8361,20 +6974,18 @@ public final class StorageProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private SenderKeyStateStructure(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -8384,7 +6995,7 @@ public final class StorageProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -8440,22 +7051,16 @@ public final class StorageProtos {
         if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
           senderMessageKeys_ = java.util.Collections.unmodifiableList(senderMessageKeys_);
         }
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<SenderKeyStateStructure> PARSER =
         new com.google.protobuf.AbstractParser<SenderKeyStateStructure>() {
       public SenderKeyStateStructure parsePartialFrom(
@@ -8471,10 +7076,10 @@ public final class StorageProtos {
       return PARSER;
     }
 
-    public interface SenderChainKeyOrBuilder
-        extends com.google.protobuf.MessageOrBuilder {
+    public interface SenderChainKeyOrBuilder extends
+        // @@protoc_insertion_point(interface_extends:textsecure.SenderKeyStateStructure.SenderChainKey)
+        com.google.protobuf.MessageLiteOrBuilder {
 
-      // optional uint32 iteration = 1;
       /**
        * <code>optional uint32 iteration = 1;</code>
        */
@@ -8484,7 +7089,6 @@ public final class StorageProtos {
        */
       int getIteration();
 
-      // optional bytes seed = 2;
       /**
        * <code>optional bytes seed = 2;</code>
        */
@@ -8498,14 +7102,15 @@ public final class StorageProtos {
      * Protobuf type {@code textsecure.SenderKeyStateStructure.SenderChainKey}
      */
     public static final class SenderChainKey extends
-        com.google.protobuf.GeneratedMessage
-        implements SenderChainKeyOrBuilder {
+        com.google.protobuf.GeneratedMessageLite implements
+        // @@protoc_insertion_point(message_implements:textsecure.SenderKeyStateStructure.SenderChainKey)
+        SenderChainKeyOrBuilder {
       // Use SenderChainKey.newBuilder() to construct.
-      private SenderChainKey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+      private SenderChainKey(com.google.protobuf.GeneratedMessageLite.Builder builder) {
         super(builder);
         this.unknownFields = builder.getUnknownFields();
       }
-      private SenderChainKey(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+      private SenderChainKey(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
       private static final SenderChainKey defaultInstance;
       public static SenderChainKey getDefaultInstance() {
@@ -8516,20 +7121,18 @@ public final class StorageProtos {
         return defaultInstance;
       }
 
-      private final com.google.protobuf.UnknownFieldSet unknownFields;
-      @java.lang.Override
-      public final com.google.protobuf.UnknownFieldSet
-          getUnknownFields() {
-        return this.unknownFields;
-      }
+      private final com.google.protobuf.ByteString unknownFields;
       private SenderChainKey(
           com.google.protobuf.CodedInputStream input,
           com.google.protobuf.ExtensionRegistryLite extensionRegistry)
           throws com.google.protobuf.InvalidProtocolBufferException {
         initFields();
         int mutable_bitField0_ = 0;
-        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-            com.google.protobuf.UnknownFieldSet.newBuilder();
+        com.google.protobuf.ByteString.Output unknownFieldsOutput =
+            com.google.protobuf.ByteString.newOutput();
+        com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+            com.google.protobuf.CodedOutputStream.newInstance(
+                unknownFieldsOutput);
         try {
           boolean done = false;
           while (!done) {
@@ -8539,7 +7142,7 @@ public final class StorageProtos {
                 done = true;
                 break;
               default: {
-                if (!parseUnknownField(input, unknownFields,
+                if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                        extensionRegistry, tag)) {
                   done = true;
                 }
@@ -8563,22 +7166,16 @@ public final class StorageProtos {
           throw new com.google.protobuf.InvalidProtocolBufferException(
               e.getMessage()).setUnfinishedMessage(this);
         } finally {
-          this.unknownFields = unknownFields.build();
+          try {
+            unknownFieldsCodedOutput.flush();
+          } catch (java.io.IOException e) {
+          // Should not happen
+          } finally {
+            unknownFields = unknownFieldsOutput.toByteString();
+          }
           makeExtensionsImmutable();
         }
       }
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder.class);
-      }
-
       public static com.google.protobuf.Parser<SenderChainKey> PARSER =
           new com.google.protobuf.AbstractParser<SenderChainKey>() {
         public SenderChainKey parsePartialFrom(
@@ -8595,7 +7192,6 @@ public final class StorageProtos {
       }
 
       private int bitField0_;
-      // optional uint32 iteration = 1;
       public static final int ITERATION_FIELD_NUMBER = 1;
       private int iteration_;
       /**
@@ -8611,7 +7207,6 @@ public final class StorageProtos {
         return iteration_;
       }
 
-      // optional bytes seed = 2;
       public static final int SEED_FIELD_NUMBER = 2;
       private com.google.protobuf.ByteString seed_;
       /**
@@ -8634,7 +7229,8 @@ public final class StorageProtos {
       private byte memoizedIsInitialized = -1;
       public final boolean isInitialized() {
         byte isInitialized = memoizedIsInitialized;
-        if (isInitialized != -1) return isInitialized == 1;
+        if (isInitialized == 1) return true;
+        if (isInitialized == 0) return false;
 
         memoizedIsInitialized = 1;
         return true;
@@ -8649,7 +7245,7 @@ public final class StorageProtos {
         if (((bitField0_ & 0x00000002) == 0x00000002)) {
           output.writeBytes(2, seed_);
         }
-        getUnknownFields().writeTo(output);
+        output.writeRawBytes(unknownFields);
       }
 
       private int memoizedSerializedSize = -1;
@@ -8666,7 +7262,7 @@ public final class StorageProtos {
           size += com.google.protobuf.CodedOutputStream
             .computeBytesSize(2, seed_);
         }
-        size += getUnknownFields().getSerializedSize();
+        size += unknownFields.size();
         memoizedSerializedSize = size;
         return size;
       }
@@ -8738,43 +7334,21 @@ public final class StorageProtos {
       }
       public Builder toBuilder() { return newBuilder(this); }
 
-      @java.lang.Override
-      protected Builder newBuilderForType(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        Builder builder = new Builder(parent);
-        return builder;
-      }
       /**
        * Protobuf type {@code textsecure.SenderKeyStateStructure.SenderChainKey}
        */
       public static final class Builder extends
-          com.google.protobuf.GeneratedMessage.Builder<Builder>
-         implements org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder {
-        public static final com.google.protobuf.Descriptors.Descriptor
-            getDescriptor() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_descriptor;
-        }
-
-        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-            internalGetFieldAccessorTable() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_fieldAccessorTable
-              .ensureFieldAccessorsInitialized(
-                  org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder.class);
-        }
-
+          com.google.protobuf.GeneratedMessageLite.Builder<
+            org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey, Builder>
+          implements
+          // @@protoc_insertion_point(builder_implements:textsecure.SenderKeyStateStructure.SenderChainKey)
+          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder {
         // Construct using org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.newBuilder()
         private Builder() {
           maybeForceBuilderInitialization();
         }
 
-        private Builder(
-            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-          super(parent);
-          maybeForceBuilderInitialization();
-        }
         private void maybeForceBuilderInitialization() {
-          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          }
         }
         private static Builder create() {
           return new Builder();
@@ -8793,11 +7367,6 @@ public final class StorageProtos {
           return create().mergeFrom(buildPartial());
         }
 
-        public com.google.protobuf.Descriptors.Descriptor
-            getDescriptorForType() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_descriptor;
-        }
-
         public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey getDefaultInstanceForType() {
           return org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.getDefaultInstance();
         }
@@ -8823,19 +7392,9 @@ public final class StorageProtos {
           }
           result.seed_ = seed_;
           result.bitField0_ = to_bitField0_;
-          onBuilt();
           return result;
         }
 
-        public Builder mergeFrom(com.google.protobuf.Message other) {
-          if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey) {
-            return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey)other);
-          } else {
-            super.mergeFrom(other);
-            return this;
-          }
-        }
-
         public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey other) {
           if (other == org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.getDefaultInstance()) return this;
           if (other.hasIteration()) {
@@ -8844,7 +7403,8 @@ public final class StorageProtos {
           if (other.hasSeed()) {
             setSeed(other.getSeed());
           }
-          this.mergeUnknownFields(other.getUnknownFields());
+          setUnknownFields(
+              getUnknownFields().concat(other.unknownFields));
           return this;
         }
 
@@ -8871,7 +7431,6 @@ public final class StorageProtos {
         }
         private int bitField0_;
 
-        // optional uint32 iteration = 1;
         private int iteration_ ;
         /**
          * <code>optional uint32 iteration = 1;</code>
@@ -8891,7 +7450,7 @@ public final class StorageProtos {
         public Builder setIteration(int value) {
           bitField0_ |= 0x00000001;
           iteration_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -8900,11 +7459,10 @@ public final class StorageProtos {
         public Builder clearIteration() {
           bitField0_ = (bitField0_ & ~0x00000001);
           iteration_ = 0;
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes seed = 2;
         private com.google.protobuf.ByteString seed_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes seed = 2;</code>
@@ -8927,7 +7485,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
           seed_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -8936,7 +7494,7 @@ public final class StorageProtos {
         public Builder clearSeed() {
           bitField0_ = (bitField0_ & ~0x00000002);
           seed_ = getDefaultInstance().getSeed();
-          onChanged();
+          
           return this;
         }
 
@@ -8951,10 +7509,10 @@ public final class StorageProtos {
       // @@protoc_insertion_point(class_scope:textsecure.SenderKeyStateStructure.SenderChainKey)
     }
 
-    public interface SenderMessageKeyOrBuilder
-        extends com.google.protobuf.MessageOrBuilder {
+    public interface SenderMessageKeyOrBuilder extends
+        // @@protoc_insertion_point(interface_extends:textsecure.SenderKeyStateStructure.SenderMessageKey)
+        com.google.protobuf.MessageLiteOrBuilder {
 
-      // optional uint32 iteration = 1;
       /**
        * <code>optional uint32 iteration = 1;</code>
        */
@@ -8964,7 +7522,6 @@ public final class StorageProtos {
        */
       int getIteration();
 
-      // optional bytes seed = 2;
       /**
        * <code>optional bytes seed = 2;</code>
        */
@@ -8978,14 +7535,15 @@ public final class StorageProtos {
      * Protobuf type {@code textsecure.SenderKeyStateStructure.SenderMessageKey}
      */
     public static final class SenderMessageKey extends
-        com.google.protobuf.GeneratedMessage
-        implements SenderMessageKeyOrBuilder {
+        com.google.protobuf.GeneratedMessageLite implements
+        // @@protoc_insertion_point(message_implements:textsecure.SenderKeyStateStructure.SenderMessageKey)
+        SenderMessageKeyOrBuilder {
       // Use SenderMessageKey.newBuilder() to construct.
-      private SenderMessageKey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+      private SenderMessageKey(com.google.protobuf.GeneratedMessageLite.Builder builder) {
         super(builder);
         this.unknownFields = builder.getUnknownFields();
       }
-      private SenderMessageKey(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+      private SenderMessageKey(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
       private static final SenderMessageKey defaultInstance;
       public static SenderMessageKey getDefaultInstance() {
@@ -8996,20 +7554,18 @@ public final class StorageProtos {
         return defaultInstance;
       }
 
-      private final com.google.protobuf.UnknownFieldSet unknownFields;
-      @java.lang.Override
-      public final com.google.protobuf.UnknownFieldSet
-          getUnknownFields() {
-        return this.unknownFields;
-      }
+      private final com.google.protobuf.ByteString unknownFields;
       private SenderMessageKey(
           com.google.protobuf.CodedInputStream input,
           com.google.protobuf.ExtensionRegistryLite extensionRegistry)
           throws com.google.protobuf.InvalidProtocolBufferException {
         initFields();
         int mutable_bitField0_ = 0;
-        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-            com.google.protobuf.UnknownFieldSet.newBuilder();
+        com.google.protobuf.ByteString.Output unknownFieldsOutput =
+            com.google.protobuf.ByteString.newOutput();
+        com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+            com.google.protobuf.CodedOutputStream.newInstance(
+                unknownFieldsOutput);
         try {
           boolean done = false;
           while (!done) {
@@ -9019,7 +7575,7 @@ public final class StorageProtos {
                 done = true;
                 break;
               default: {
-                if (!parseUnknownField(input, unknownFields,
+                if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                        extensionRegistry, tag)) {
                   done = true;
                 }
@@ -9043,22 +7599,16 @@ public final class StorageProtos {
           throw new com.google.protobuf.InvalidProtocolBufferException(
               e.getMessage()).setUnfinishedMessage(this);
         } finally {
-          this.unknownFields = unknownFields.build();
+          try {
+            unknownFieldsCodedOutput.flush();
+          } catch (java.io.IOException e) {
+          // Should not happen
+          } finally {
+            unknownFields = unknownFieldsOutput.toByteString();
+          }
           makeExtensionsImmutable();
         }
       }
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder.class);
-      }
-
       public static com.google.protobuf.Parser<SenderMessageKey> PARSER =
           new com.google.protobuf.AbstractParser<SenderMessageKey>() {
         public SenderMessageKey parsePartialFrom(
@@ -9075,7 +7625,6 @@ public final class StorageProtos {
       }
 
       private int bitField0_;
-      // optional uint32 iteration = 1;
       public static final int ITERATION_FIELD_NUMBER = 1;
       private int iteration_;
       /**
@@ -9091,7 +7640,6 @@ public final class StorageProtos {
         return iteration_;
       }
 
-      // optional bytes seed = 2;
       public static final int SEED_FIELD_NUMBER = 2;
       private com.google.protobuf.ByteString seed_;
       /**
@@ -9114,7 +7662,8 @@ public final class StorageProtos {
       private byte memoizedIsInitialized = -1;
       public final boolean isInitialized() {
         byte isInitialized = memoizedIsInitialized;
-        if (isInitialized != -1) return isInitialized == 1;
+        if (isInitialized == 1) return true;
+        if (isInitialized == 0) return false;
 
         memoizedIsInitialized = 1;
         return true;
@@ -9129,7 +7678,7 @@ public final class StorageProtos {
         if (((bitField0_ & 0x00000002) == 0x00000002)) {
           output.writeBytes(2, seed_);
         }
-        getUnknownFields().writeTo(output);
+        output.writeRawBytes(unknownFields);
       }
 
       private int memoizedSerializedSize = -1;
@@ -9146,7 +7695,7 @@ public final class StorageProtos {
           size += com.google.protobuf.CodedOutputStream
             .computeBytesSize(2, seed_);
         }
-        size += getUnknownFields().getSerializedSize();
+        size += unknownFields.size();
         memoizedSerializedSize = size;
         return size;
       }
@@ -9218,43 +7767,21 @@ public final class StorageProtos {
       }
       public Builder toBuilder() { return newBuilder(this); }
 
-      @java.lang.Override
-      protected Builder newBuilderForType(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        Builder builder = new Builder(parent);
-        return builder;
-      }
       /**
        * Protobuf type {@code textsecure.SenderKeyStateStructure.SenderMessageKey}
        */
       public static final class Builder extends
-          com.google.protobuf.GeneratedMessage.Builder<Builder>
-         implements org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKeyOrBuilder {
-        public static final com.google.protobuf.Descriptors.Descriptor
-            getDescriptor() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_descriptor;
-        }
-
-        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-            internalGetFieldAccessorTable() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_fieldAccessorTable
-              .ensureFieldAccessorsInitialized(
-                  org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder.class);
-        }
-
+          com.google.protobuf.GeneratedMessageLite.Builder<
+            org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey, Builder>
+          implements
+          // @@protoc_insertion_point(builder_implements:textsecure.SenderKeyStateStructure.SenderMessageKey)
+          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKeyOrBuilder {
         // Construct using org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.newBuilder()
         private Builder() {
           maybeForceBuilderInitialization();
         }
 
-        private Builder(
-            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-          super(parent);
-          maybeForceBuilderInitialization();
-        }
         private void maybeForceBuilderInitialization() {
-          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          }
         }
         private static Builder create() {
           return new Builder();
@@ -9273,11 +7800,6 @@ public final class StorageProtos {
           return create().mergeFrom(buildPartial());
         }
 
-        public com.google.protobuf.Descriptors.Descriptor
-            getDescriptorForType() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_descriptor;
-        }
-
         public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey getDefaultInstanceForType() {
           return org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.getDefaultInstance();
         }
@@ -9303,19 +7825,9 @@ public final class StorageProtos {
           }
           result.seed_ = seed_;
           result.bitField0_ = to_bitField0_;
-          onBuilt();
           return result;
         }
 
-        public Builder mergeFrom(com.google.protobuf.Message other) {
-          if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey) {
-            return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey)other);
-          } else {
-            super.mergeFrom(other);
-            return this;
-          }
-        }
-
         public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey other) {
           if (other == org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.getDefaultInstance()) return this;
           if (other.hasIteration()) {
@@ -9324,7 +7836,8 @@ public final class StorageProtos {
           if (other.hasSeed()) {
             setSeed(other.getSeed());
           }
-          this.mergeUnknownFields(other.getUnknownFields());
+          setUnknownFields(
+              getUnknownFields().concat(other.unknownFields));
           return this;
         }
 
@@ -9351,7 +7864,6 @@ public final class StorageProtos {
         }
         private int bitField0_;
 
-        // optional uint32 iteration = 1;
         private int iteration_ ;
         /**
          * <code>optional uint32 iteration = 1;</code>
@@ -9371,7 +7883,7 @@ public final class StorageProtos {
         public Builder setIteration(int value) {
           bitField0_ |= 0x00000001;
           iteration_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -9380,11 +7892,10 @@ public final class StorageProtos {
         public Builder clearIteration() {
           bitField0_ = (bitField0_ & ~0x00000001);
           iteration_ = 0;
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes seed = 2;
         private com.google.protobuf.ByteString seed_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes seed = 2;</code>
@@ -9407,7 +7918,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
           seed_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -9416,7 +7927,7 @@ public final class StorageProtos {
         public Builder clearSeed() {
           bitField0_ = (bitField0_ & ~0x00000002);
           seed_ = getDefaultInstance().getSeed();
-          onChanged();
+          
           return this;
         }
 
@@ -9431,10 +7942,10 @@ public final class StorageProtos {
       // @@protoc_insertion_point(class_scope:textsecure.SenderKeyStateStructure.SenderMessageKey)
     }
 
-    public interface SenderSigningKeyOrBuilder
-        extends com.google.protobuf.MessageOrBuilder {
+    public interface SenderSigningKeyOrBuilder extends
+        // @@protoc_insertion_point(interface_extends:textsecure.SenderKeyStateStructure.SenderSigningKey)
+        com.google.protobuf.MessageLiteOrBuilder {
 
-      // optional bytes public = 1;
       /**
        * <code>optional bytes public = 1;</code>
        */
@@ -9444,7 +7955,6 @@ public final class StorageProtos {
        */
       com.google.protobuf.ByteString getPublic();
 
-      // optional bytes private = 2;
       /**
        * <code>optional bytes private = 2;</code>
        */
@@ -9458,14 +7968,15 @@ public final class StorageProtos {
      * Protobuf type {@code textsecure.SenderKeyStateStructure.SenderSigningKey}
      */
     public static final class SenderSigningKey extends
-        com.google.protobuf.GeneratedMessage
-        implements SenderSigningKeyOrBuilder {
+        com.google.protobuf.GeneratedMessageLite implements
+        // @@protoc_insertion_point(message_implements:textsecure.SenderKeyStateStructure.SenderSigningKey)
+        SenderSigningKeyOrBuilder {
       // Use SenderSigningKey.newBuilder() to construct.
-      private SenderSigningKey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+      private SenderSigningKey(com.google.protobuf.GeneratedMessageLite.Builder builder) {
         super(builder);
         this.unknownFields = builder.getUnknownFields();
       }
-      private SenderSigningKey(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+      private SenderSigningKey(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
       private static final SenderSigningKey defaultInstance;
       public static SenderSigningKey getDefaultInstance() {
@@ -9476,20 +7987,18 @@ public final class StorageProtos {
         return defaultInstance;
       }
 
-      private final com.google.protobuf.UnknownFieldSet unknownFields;
-      @java.lang.Override
-      public final com.google.protobuf.UnknownFieldSet
-          getUnknownFields() {
-        return this.unknownFields;
-      }
+      private final com.google.protobuf.ByteString unknownFields;
       private SenderSigningKey(
           com.google.protobuf.CodedInputStream input,
           com.google.protobuf.ExtensionRegistryLite extensionRegistry)
           throws com.google.protobuf.InvalidProtocolBufferException {
         initFields();
         int mutable_bitField0_ = 0;
-        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-            com.google.protobuf.UnknownFieldSet.newBuilder();
+        com.google.protobuf.ByteString.Output unknownFieldsOutput =
+            com.google.protobuf.ByteString.newOutput();
+        com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+            com.google.protobuf.CodedOutputStream.newInstance(
+                unknownFieldsOutput);
         try {
           boolean done = false;
           while (!done) {
@@ -9499,7 +8008,7 @@ public final class StorageProtos {
                 done = true;
                 break;
               default: {
-                if (!parseUnknownField(input, unknownFields,
+                if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                        extensionRegistry, tag)) {
                   done = true;
                 }
@@ -9523,22 +8032,16 @@ public final class StorageProtos {
           throw new com.google.protobuf.InvalidProtocolBufferException(
               e.getMessage()).setUnfinishedMessage(this);
         } finally {
-          this.unknownFields = unknownFields.build();
+          try {
+            unknownFieldsCodedOutput.flush();
+          } catch (java.io.IOException e) {
+          // Should not happen
+          } finally {
+            unknownFields = unknownFieldsOutput.toByteString();
+          }
           makeExtensionsImmutable();
         }
       }
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.Builder.class);
-      }
-
       public static com.google.protobuf.Parser<SenderSigningKey> PARSER =
           new com.google.protobuf.AbstractParser<SenderSigningKey>() {
         public SenderSigningKey parsePartialFrom(
@@ -9555,7 +8058,6 @@ public final class StorageProtos {
       }
 
       private int bitField0_;
-      // optional bytes public = 1;
       public static final int PUBLIC_FIELD_NUMBER = 1;
       private com.google.protobuf.ByteString public_;
       /**
@@ -9571,7 +8073,6 @@ public final class StorageProtos {
         return public_;
       }
 
-      // optional bytes private = 2;
       public static final int PRIVATE_FIELD_NUMBER = 2;
       private com.google.protobuf.ByteString private_;
       /**
@@ -9594,7 +8095,8 @@ public final class StorageProtos {
       private byte memoizedIsInitialized = -1;
       public final boolean isInitialized() {
         byte isInitialized = memoizedIsInitialized;
-        if (isInitialized != -1) return isInitialized == 1;
+        if (isInitialized == 1) return true;
+        if (isInitialized == 0) return false;
 
         memoizedIsInitialized = 1;
         return true;
@@ -9609,7 +8111,7 @@ public final class StorageProtos {
         if (((bitField0_ & 0x00000002) == 0x00000002)) {
           output.writeBytes(2, private_);
         }
-        getUnknownFields().writeTo(output);
+        output.writeRawBytes(unknownFields);
       }
 
       private int memoizedSerializedSize = -1;
@@ -9626,7 +8128,7 @@ public final class StorageProtos {
           size += com.google.protobuf.CodedOutputStream
             .computeBytesSize(2, private_);
         }
-        size += getUnknownFields().getSerializedSize();
+        size += unknownFields.size();
         memoizedSerializedSize = size;
         return size;
       }
@@ -9698,43 +8200,21 @@ public final class StorageProtos {
       }
       public Builder toBuilder() { return newBuilder(this); }
 
-      @java.lang.Override
-      protected Builder newBuilderForType(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        Builder builder = new Builder(parent);
-        return builder;
-      }
       /**
        * Protobuf type {@code textsecure.SenderKeyStateStructure.SenderSigningKey}
        */
       public static final class Builder extends
-          com.google.protobuf.GeneratedMessage.Builder<Builder>
-         implements org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKeyOrBuilder {
-        public static final com.google.protobuf.Descriptors.Descriptor
-            getDescriptor() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_descriptor;
-        }
-
-        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-            internalGetFieldAccessorTable() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_fieldAccessorTable
-              .ensureFieldAccessorsInitialized(
-                  org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.Builder.class);
-        }
-
+          com.google.protobuf.GeneratedMessageLite.Builder<
+            org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey, Builder>
+          implements
+          // @@protoc_insertion_point(builder_implements:textsecure.SenderKeyStateStructure.SenderSigningKey)
+          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKeyOrBuilder {
         // Construct using org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.newBuilder()
         private Builder() {
           maybeForceBuilderInitialization();
         }
 
-        private Builder(
-            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-          super(parent);
-          maybeForceBuilderInitialization();
-        }
         private void maybeForceBuilderInitialization() {
-          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          }
         }
         private static Builder create() {
           return new Builder();
@@ -9753,11 +8233,6 @@ public final class StorageProtos {
           return create().mergeFrom(buildPartial());
         }
 
-        public com.google.protobuf.Descriptors.Descriptor
-            getDescriptorForType() {
-          return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_descriptor;
-        }
-
         public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey getDefaultInstanceForType() {
           return org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
         }
@@ -9783,19 +8258,9 @@ public final class StorageProtos {
           }
           result.private_ = private_;
           result.bitField0_ = to_bitField0_;
-          onBuilt();
           return result;
         }
 
-        public Builder mergeFrom(com.google.protobuf.Message other) {
-          if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey) {
-            return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey)other);
-          } else {
-            super.mergeFrom(other);
-            return this;
-          }
-        }
-
         public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey other) {
           if (other == org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance()) return this;
           if (other.hasPublic()) {
@@ -9804,7 +8269,8 @@ public final class StorageProtos {
           if (other.hasPrivate()) {
             setPrivate(other.getPrivate());
           }
-          this.mergeUnknownFields(other.getUnknownFields());
+          setUnknownFields(
+              getUnknownFields().concat(other.unknownFields));
           return this;
         }
 
@@ -9831,7 +8297,6 @@ public final class StorageProtos {
         }
         private int bitField0_;
 
-        // optional bytes public = 1;
         private com.google.protobuf.ByteString public_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes public = 1;</code>
@@ -9854,7 +8319,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000001;
           public_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -9863,11 +8328,10 @@ public final class StorageProtos {
         public Builder clearPublic() {
           bitField0_ = (bitField0_ & ~0x00000001);
           public_ = getDefaultInstance().getPublic();
-          onChanged();
+          
           return this;
         }
 
-        // optional bytes private = 2;
         private com.google.protobuf.ByteString private_ = com.google.protobuf.ByteString.EMPTY;
         /**
          * <code>optional bytes private = 2;</code>
@@ -9890,7 +8354,7 @@ public final class StorageProtos {
   }
   bitField0_ |= 0x00000002;
           private_ = value;
-          onChanged();
+          
           return this;
         }
         /**
@@ -9899,7 +8363,7 @@ public final class StorageProtos {
         public Builder clearPrivate() {
           bitField0_ = (bitField0_ & ~0x00000002);
           private_ = getDefaultInstance().getPrivate();
-          onChanged();
+          
           return this;
         }
 
@@ -9915,7 +8379,6 @@ public final class StorageProtos {
     }
 
     private int bitField0_;
-    // optional uint32 senderKeyId = 1;
     public static final int SENDERKEYID_FIELD_NUMBER = 1;
     private int senderKeyId_;
     /**
@@ -9931,7 +8394,6 @@ public final class StorageProtos {
       return senderKeyId_;
     }
 
-    // optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;
     public static final int SENDERCHAINKEY_FIELD_NUMBER = 2;
     private org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey senderChainKey_;
     /**
@@ -9946,14 +8408,7 @@ public final class StorageProtos {
     public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey getSenderChainKey() {
       return senderChainKey_;
     }
-    /**
-     * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
-     */
-    public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder getSenderChainKeyOrBuilder() {
-      return senderChainKey_;
-    }
 
-    // optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;
     public static final int SENDERSIGNINGKEY_FIELD_NUMBER = 3;
     private org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey senderSigningKey_;
     /**
@@ -9968,14 +8423,7 @@ public final class StorageProtos {
     public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey getSenderSigningKey() {
       return senderSigningKey_;
     }
-    /**
-     * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
-     */
-    public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKeyOrBuilder getSenderSigningKeyOrBuilder() {
-      return senderSigningKey_;
-    }
 
-    // repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;
     public static final int SENDERMESSAGEKEYS_FIELD_NUMBER = 4;
     private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey> senderMessageKeys_;
     /**
@@ -10020,7 +8468,8 @@ public final class StorageProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -10041,7 +8490,7 @@ public final class StorageProtos {
       for (int i = 0; i < senderMessageKeys_.size(); i++) {
         output.writeMessage(4, senderMessageKeys_.get(i));
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -10066,7 +8515,7 @@ public final class StorageProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeMessageSize(4, senderMessageKeys_.get(i));
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -10138,46 +8587,21 @@ public final class StorageProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.SenderKeyStateStructure}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructureOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.SenderKeyStateStructure)
+        org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructureOrBuilder {
       // Construct using org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          getSenderChainKeyFieldBuilder();
-          getSenderSigningKeyFieldBuilder();
-          getSenderMessageKeysFieldBuilder();
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -10187,24 +8611,12 @@ public final class StorageProtos {
         super.clear();
         senderKeyId_ = 0;
         bitField0_ = (bitField0_ & ~0x00000001);
-        if (senderChainKeyBuilder_ == null) {
-          senderChainKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.getDefaultInstance();
-        } else {
-          senderChainKeyBuilder_.clear();
-        }
+        senderChainKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.getDefaultInstance();
         bitField0_ = (bitField0_ & ~0x00000002);
-        if (senderSigningKeyBuilder_ == null) {
-          senderSigningKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
-        } else {
-          senderSigningKeyBuilder_.clear();
-        }
+        senderSigningKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
         bitField0_ = (bitField0_ & ~0x00000004);
-        if (senderMessageKeysBuilder_ == null) {
-          senderMessageKeys_ = java.util.Collections.emptyList();
-          bitField0_ = (bitField0_ & ~0x00000008);
-        } else {
-          senderMessageKeysBuilder_.clear();
-        }
+        senderMessageKeys_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000008);
         return this;
       }
 
@@ -10212,11 +8624,6 @@ public final class StorageProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyStateStructure_descriptor;
-      }
-
       public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure getDefaultInstanceForType() {
         return org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.getDefaultInstance();
       }
@@ -10240,42 +8647,20 @@ public final class StorageProtos {
         if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
           to_bitField0_ |= 0x00000002;
         }
-        if (senderChainKeyBuilder_ == null) {
-          result.senderChainKey_ = senderChainKey_;
-        } else {
-          result.senderChainKey_ = senderChainKeyBuilder_.build();
-        }
+        result.senderChainKey_ = senderChainKey_;
         if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
           to_bitField0_ |= 0x00000004;
         }
-        if (senderSigningKeyBuilder_ == null) {
-          result.senderSigningKey_ = senderSigningKey_;
-        } else {
-          result.senderSigningKey_ = senderSigningKeyBuilder_.build();
-        }
-        if (senderMessageKeysBuilder_ == null) {
-          if (((bitField0_ & 0x00000008) == 0x00000008)) {
-            senderMessageKeys_ = java.util.Collections.unmodifiableList(senderMessageKeys_);
-            bitField0_ = (bitField0_ & ~0x00000008);
-          }
-          result.senderMessageKeys_ = senderMessageKeys_;
-        } else {
-          result.senderMessageKeys_ = senderMessageKeysBuilder_.build();
+        result.senderSigningKey_ = senderSigningKey_;
+        if (((bitField0_ & 0x00000008) == 0x00000008)) {
+          senderMessageKeys_ = java.util.Collections.unmodifiableList(senderMessageKeys_);
+          bitField0_ = (bitField0_ & ~0x00000008);
         }
+        result.senderMessageKeys_ = senderMessageKeys_;
         result.bitField0_ = to_bitField0_;
-        onBuilt();
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure) {
-          return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure other) {
         if (other == org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.getDefaultInstance()) return this;
         if (other.hasSenderKeyId()) {
@@ -10287,33 +8672,18 @@ public final class StorageProtos {
         if (other.hasSenderSigningKey()) {
           mergeSenderSigningKey(other.getSenderSigningKey());
         }
-        if (senderMessageKeysBuilder_ == null) {
-          if (!other.senderMessageKeys_.isEmpty()) {
-            if (senderMessageKeys_.isEmpty()) {
-              senderMessageKeys_ = other.senderMessageKeys_;
-              bitField0_ = (bitField0_ & ~0x00000008);
-            } else {
-              ensureSenderMessageKeysIsMutable();
-              senderMessageKeys_.addAll(other.senderMessageKeys_);
-            }
-            onChanged();
-          }
-        } else {
-          if (!other.senderMessageKeys_.isEmpty()) {
-            if (senderMessageKeysBuilder_.isEmpty()) {
-              senderMessageKeysBuilder_.dispose();
-              senderMessageKeysBuilder_ = null;
-              senderMessageKeys_ = other.senderMessageKeys_;
-              bitField0_ = (bitField0_ & ~0x00000008);
-              senderMessageKeysBuilder_ = 
-                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
-                   getSenderMessageKeysFieldBuilder() : null;
-            } else {
-              senderMessageKeysBuilder_.addAllMessages(other.senderMessageKeys_);
-            }
+        if (!other.senderMessageKeys_.isEmpty()) {
+          if (senderMessageKeys_.isEmpty()) {
+            senderMessageKeys_ = other.senderMessageKeys_;
+            bitField0_ = (bitField0_ & ~0x00000008);
+          } else {
+            ensureSenderMessageKeysIsMutable();
+            senderMessageKeys_.addAll(other.senderMessageKeys_);
           }
+          
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -10340,7 +8710,6 @@ public final class StorageProtos {
       }
       private int bitField0_;
 
-      // optional uint32 senderKeyId = 1;
       private int senderKeyId_ ;
       /**
        * <code>optional uint32 senderKeyId = 1;</code>
@@ -10360,7 +8729,7 @@ public final class StorageProtos {
       public Builder setSenderKeyId(int value) {
         bitField0_ |= 0x00000001;
         senderKeyId_ = value;
-        onChanged();
+        
         return this;
       }
       /**
@@ -10369,14 +8738,11 @@ public final class StorageProtos {
       public Builder clearSenderKeyId() {
         bitField0_ = (bitField0_ & ~0x00000001);
         senderKeyId_ = 0;
-        onChanged();
+        
         return this;
       }
 
-      // optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;
       private org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey senderChainKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.getDefaultInstance();
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder> senderChainKeyBuilder_;
       /**
        * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
        */
@@ -10387,25 +8753,17 @@ public final class StorageProtos {
        * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey getSenderChainKey() {
-        if (senderChainKeyBuilder_ == null) {
-          return senderChainKey_;
-        } else {
-          return senderChainKeyBuilder_.getMessage();
-        }
+        return senderChainKey_;
       }
       /**
        * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
        */
       public Builder setSenderChainKey(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey value) {
-        if (senderChainKeyBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          senderChainKey_ = value;
-          onChanged();
-        } else {
-          senderChainKeyBuilder_.setMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        senderChainKey_ = value;
+
         bitField0_ |= 0x00000002;
         return this;
       }
@@ -10414,12 +8772,8 @@ public final class StorageProtos {
        */
       public Builder setSenderChainKey(
           org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder builderForValue) {
-        if (senderChainKeyBuilder_ == null) {
-          senderChainKey_ = builderForValue.build();
-          onChanged();
-        } else {
-          senderChainKeyBuilder_.setMessage(builderForValue.build());
-        }
+        senderChainKey_ = builderForValue.build();
+
         bitField0_ |= 0x00000002;
         return this;
       }
@@ -10427,18 +8781,14 @@ public final class StorageProtos {
        * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
        */
       public Builder mergeSenderChainKey(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey value) {
-        if (senderChainKeyBuilder_ == null) {
-          if (((bitField0_ & 0x00000002) == 0x00000002) &&
-              senderChainKey_ != org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.getDefaultInstance()) {
-            senderChainKey_ =
-              org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.newBuilder(senderChainKey_).mergeFrom(value).buildPartial();
-          } else {
-            senderChainKey_ = value;
-          }
-          onChanged();
+        if (((bitField0_ & 0x00000002) == 0x00000002) &&
+            senderChainKey_ != org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.getDefaultInstance()) {
+          senderChainKey_ =
+            org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.newBuilder(senderChainKey_).mergeFrom(value).buildPartial();
         } else {
-          senderChainKeyBuilder_.mergeFrom(value);
+          senderChainKey_ = value;
         }
+
         bitField0_ |= 0x00000002;
         return this;
       }
@@ -10446,54 +8796,13 @@ public final class StorageProtos {
        * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
        */
       public Builder clearSenderChainKey() {
-        if (senderChainKeyBuilder_ == null) {
-          senderChainKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.getDefaultInstance();
-          onChanged();
-        } else {
-          senderChainKeyBuilder_.clear();
-        }
+        senderChainKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.getDefaultInstance();
+
         bitField0_ = (bitField0_ & ~0x00000002);
         return this;
       }
-      /**
-       * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder getSenderChainKeyBuilder() {
-        bitField0_ |= 0x00000002;
-        onChanged();
-        return getSenderChainKeyFieldBuilder().getBuilder();
-      }
-      /**
-       * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder getSenderChainKeyOrBuilder() {
-        if (senderChainKeyBuilder_ != null) {
-          return senderChainKeyBuilder_.getMessageOrBuilder();
-        } else {
-          return senderChainKey_;
-        }
-      }
-      /**
-       * <code>optional .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKey = 2;</code>
-       */
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder> 
-          getSenderChainKeyFieldBuilder() {
-        if (senderChainKeyBuilder_ == null) {
-          senderChainKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder>(
-                  senderChainKey_,
-                  getParentForChildren(),
-                  isClean());
-          senderChainKey_ = null;
-        }
-        return senderChainKeyBuilder_;
-      }
 
-      // optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;
       private org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey senderSigningKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKeyOrBuilder> senderSigningKeyBuilder_;
       /**
        * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
        */
@@ -10504,25 +8813,17 @@ public final class StorageProtos {
        * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey getSenderSigningKey() {
-        if (senderSigningKeyBuilder_ == null) {
-          return senderSigningKey_;
-        } else {
-          return senderSigningKeyBuilder_.getMessage();
-        }
+        return senderSigningKey_;
       }
       /**
        * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
        */
       public Builder setSenderSigningKey(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey value) {
-        if (senderSigningKeyBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          senderSigningKey_ = value;
-          onChanged();
-        } else {
-          senderSigningKeyBuilder_.setMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        senderSigningKey_ = value;
+
         bitField0_ |= 0x00000004;
         return this;
       }
@@ -10531,12 +8832,8 @@ public final class StorageProtos {
        */
       public Builder setSenderSigningKey(
           org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.Builder builderForValue) {
-        if (senderSigningKeyBuilder_ == null) {
-          senderSigningKey_ = builderForValue.build();
-          onChanged();
-        } else {
-          senderSigningKeyBuilder_.setMessage(builderForValue.build());
-        }
+        senderSigningKey_ = builderForValue.build();
+
         bitField0_ |= 0x00000004;
         return this;
       }
@@ -10544,18 +8841,14 @@ public final class StorageProtos {
        * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
        */
       public Builder mergeSenderSigningKey(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey value) {
-        if (senderSigningKeyBuilder_ == null) {
-          if (((bitField0_ & 0x00000004) == 0x00000004) &&
-              senderSigningKey_ != org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance()) {
-            senderSigningKey_ =
-              org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.newBuilder(senderSigningKey_).mergeFrom(value).buildPartial();
-          } else {
-            senderSigningKey_ = value;
-          }
-          onChanged();
+        if (((bitField0_ & 0x00000004) == 0x00000004) &&
+            senderSigningKey_ != org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance()) {
+          senderSigningKey_ =
+            org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.newBuilder(senderSigningKey_).mergeFrom(value).buildPartial();
         } else {
-          senderSigningKeyBuilder_.mergeFrom(value);
+          senderSigningKey_ = value;
         }
+
         bitField0_ |= 0x00000004;
         return this;
       }
@@ -10563,51 +8856,12 @@ public final class StorageProtos {
        * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
        */
       public Builder clearSenderSigningKey() {
-        if (senderSigningKeyBuilder_ == null) {
-          senderSigningKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
-          onChanged();
-        } else {
-          senderSigningKeyBuilder_.clear();
-        }
+        senderSigningKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
+
         bitField0_ = (bitField0_ & ~0x00000004);
         return this;
       }
-      /**
-       * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.Builder getSenderSigningKeyBuilder() {
-        bitField0_ |= 0x00000004;
-        onChanged();
-        return getSenderSigningKeyFieldBuilder().getBuilder();
-      }
-      /**
-       * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKeyOrBuilder getSenderSigningKeyOrBuilder() {
-        if (senderSigningKeyBuilder_ != null) {
-          return senderSigningKeyBuilder_.getMessageOrBuilder();
-        } else {
-          return senderSigningKey_;
-        }
-      }
-      /**
-       * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
-       */
-      private com.google.protobuf.SingleFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKeyOrBuilder> 
-          getSenderSigningKeyFieldBuilder() {
-        if (senderSigningKeyBuilder_ == null) {
-          senderSigningKeyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKeyOrBuilder>(
-                  senderSigningKey_,
-                  getParentForChildren(),
-                  isClean());
-          senderSigningKey_ = null;
-        }
-        return senderSigningKeyBuilder_;
-      }
 
-      // repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;
       private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey> senderMessageKeys_ =
         java.util.Collections.emptyList();
       private void ensureSenderMessageKeysIsMutable() {
@@ -10617,54 +8871,35 @@ public final class StorageProtos {
          }
       }
 
-      private com.google.protobuf.RepeatedFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKeyOrBuilder> senderMessageKeysBuilder_;
-
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
        */
       public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey> getSenderMessageKeysList() {
-        if (senderMessageKeysBuilder_ == null) {
-          return java.util.Collections.unmodifiableList(senderMessageKeys_);
-        } else {
-          return senderMessageKeysBuilder_.getMessageList();
-        }
+        return java.util.Collections.unmodifiableList(senderMessageKeys_);
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
        */
       public int getSenderMessageKeysCount() {
-        if (senderMessageKeysBuilder_ == null) {
-          return senderMessageKeys_.size();
-        } else {
-          return senderMessageKeysBuilder_.getCount();
-        }
+        return senderMessageKeys_.size();
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey getSenderMessageKeys(int index) {
-        if (senderMessageKeysBuilder_ == null) {
-          return senderMessageKeys_.get(index);
-        } else {
-          return senderMessageKeysBuilder_.getMessage(index);
-        }
+        return senderMessageKeys_.get(index);
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
        */
       public Builder setSenderMessageKeys(
           int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey value) {
-        if (senderMessageKeysBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensureSenderMessageKeysIsMutable();
-          senderMessageKeys_.set(index, value);
-          onChanged();
-        } else {
-          senderMessageKeysBuilder_.setMessage(index, value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensureSenderMessageKeysIsMutable();
+        senderMessageKeys_.set(index, value);
+
         return this;
       }
       /**
@@ -10672,29 +8907,21 @@ public final class StorageProtos {
        */
       public Builder setSenderMessageKeys(
           int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder builderForValue) {
-        if (senderMessageKeysBuilder_ == null) {
-          ensureSenderMessageKeysIsMutable();
-          senderMessageKeys_.set(index, builderForValue.build());
-          onChanged();
-        } else {
-          senderMessageKeysBuilder_.setMessage(index, builderForValue.build());
-        }
+        ensureSenderMessageKeysIsMutable();
+        senderMessageKeys_.set(index, builderForValue.build());
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
        */
       public Builder addSenderMessageKeys(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey value) {
-        if (senderMessageKeysBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensureSenderMessageKeysIsMutable();
-          senderMessageKeys_.add(value);
-          onChanged();
-        } else {
-          senderMessageKeysBuilder_.addMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensureSenderMessageKeysIsMutable();
+        senderMessageKeys_.add(value);
+
         return this;
       }
       /**
@@ -10702,16 +8929,12 @@ public final class StorageProtos {
        */
       public Builder addSenderMessageKeys(
           int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey value) {
-        if (senderMessageKeysBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensureSenderMessageKeysIsMutable();
-          senderMessageKeys_.add(index, value);
-          onChanged();
-        } else {
-          senderMessageKeysBuilder_.addMessage(index, value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensureSenderMessageKeysIsMutable();
+        senderMessageKeys_.add(index, value);
+
         return this;
       }
       /**
@@ -10719,13 +8942,9 @@ public final class StorageProtos {
        */
       public Builder addSenderMessageKeys(
           org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder builderForValue) {
-        if (senderMessageKeysBuilder_ == null) {
-          ensureSenderMessageKeysIsMutable();
-          senderMessageKeys_.add(builderForValue.build());
-          onChanged();
-        } else {
-          senderMessageKeysBuilder_.addMessage(builderForValue.build());
-        }
+        ensureSenderMessageKeysIsMutable();
+        senderMessageKeys_.add(builderForValue.build());
+
         return this;
       }
       /**
@@ -10733,13 +8952,9 @@ public final class StorageProtos {
        */
       public Builder addSenderMessageKeys(
           int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder builderForValue) {
-        if (senderMessageKeysBuilder_ == null) {
-          ensureSenderMessageKeysIsMutable();
-          senderMessageKeys_.add(index, builderForValue.build());
-          onChanged();
-        } else {
-          senderMessageKeysBuilder_.addMessage(index, builderForValue.build());
-        }
+        ensureSenderMessageKeysIsMutable();
+        senderMessageKeys_.add(index, builderForValue.build());
+
         return this;
       }
       /**
@@ -10747,105 +8962,30 @@ public final class StorageProtos {
        */
       public Builder addAllSenderMessageKeys(
           java.lang.Iterable<? extends org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey> values) {
-        if (senderMessageKeysBuilder_ == null) {
-          ensureSenderMessageKeysIsMutable();
-          super.addAll(values, senderMessageKeys_);
-          onChanged();
-        } else {
-          senderMessageKeysBuilder_.addAllMessages(values);
-        }
+        ensureSenderMessageKeysIsMutable();
+        com.google.protobuf.AbstractMessageLite.Builder.addAll(
+            values, senderMessageKeys_);
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
        */
       public Builder clearSenderMessageKeys() {
-        if (senderMessageKeysBuilder_ == null) {
-          senderMessageKeys_ = java.util.Collections.emptyList();
-          bitField0_ = (bitField0_ & ~0x00000008);
-          onChanged();
-        } else {
-          senderMessageKeysBuilder_.clear();
-        }
+        senderMessageKeys_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000008);
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
        */
       public Builder removeSenderMessageKeys(int index) {
-        if (senderMessageKeysBuilder_ == null) {
-          ensureSenderMessageKeysIsMutable();
-          senderMessageKeys_.remove(index);
-          onChanged();
-        } else {
-          senderMessageKeysBuilder_.remove(index);
-        }
+        ensureSenderMessageKeysIsMutable();
+        senderMessageKeys_.remove(index);
+
         return this;
       }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder getSenderMessageKeysBuilder(
-          int index) {
-        return getSenderMessageKeysFieldBuilder().getBuilder(index);
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKeyOrBuilder getSenderMessageKeysOrBuilder(
-          int index) {
-        if (senderMessageKeysBuilder_ == null) {
-          return senderMessageKeys_.get(index);  } else {
-          return senderMessageKeysBuilder_.getMessageOrBuilder(index);
-        }
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
-       */
-      public java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKeyOrBuilder> 
-           getSenderMessageKeysOrBuilderList() {
-        if (senderMessageKeysBuilder_ != null) {
-          return senderMessageKeysBuilder_.getMessageOrBuilderList();
-        } else {
-          return java.util.Collections.unmodifiableList(senderMessageKeys_);
-        }
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder addSenderMessageKeysBuilder() {
-        return getSenderMessageKeysFieldBuilder().addBuilder(
-            org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.getDefaultInstance());
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder addSenderMessageKeysBuilder(
-          int index) {
-        return getSenderMessageKeysFieldBuilder().addBuilder(
-            index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.getDefaultInstance());
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure.SenderMessageKey senderMessageKeys = 4;</code>
-       */
-      public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder> 
-           getSenderMessageKeysBuilderList() {
-        return getSenderMessageKeysFieldBuilder().getBuilderList();
-      }
-      private com.google.protobuf.RepeatedFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKeyOrBuilder> 
-          getSenderMessageKeysFieldBuilder() {
-        if (senderMessageKeysBuilder_ == null) {
-          senderMessageKeysBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKey.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderMessageKeyOrBuilder>(
-                  senderMessageKeys_,
-                  ((bitField0_ & 0x00000008) == 0x00000008),
-                  getParentForChildren(),
-                  isClean());
-          senderMessageKeys_ = null;
-        }
-        return senderMessageKeysBuilder_;
-      }
 
       // @@protoc_insertion_point(builder_scope:textsecure.SenderKeyStateStructure)
     }
@@ -10858,10 +8998,10 @@ public final class StorageProtos {
     // @@protoc_insertion_point(class_scope:textsecure.SenderKeyStateStructure)
   }
 
-  public interface SenderKeyRecordStructureOrBuilder
-      extends com.google.protobuf.MessageOrBuilder {
+  public interface SenderKeyRecordStructureOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.SenderKeyRecordStructure)
+      com.google.protobuf.MessageLiteOrBuilder {
 
-    // repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;
     /**
      * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
      */
@@ -10875,29 +9015,20 @@ public final class StorageProtos {
      * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
      */
     int getSenderKeyStatesCount();
-    /**
-     * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
-     */
-    java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructureOrBuilder> 
-        getSenderKeyStatesOrBuilderList();
-    /**
-     * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
-     */
-    org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructureOrBuilder getSenderKeyStatesOrBuilder(
-        int index);
   }
   /**
    * Protobuf type {@code textsecure.SenderKeyRecordStructure}
    */
   public static final class SenderKeyRecordStructure extends
-      com.google.protobuf.GeneratedMessage
-      implements SenderKeyRecordStructureOrBuilder {
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.SenderKeyRecordStructure)
+      SenderKeyRecordStructureOrBuilder {
     // Use SenderKeyRecordStructure.newBuilder() to construct.
-    private SenderKeyRecordStructure(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
+    private SenderKeyRecordStructure(com.google.protobuf.GeneratedMessageLite.Builder builder) {
       super(builder);
       this.unknownFields = builder.getUnknownFields();
     }
-    private SenderKeyRecordStructure(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }
+    private SenderKeyRecordStructure(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
 
     private static final SenderKeyRecordStructure defaultInstance;
     public static SenderKeyRecordStructure getDefaultInstance() {
@@ -10908,20 +9039,18 @@ public final class StorageProtos {
       return defaultInstance;
     }
 
-    private final com.google.protobuf.UnknownFieldSet unknownFields;
-    @java.lang.Override
-    public final com.google.protobuf.UnknownFieldSet
-        getUnknownFields() {
-      return this.unknownFields;
-    }
+    private final com.google.protobuf.ByteString unknownFields;
     private SenderKeyRecordStructure(
         com.google.protobuf.CodedInputStream input,
         com.google.protobuf.ExtensionRegistryLite extensionRegistry)
         throws com.google.protobuf.InvalidProtocolBufferException {
       initFields();
       int mutable_bitField0_ = 0;
-      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
-          com.google.protobuf.UnknownFieldSet.newBuilder();
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
       try {
         boolean done = false;
         while (!done) {
@@ -10931,7 +9060,7 @@ public final class StorageProtos {
               done = true;
               break;
             default: {
-              if (!parseUnknownField(input, unknownFields,
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
                                      extensionRegistry, tag)) {
                 done = true;
               }
@@ -10956,22 +9085,16 @@ public final class StorageProtos {
         if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
           senderKeyStates_ = java.util.Collections.unmodifiableList(senderKeyStates_);
         }
-        this.unknownFields = unknownFields.build();
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
         makeExtensionsImmutable();
       }
     }
-    public static final com.google.protobuf.Descriptors.Descriptor
-        getDescriptor() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyRecordStructure_descriptor;
-    }
-
-    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-        internalGetFieldAccessorTable() {
-      return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyRecordStructure_fieldAccessorTable
-          .ensureFieldAccessorsInitialized(
-              org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure.Builder.class);
-    }
-
     public static com.google.protobuf.Parser<SenderKeyRecordStructure> PARSER =
         new com.google.protobuf.AbstractParser<SenderKeyRecordStructure>() {
       public SenderKeyRecordStructure parsePartialFrom(
@@ -10987,7 +9110,6 @@ public final class StorageProtos {
       return PARSER;
     }
 
-    // repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;
     public static final int SENDERKEYSTATES_FIELD_NUMBER = 1;
     private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure> senderKeyStates_;
     /**
@@ -11029,7 +9151,8 @@ public final class StorageProtos {
     private byte memoizedIsInitialized = -1;
     public final boolean isInitialized() {
       byte isInitialized = memoizedIsInitialized;
-      if (isInitialized != -1) return isInitialized == 1;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
 
       memoizedIsInitialized = 1;
       return true;
@@ -11041,7 +9164,7 @@ public final class StorageProtos {
       for (int i = 0; i < senderKeyStates_.size(); i++) {
         output.writeMessage(1, senderKeyStates_.get(i));
       }
-      getUnknownFields().writeTo(output);
+      output.writeRawBytes(unknownFields);
     }
 
     private int memoizedSerializedSize = -1;
@@ -11054,7 +9177,7 @@ public final class StorageProtos {
         size += com.google.protobuf.CodedOutputStream
           .computeMessageSize(1, senderKeyStates_.get(i));
       }
-      size += getUnknownFields().getSerializedSize();
+      size += unknownFields.size();
       memoizedSerializedSize = size;
       return size;
     }
@@ -11126,44 +9249,21 @@ public final class StorageProtos {
     }
     public Builder toBuilder() { return newBuilder(this); }
 
-    @java.lang.Override
-    protected Builder newBuilderForType(
-        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-      Builder builder = new Builder(parent);
-      return builder;
-    }
     /**
      * Protobuf type {@code textsecure.SenderKeyRecordStructure}
      */
     public static final class Builder extends
-        com.google.protobuf.GeneratedMessage.Builder<Builder>
-       implements org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructureOrBuilder {
-      public static final com.google.protobuf.Descriptors.Descriptor
-          getDescriptor() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyRecordStructure_descriptor;
-      }
-
-      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
-          internalGetFieldAccessorTable() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyRecordStructure_fieldAccessorTable
-            .ensureFieldAccessorsInitialized(
-                org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure.class, org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure.Builder.class);
-      }
-
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.SenderKeyRecordStructure)
+        org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructureOrBuilder {
       // Construct using org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure.newBuilder()
       private Builder() {
         maybeForceBuilderInitialization();
       }
 
-      private Builder(
-          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
-        super(parent);
-        maybeForceBuilderInitialization();
-      }
       private void maybeForceBuilderInitialization() {
-        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
-          getSenderKeyStatesFieldBuilder();
-        }
       }
       private static Builder create() {
         return new Builder();
@@ -11171,12 +9271,8 @@ public final class StorageProtos {
 
       public Builder clear() {
         super.clear();
-        if (senderKeyStatesBuilder_ == null) {
-          senderKeyStates_ = java.util.Collections.emptyList();
-          bitField0_ = (bitField0_ & ~0x00000001);
-        } else {
-          senderKeyStatesBuilder_.clear();
-        }
+        senderKeyStates_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000001);
         return this;
       }
 
@@ -11184,11 +9280,6 @@ public final class StorageProtos {
         return create().mergeFrom(buildPartial());
       }
 
-      public com.google.protobuf.Descriptors.Descriptor
-          getDescriptorForType() {
-        return org.whispersystems.libsignal.state.StorageProtos.internal_static_textsecure_SenderKeyRecordStructure_descriptor;
-      }
-
       public org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure getDefaultInstanceForType() {
         return org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure.getDefaultInstance();
       }
@@ -11204,57 +9295,28 @@ public final class StorageProtos {
       public org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure buildPartial() {
         org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure result = new org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure(this);
         int from_bitField0_ = bitField0_;
-        if (senderKeyStatesBuilder_ == null) {
-          if (((bitField0_ & 0x00000001) == 0x00000001)) {
-            senderKeyStates_ = java.util.Collections.unmodifiableList(senderKeyStates_);
-            bitField0_ = (bitField0_ & ~0x00000001);
-          }
-          result.senderKeyStates_ = senderKeyStates_;
-        } else {
-          result.senderKeyStates_ = senderKeyStatesBuilder_.build();
+        if (((bitField0_ & 0x00000001) == 0x00000001)) {
+          senderKeyStates_ = java.util.Collections.unmodifiableList(senderKeyStates_);
+          bitField0_ = (bitField0_ & ~0x00000001);
         }
-        onBuilt();
+        result.senderKeyStates_ = senderKeyStates_;
         return result;
       }
 
-      public Builder mergeFrom(com.google.protobuf.Message other) {
-        if (other instanceof org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure) {
-          return mergeFrom((org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure)other);
-        } else {
-          super.mergeFrom(other);
-          return this;
-        }
-      }
-
       public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure other) {
         if (other == org.whispersystems.libsignal.state.StorageProtos.SenderKeyRecordStructure.getDefaultInstance()) return this;
-        if (senderKeyStatesBuilder_ == null) {
-          if (!other.senderKeyStates_.isEmpty()) {
-            if (senderKeyStates_.isEmpty()) {
-              senderKeyStates_ = other.senderKeyStates_;
-              bitField0_ = (bitField0_ & ~0x00000001);
-            } else {
-              ensureSenderKeyStatesIsMutable();
-              senderKeyStates_.addAll(other.senderKeyStates_);
-            }
-            onChanged();
-          }
-        } else {
-          if (!other.senderKeyStates_.isEmpty()) {
-            if (senderKeyStatesBuilder_.isEmpty()) {
-              senderKeyStatesBuilder_.dispose();
-              senderKeyStatesBuilder_ = null;
-              senderKeyStates_ = other.senderKeyStates_;
-              bitField0_ = (bitField0_ & ~0x00000001);
-              senderKeyStatesBuilder_ = 
-                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
-                   getSenderKeyStatesFieldBuilder() : null;
-            } else {
-              senderKeyStatesBuilder_.addAllMessages(other.senderKeyStates_);
-            }
+        if (!other.senderKeyStates_.isEmpty()) {
+          if (senderKeyStates_.isEmpty()) {
+            senderKeyStates_ = other.senderKeyStates_;
+            bitField0_ = (bitField0_ & ~0x00000001);
+          } else {
+            ensureSenderKeyStatesIsMutable();
+            senderKeyStates_.addAll(other.senderKeyStates_);
           }
+          
         }
-        this.mergeUnknownFields(other.getUnknownFields());
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
         return this;
       }
 
@@ -11281,7 +9343,6 @@ public final class StorageProtos {
       }
       private int bitField0_;
 
-      // repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;
       private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure> senderKeyStates_ =
         java.util.Collections.emptyList();
       private void ensureSenderKeyStatesIsMutable() {
@@ -11291,54 +9352,35 @@ public final class StorageProtos {
          }
       }
 
-      private com.google.protobuf.RepeatedFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructureOrBuilder> senderKeyStatesBuilder_;
-
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
        */
       public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure> getSenderKeyStatesList() {
-        if (senderKeyStatesBuilder_ == null) {
-          return java.util.Collections.unmodifiableList(senderKeyStates_);
-        } else {
-          return senderKeyStatesBuilder_.getMessageList();
-        }
+        return java.util.Collections.unmodifiableList(senderKeyStates_);
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
        */
       public int getSenderKeyStatesCount() {
-        if (senderKeyStatesBuilder_ == null) {
-          return senderKeyStates_.size();
-        } else {
-          return senderKeyStatesBuilder_.getCount();
-        }
+        return senderKeyStates_.size();
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
        */
       public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure getSenderKeyStates(int index) {
-        if (senderKeyStatesBuilder_ == null) {
-          return senderKeyStates_.get(index);
-        } else {
-          return senderKeyStatesBuilder_.getMessage(index);
-        }
+        return senderKeyStates_.get(index);
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
        */
       public Builder setSenderKeyStates(
           int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure value) {
-        if (senderKeyStatesBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensureSenderKeyStatesIsMutable();
-          senderKeyStates_.set(index, value);
-          onChanged();
-        } else {
-          senderKeyStatesBuilder_.setMessage(index, value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.set(index, value);
+
         return this;
       }
       /**
@@ -11346,29 +9388,21 @@ public final class StorageProtos {
        */
       public Builder setSenderKeyStates(
           int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder builderForValue) {
-        if (senderKeyStatesBuilder_ == null) {
-          ensureSenderKeyStatesIsMutable();
-          senderKeyStates_.set(index, builderForValue.build());
-          onChanged();
-        } else {
-          senderKeyStatesBuilder_.setMessage(index, builderForValue.build());
-        }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.set(index, builderForValue.build());
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
        */
       public Builder addSenderKeyStates(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure value) {
-        if (senderKeyStatesBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensureSenderKeyStatesIsMutable();
-          senderKeyStates_.add(value);
-          onChanged();
-        } else {
-          senderKeyStatesBuilder_.addMessage(value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.add(value);
+
         return this;
       }
       /**
@@ -11376,16 +9410,12 @@ public final class StorageProtos {
        */
       public Builder addSenderKeyStates(
           int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure value) {
-        if (senderKeyStatesBuilder_ == null) {
-          if (value == null) {
-            throw new NullPointerException();
-          }
-          ensureSenderKeyStatesIsMutable();
-          senderKeyStates_.add(index, value);
-          onChanged();
-        } else {
-          senderKeyStatesBuilder_.addMessage(index, value);
+        if (value == null) {
+          throw new NullPointerException();
         }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.add(index, value);
+
         return this;
       }
       /**
@@ -11393,13 +9423,9 @@ public final class StorageProtos {
        */
       public Builder addSenderKeyStates(
           org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder builderForValue) {
-        if (senderKeyStatesBuilder_ == null) {
-          ensureSenderKeyStatesIsMutable();
-          senderKeyStates_.add(builderForValue.build());
-          onChanged();
-        } else {
-          senderKeyStatesBuilder_.addMessage(builderForValue.build());
-        }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.add(builderForValue.build());
+
         return this;
       }
       /**
@@ -11407,13 +9433,9 @@ public final class StorageProtos {
        */
       public Builder addSenderKeyStates(
           int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder builderForValue) {
-        if (senderKeyStatesBuilder_ == null) {
-          ensureSenderKeyStatesIsMutable();
-          senderKeyStates_.add(index, builderForValue.build());
-          onChanged();
-        } else {
-          senderKeyStatesBuilder_.addMessage(index, builderForValue.build());
-        }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.add(index, builderForValue.build());
+
         return this;
       }
       /**
@@ -11421,105 +9443,30 @@ public final class StorageProtos {
        */
       public Builder addAllSenderKeyStates(
           java.lang.Iterable<? extends org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure> values) {
-        if (senderKeyStatesBuilder_ == null) {
-          ensureSenderKeyStatesIsMutable();
-          super.addAll(values, senderKeyStates_);
-          onChanged();
-        } else {
-          senderKeyStatesBuilder_.addAllMessages(values);
-        }
+        ensureSenderKeyStatesIsMutable();
+        com.google.protobuf.AbstractMessageLite.Builder.addAll(
+            values, senderKeyStates_);
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
        */
       public Builder clearSenderKeyStates() {
-        if (senderKeyStatesBuilder_ == null) {
-          senderKeyStates_ = java.util.Collections.emptyList();
-          bitField0_ = (bitField0_ & ~0x00000001);
-          onChanged();
-        } else {
-          senderKeyStatesBuilder_.clear();
-        }
+        senderKeyStates_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000001);
+
         return this;
       }
       /**
        * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
        */
       public Builder removeSenderKeyStates(int index) {
-        if (senderKeyStatesBuilder_ == null) {
-          ensureSenderKeyStatesIsMutable();
-          senderKeyStates_.remove(index);
-          onChanged();
-        } else {
-          senderKeyStatesBuilder_.remove(index);
-        }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.remove(index);
+
         return this;
       }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder getSenderKeyStatesBuilder(
-          int index) {
-        return getSenderKeyStatesFieldBuilder().getBuilder(index);
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructureOrBuilder getSenderKeyStatesOrBuilder(
-          int index) {
-        if (senderKeyStatesBuilder_ == null) {
-          return senderKeyStates_.get(index);  } else {
-          return senderKeyStatesBuilder_.getMessageOrBuilder(index);
-        }
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
-       */
-      public java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructureOrBuilder> 
-           getSenderKeyStatesOrBuilderList() {
-        if (senderKeyStatesBuilder_ != null) {
-          return senderKeyStatesBuilder_.getMessageOrBuilderList();
-        } else {
-          return java.util.Collections.unmodifiableList(senderKeyStates_);
-        }
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder addSenderKeyStatesBuilder() {
-        return getSenderKeyStatesFieldBuilder().addBuilder(
-            org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.getDefaultInstance());
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
-       */
-      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder addSenderKeyStatesBuilder(
-          int index) {
-        return getSenderKeyStatesFieldBuilder().addBuilder(
-            index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.getDefaultInstance());
-      }
-      /**
-       * <code>repeated .textsecure.SenderKeyStateStructure senderKeyStates = 1;</code>
-       */
-      public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder> 
-           getSenderKeyStatesBuilderList() {
-        return getSenderKeyStatesFieldBuilder().getBuilderList();
-      }
-      private com.google.protobuf.RepeatedFieldBuilder<
-          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructureOrBuilder> 
-          getSenderKeyStatesFieldBuilder() {
-        if (senderKeyStatesBuilder_ == null) {
-          senderKeyStatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
-              org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.Builder, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructureOrBuilder>(
-                  senderKeyStates_,
-                  ((bitField0_ & 0x00000001) == 0x00000001),
-                  getParentForChildren(),
-                  isClean());
-          senderKeyStates_ = null;
-        }
-        return senderKeyStatesBuilder_;
-      }
 
       // @@protoc_insertion_point(builder_scope:textsecure.SenderKeyRecordStructure)
     }
@@ -11532,247 +9479,1165 @@ public final class StorageProtos {
     // @@protoc_insertion_point(class_scope:textsecure.SenderKeyRecordStructure)
   }
 
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SessionStructure_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SessionStructure_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SessionStructure_Chain_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SessionStructure_Chain_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SessionStructure_Chain_ChainKey_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SessionStructure_Chain_ChainKey_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SessionStructure_Chain_MessageKey_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SessionStructure_Chain_MessageKey_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SessionStructure_PendingKeyExchange_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SessionStructure_PendingKeyExchange_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SessionStructure_PendingPreKey_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SessionStructure_PendingPreKey_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_RecordStructure_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_RecordStructure_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_PreKeyRecordStructure_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_PreKeyRecordStructure_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SignedPreKeyRecordStructure_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SignedPreKeyRecordStructure_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_IdentityKeyPairStructure_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_IdentityKeyPairStructure_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SenderKeyStateStructure_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SenderKeyStateStructure_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_fieldAccessorTable;
-  private static com.google.protobuf.Descriptors.Descriptor
-    internal_static_textsecure_SenderKeyRecordStructure_descriptor;
-  private static
-    com.google.protobuf.GeneratedMessage.FieldAccessorTable
-      internal_static_textsecure_SenderKeyRecordStructure_fieldAccessorTable;
-
-  public static com.google.protobuf.Descriptors.FileDescriptor
-      getDescriptor() {
-    return descriptor;
+  public interface FastRatchetSenderKeyStateStructureOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.FastRatchetSenderKeyStateStructure)
+      com.google.protobuf.MessageLiteOrBuilder {
+
+    /**
+     * <code>optional uint32 senderKeyId = 1;</code>
+     */
+    boolean hasSenderKeyId();
+    /**
+     * <code>optional uint32 senderKeyId = 1;</code>
+     */
+    int getSenderKeyId();
+
+    /**
+     * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+     */
+    java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey> 
+        getSenderChainKeysList();
+    /**
+     * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+     */
+    org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey getSenderChainKeys(int index);
+    /**
+     * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+     */
+    int getSenderChainKeysCount();
+
+    /**
+     * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+     */
+    boolean hasSenderSigningKey();
+    /**
+     * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+     */
+    org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey getSenderSigningKey();
   }
-  private static com.google.protobuf.Descriptors.FileDescriptor
-      descriptor;
-  static {
-    java.lang.String[] descriptorData = {
-      "\n\032LocalStorageProtocol.proto\022\ntextsecure" +
-      "\"\323\010\n\020SessionStructure\022\026\n\016sessionVersion\030" +
-      "\001 \001(\r\022\033\n\023localIdentityPublic\030\002 \001(\014\022\034\n\024re" +
-      "moteIdentityPublic\030\003 \001(\014\022\017\n\007rootKey\030\004 \001(" +
-      "\014\022\027\n\017previousCounter\030\005 \001(\r\0227\n\013senderChai" +
-      "n\030\006 \001(\0132\".textsecure.SessionStructure.Ch" +
-      "ain\022:\n\016receiverChains\030\007 \003(\0132\".textsecure" +
-      ".SessionStructure.Chain\022K\n\022pendingKeyExc" +
-      "hange\030\010 \001(\0132/.textsecure.SessionStructur" +
-      "e.PendingKeyExchange\022A\n\rpendingPreKey\030\t ",
-      "\001(\0132*.textsecure.SessionStructure.Pendin" +
-      "gPreKey\022\034\n\024remoteRegistrationId\030\n \001(\r\022\033\n" +
-      "\023localRegistrationId\030\013 \001(\r\022\024\n\014needsRefre" +
-      "sh\030\014 \001(\010\022\024\n\014aliceBaseKey\030\r \001(\014\032\271\002\n\005Chain" +
-      "\022\030\n\020senderRatchetKey\030\001 \001(\014\022\037\n\027senderRatc" +
-      "hetKeyPrivate\030\002 \001(\014\022=\n\010chainKey\030\003 \001(\0132+." +
-      "textsecure.SessionStructure.Chain.ChainK" +
-      "ey\022B\n\013messageKeys\030\004 \003(\0132-.textsecure.Ses" +
-      "sionStructure.Chain.MessageKey\032&\n\010ChainK" +
-      "ey\022\r\n\005index\030\001 \001(\r\022\013\n\003key\030\002 \001(\014\032J\n\nMessag",
-      "eKey\022\r\n\005index\030\001 \001(\r\022\021\n\tcipherKey\030\002 \001(\014\022\016" +
-      "\n\006macKey\030\003 \001(\014\022\n\n\002iv\030\004 \001(\014\032\315\001\n\022PendingKe" +
-      "yExchange\022\020\n\010sequence\030\001 \001(\r\022\024\n\014localBase" +
-      "Key\030\002 \001(\014\022\033\n\023localBaseKeyPrivate\030\003 \001(\014\022\027" +
-      "\n\017localRatchetKey\030\004 \001(\014\022\036\n\026localRatchetK" +
-      "eyPrivate\030\005 \001(\014\022\030\n\020localIdentityKey\030\007 \001(" +
-      "\014\022\037\n\027localIdentityKeyPrivate\030\010 \001(\014\032J\n\rPe" +
-      "ndingPreKey\022\020\n\010preKeyId\030\001 \001(\r\022\026\n\016signedP" +
-      "reKeyId\030\003 \001(\005\022\017\n\007baseKey\030\002 \001(\014\"\177\n\017Record" +
-      "Structure\0224\n\016currentSession\030\001 \001(\0132\034.text",
-      "secure.SessionStructure\0226\n\020previousSessi" +
-      "ons\030\002 \003(\0132\034.textsecure.SessionStructure\"" +
-      "J\n\025PreKeyRecordStructure\022\n\n\002id\030\001 \001(\r\022\021\n\t" +
-      "publicKey\030\002 \001(\014\022\022\n\nprivateKey\030\003 \001(\014\"v\n\033S" +
-      "ignedPreKeyRecordStructure\022\n\n\002id\030\001 \001(\r\022\021" +
-      "\n\tpublicKey\030\002 \001(\014\022\022\n\nprivateKey\030\003 \001(\014\022\021\n" +
-      "\tsignature\030\004 \001(\014\022\021\n\ttimestamp\030\005 \001(\006\"A\n\030I" +
-      "dentityKeyPairStructure\022\021\n\tpublicKey\030\001 \001" +
-      "(\014\022\022\n\nprivateKey\030\002 \001(\014\"\270\003\n\027SenderKeyStat" +
-      "eStructure\022\023\n\013senderKeyId\030\001 \001(\r\022J\n\016sende",
-      "rChainKey\030\002 \001(\01322.textsecure.SenderKeySt" +
-      "ateStructure.SenderChainKey\022N\n\020senderSig" +
-      "ningKey\030\003 \001(\01324.textsecure.SenderKeyStat" +
-      "eStructure.SenderSigningKey\022O\n\021senderMes" +
-      "sageKeys\030\004 \003(\01324.textsecure.SenderKeySta" +
-      "teStructure.SenderMessageKey\0321\n\016SenderCh" +
-      "ainKey\022\021\n\titeration\030\001 \001(\r\022\014\n\004seed\030\002 \001(\014\032" +
-      "3\n\020SenderMessageKey\022\021\n\titeration\030\001 \001(\r\022\014" +
-      "\n\004seed\030\002 \001(\014\0323\n\020SenderSigningKey\022\016\n\006publ" +
-      "ic\030\001 \001(\014\022\017\n\007private\030\002 \001(\014\"X\n\030SenderKeyRe",
-      "cordStructure\022<\n\017senderKeyStates\030\001 \003(\0132#" +
-      ".textsecure.SenderKeyStateStructureB3\n\"o" +
-      "rg.whispersystems.libsignal.stateB\rStora" +
-      "geProtos"
-    };
-    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
-      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
-        public com.google.protobuf.ExtensionRegistry assignDescriptors(
-            com.google.protobuf.Descriptors.FileDescriptor root) {
-          descriptor = root;
-          internal_static_textsecure_SessionStructure_descriptor =
-            getDescriptor().getMessageTypes().get(0);
-          internal_static_textsecure_SessionStructure_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SessionStructure_descriptor,
-              new java.lang.String[] { "SessionVersion", "LocalIdentityPublic", "RemoteIdentityPublic", "RootKey", "PreviousCounter", "SenderChain", "ReceiverChains", "PendingKeyExchange", "PendingPreKey", "RemoteRegistrationId", "LocalRegistrationId", "NeedsRefresh", "AliceBaseKey", });
-          internal_static_textsecure_SessionStructure_Chain_descriptor =
-            internal_static_textsecure_SessionStructure_descriptor.getNestedTypes().get(0);
-          internal_static_textsecure_SessionStructure_Chain_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SessionStructure_Chain_descriptor,
-              new java.lang.String[] { "SenderRatchetKey", "SenderRatchetKeyPrivate", "ChainKey", "MessageKeys", });
-          internal_static_textsecure_SessionStructure_Chain_ChainKey_descriptor =
-            internal_static_textsecure_SessionStructure_Chain_descriptor.getNestedTypes().get(0);
-          internal_static_textsecure_SessionStructure_Chain_ChainKey_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SessionStructure_Chain_ChainKey_descriptor,
-              new java.lang.String[] { "Index", "Key", });
-          internal_static_textsecure_SessionStructure_Chain_MessageKey_descriptor =
-            internal_static_textsecure_SessionStructure_Chain_descriptor.getNestedTypes().get(1);
-          internal_static_textsecure_SessionStructure_Chain_MessageKey_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SessionStructure_Chain_MessageKey_descriptor,
-              new java.lang.String[] { "Index", "CipherKey", "MacKey", "Iv", });
-          internal_static_textsecure_SessionStructure_PendingKeyExchange_descriptor =
-            internal_static_textsecure_SessionStructure_descriptor.getNestedTypes().get(1);
-          internal_static_textsecure_SessionStructure_PendingKeyExchange_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SessionStructure_PendingKeyExchange_descriptor,
-              new java.lang.String[] { "Sequence", "LocalBaseKey", "LocalBaseKeyPrivate", "LocalRatchetKey", "LocalRatchetKeyPrivate", "LocalIdentityKey", "LocalIdentityKeyPrivate", });
-          internal_static_textsecure_SessionStructure_PendingPreKey_descriptor =
-            internal_static_textsecure_SessionStructure_descriptor.getNestedTypes().get(2);
-          internal_static_textsecure_SessionStructure_PendingPreKey_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SessionStructure_PendingPreKey_descriptor,
-              new java.lang.String[] { "PreKeyId", "SignedPreKeyId", "BaseKey", });
-          internal_static_textsecure_RecordStructure_descriptor =
-            getDescriptor().getMessageTypes().get(1);
-          internal_static_textsecure_RecordStructure_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_RecordStructure_descriptor,
-              new java.lang.String[] { "CurrentSession", "PreviousSessions", });
-          internal_static_textsecure_PreKeyRecordStructure_descriptor =
-            getDescriptor().getMessageTypes().get(2);
-          internal_static_textsecure_PreKeyRecordStructure_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_PreKeyRecordStructure_descriptor,
-              new java.lang.String[] { "Id", "PublicKey", "PrivateKey", });
-          internal_static_textsecure_SignedPreKeyRecordStructure_descriptor =
-            getDescriptor().getMessageTypes().get(3);
-          internal_static_textsecure_SignedPreKeyRecordStructure_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SignedPreKeyRecordStructure_descriptor,
-              new java.lang.String[] { "Id", "PublicKey", "PrivateKey", "Signature", "Timestamp", });
-          internal_static_textsecure_IdentityKeyPairStructure_descriptor =
-            getDescriptor().getMessageTypes().get(4);
-          internal_static_textsecure_IdentityKeyPairStructure_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_IdentityKeyPairStructure_descriptor,
-              new java.lang.String[] { "PublicKey", "PrivateKey", });
-          internal_static_textsecure_SenderKeyStateStructure_descriptor =
-            getDescriptor().getMessageTypes().get(5);
-          internal_static_textsecure_SenderKeyStateStructure_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SenderKeyStateStructure_descriptor,
-              new java.lang.String[] { "SenderKeyId", "SenderChainKey", "SenderSigningKey", "SenderMessageKeys", });
-          internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_descriptor =
-            internal_static_textsecure_SenderKeyStateStructure_descriptor.getNestedTypes().get(0);
-          internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SenderKeyStateStructure_SenderChainKey_descriptor,
-              new java.lang.String[] { "Iteration", "Seed", });
-          internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_descriptor =
-            internal_static_textsecure_SenderKeyStateStructure_descriptor.getNestedTypes().get(1);
-          internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SenderKeyStateStructure_SenderMessageKey_descriptor,
-              new java.lang.String[] { "Iteration", "Seed", });
-          internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_descriptor =
-            internal_static_textsecure_SenderKeyStateStructure_descriptor.getNestedTypes().get(2);
-          internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SenderKeyStateStructure_SenderSigningKey_descriptor,
-              new java.lang.String[] { "Public", "Private", });
-          internal_static_textsecure_SenderKeyRecordStructure_descriptor =
-            getDescriptor().getMessageTypes().get(6);
-          internal_static_textsecure_SenderKeyRecordStructure_fieldAccessorTable = new
-            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
-              internal_static_textsecure_SenderKeyRecordStructure_descriptor,
-              new java.lang.String[] { "SenderKeyStates", });
-          return null;
-        }
-      };
-    com.google.protobuf.Descriptors.FileDescriptor
-      .internalBuildGeneratedFileFrom(descriptorData,
-        new com.google.protobuf.Descriptors.FileDescriptor[] {
-        }, assigner);
+  /**
+   * Protobuf type {@code textsecure.FastRatchetSenderKeyStateStructure}
+   */
+  public static final class FastRatchetSenderKeyStateStructure extends
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.FastRatchetSenderKeyStateStructure)
+      FastRatchetSenderKeyStateStructureOrBuilder {
+    // Use FastRatchetSenderKeyStateStructure.newBuilder() to construct.
+    private FastRatchetSenderKeyStateStructure(com.google.protobuf.GeneratedMessageLite.Builder builder) {
+      super(builder);
+      this.unknownFields = builder.getUnknownFields();
+    }
+    private FastRatchetSenderKeyStateStructure(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
+
+    private static final FastRatchetSenderKeyStateStructure defaultInstance;
+    public static FastRatchetSenderKeyStateStructure getDefaultInstance() {
+      return defaultInstance;
+    }
+
+    public FastRatchetSenderKeyStateStructure getDefaultInstanceForType() {
+      return defaultInstance;
+    }
+
+    private final com.google.protobuf.ByteString unknownFields;
+    private FastRatchetSenderKeyStateStructure(
+        com.google.protobuf.CodedInputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      initFields();
+      int mutable_bitField0_ = 0;
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
+      try {
+        boolean done = false;
+        while (!done) {
+          int tag = input.readTag();
+          switch (tag) {
+            case 0:
+              done = true;
+              break;
+            default: {
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
+                                     extensionRegistry, tag)) {
+                done = true;
+              }
+              break;
+            }
+            case 8: {
+              bitField0_ |= 0x00000001;
+              senderKeyId_ = input.readUInt32();
+              break;
+            }
+            case 18: {
+              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
+                senderChainKeys_ = new java.util.ArrayList<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey>();
+                mutable_bitField0_ |= 0x00000002;
+              }
+              senderChainKeys_.add(input.readMessage(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.PARSER, extensionRegistry));
+              break;
+            }
+            case 26: {
+              org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.Builder subBuilder = null;
+              if (((bitField0_ & 0x00000002) == 0x00000002)) {
+                subBuilder = senderSigningKey_.toBuilder();
+              }
+              senderSigningKey_ = input.readMessage(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.PARSER, extensionRegistry);
+              if (subBuilder != null) {
+                subBuilder.mergeFrom(senderSigningKey_);
+                senderSigningKey_ = subBuilder.buildPartial();
+              }
+              bitField0_ |= 0x00000002;
+              break;
+            }
+          }
+        }
+      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+        throw e.setUnfinishedMessage(this);
+      } catch (java.io.IOException e) {
+        throw new com.google.protobuf.InvalidProtocolBufferException(
+            e.getMessage()).setUnfinishedMessage(this);
+      } finally {
+        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
+          senderChainKeys_ = java.util.Collections.unmodifiableList(senderChainKeys_);
+        }
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
+        makeExtensionsImmutable();
+      }
+    }
+    public static com.google.protobuf.Parser<FastRatchetSenderKeyStateStructure> PARSER =
+        new com.google.protobuf.AbstractParser<FastRatchetSenderKeyStateStructure>() {
+      public FastRatchetSenderKeyStateStructure parsePartialFrom(
+          com.google.protobuf.CodedInputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return new FastRatchetSenderKeyStateStructure(input, extensionRegistry);
+      }
+    };
+
+    @java.lang.Override
+    public com.google.protobuf.Parser<FastRatchetSenderKeyStateStructure> getParserForType() {
+      return PARSER;
+    }
+
+    private int bitField0_;
+    public static final int SENDERKEYID_FIELD_NUMBER = 1;
+    private int senderKeyId_;
+    /**
+     * <code>optional uint32 senderKeyId = 1;</code>
+     */
+    public boolean hasSenderKeyId() {
+      return ((bitField0_ & 0x00000001) == 0x00000001);
+    }
+    /**
+     * <code>optional uint32 senderKeyId = 1;</code>
+     */
+    public int getSenderKeyId() {
+      return senderKeyId_;
+    }
+
+    public static final int SENDERCHAINKEYS_FIELD_NUMBER = 2;
+    private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey> senderChainKeys_;
+    /**
+     * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+     */
+    public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey> getSenderChainKeysList() {
+      return senderChainKeys_;
+    }
+    /**
+     * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+     */
+    public java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder> 
+        getSenderChainKeysOrBuilderList() {
+      return senderChainKeys_;
+    }
+    /**
+     * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+     */
+    public int getSenderChainKeysCount() {
+      return senderChainKeys_.size();
+    }
+    /**
+     * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+     */
+    public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey getSenderChainKeys(int index) {
+      return senderChainKeys_.get(index);
+    }
+    /**
+     * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+     */
+    public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKeyOrBuilder getSenderChainKeysOrBuilder(
+        int index) {
+      return senderChainKeys_.get(index);
+    }
+
+    public static final int SENDERSIGNINGKEY_FIELD_NUMBER = 3;
+    private org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey senderSigningKey_;
+    /**
+     * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+     */
+    public boolean hasSenderSigningKey() {
+      return ((bitField0_ & 0x00000002) == 0x00000002);
+    }
+    /**
+     * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+     */
+    public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey getSenderSigningKey() {
+      return senderSigningKey_;
+    }
+
+    private void initFields() {
+      senderKeyId_ = 0;
+      senderChainKeys_ = java.util.Collections.emptyList();
+      senderSigningKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
+    }
+    private byte memoizedIsInitialized = -1;
+    public final boolean isInitialized() {
+      byte isInitialized = memoizedIsInitialized;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
+
+      memoizedIsInitialized = 1;
+      return true;
+    }
+
+    public void writeTo(com.google.protobuf.CodedOutputStream output)
+                        throws java.io.IOException {
+      getSerializedSize();
+      if (((bitField0_ & 0x00000001) == 0x00000001)) {
+        output.writeUInt32(1, senderKeyId_);
+      }
+      for (int i = 0; i < senderChainKeys_.size(); i++) {
+        output.writeMessage(2, senderChainKeys_.get(i));
+      }
+      if (((bitField0_ & 0x00000002) == 0x00000002)) {
+        output.writeMessage(3, senderSigningKey_);
+      }
+      output.writeRawBytes(unknownFields);
+    }
+
+    private int memoizedSerializedSize = -1;
+    public int getSerializedSize() {
+      int size = memoizedSerializedSize;
+      if (size != -1) return size;
+
+      size = 0;
+      if (((bitField0_ & 0x00000001) == 0x00000001)) {
+        size += com.google.protobuf.CodedOutputStream
+          .computeUInt32Size(1, senderKeyId_);
+      }
+      for (int i = 0; i < senderChainKeys_.size(); i++) {
+        size += com.google.protobuf.CodedOutputStream
+          .computeMessageSize(2, senderChainKeys_.get(i));
+      }
+      if (((bitField0_ & 0x00000002) == 0x00000002)) {
+        size += com.google.protobuf.CodedOutputStream
+          .computeMessageSize(3, senderSigningKey_);
+      }
+      size += unknownFields.size();
+      memoizedSerializedSize = size;
+      return size;
+    }
+
+    private static final long serialVersionUID = 0L;
+    @java.lang.Override
+    protected java.lang.Object writeReplace()
+        throws java.io.ObjectStreamException {
+      return super.writeReplace();
+    }
+
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseFrom(
+        com.google.protobuf.ByteString data)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseFrom(
+        com.google.protobuf.ByteString data,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseFrom(byte[] data)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseFrom(
+        byte[] data,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseFrom(java.io.InputStream input)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseFrom(
+        java.io.InputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseDelimitedFrom(java.io.InputStream input)
+        throws java.io.IOException {
+      return PARSER.parseDelimitedFrom(input);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseDelimitedFrom(
+        java.io.InputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return PARSER.parseDelimitedFrom(input, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseFrom(
+        com.google.protobuf.CodedInputStream input)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parseFrom(
+        com.google.protobuf.CodedInputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input, extensionRegistry);
+    }
+
+    public static Builder newBuilder() { return Builder.create(); }
+    public Builder newBuilderForType() { return newBuilder(); }
+    public static Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure prototype) {
+      return newBuilder().mergeFrom(prototype);
+    }
+    public Builder toBuilder() { return newBuilder(this); }
+
+    /**
+     * Protobuf type {@code textsecure.FastRatchetSenderKeyStateStructure}
+     */
+    public static final class Builder extends
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.FastRatchetSenderKeyStateStructure)
+        org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructureOrBuilder {
+      // Construct using org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure.newBuilder()
+      private Builder() {
+        maybeForceBuilderInitialization();
+      }
+
+      private void maybeForceBuilderInitialization() {
+      }
+      private static Builder create() {
+        return new Builder();
+      }
+
+      public Builder clear() {
+        super.clear();
+        senderKeyId_ = 0;
+        bitField0_ = (bitField0_ & ~0x00000001);
+        senderChainKeys_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000002);
+        senderSigningKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
+        bitField0_ = (bitField0_ & ~0x00000004);
+        return this;
+      }
+
+      public Builder clone() {
+        return create().mergeFrom(buildPartial());
+      }
+
+      public org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure getDefaultInstanceForType() {
+        return org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure.getDefaultInstance();
+      }
+
+      public org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure build() {
+        org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure result = buildPartial();
+        if (!result.isInitialized()) {
+          throw newUninitializedMessageException(result);
+        }
+        return result;
+      }
+
+      public org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure buildPartial() {
+        org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure result = new org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure(this);
+        int from_bitField0_ = bitField0_;
+        int to_bitField0_ = 0;
+        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
+          to_bitField0_ |= 0x00000001;
+        }
+        result.senderKeyId_ = senderKeyId_;
+        if (((bitField0_ & 0x00000002) == 0x00000002)) {
+          senderChainKeys_ = java.util.Collections.unmodifiableList(senderChainKeys_);
+          bitField0_ = (bitField0_ & ~0x00000002);
+        }
+        result.senderChainKeys_ = senderChainKeys_;
+        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
+          to_bitField0_ |= 0x00000002;
+        }
+        result.senderSigningKey_ = senderSigningKey_;
+        result.bitField0_ = to_bitField0_;
+        return result;
+      }
+
+      public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure other) {
+        if (other == org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure.getDefaultInstance()) return this;
+        if (other.hasSenderKeyId()) {
+          setSenderKeyId(other.getSenderKeyId());
+        }
+        if (!other.senderChainKeys_.isEmpty()) {
+          if (senderChainKeys_.isEmpty()) {
+            senderChainKeys_ = other.senderChainKeys_;
+            bitField0_ = (bitField0_ & ~0x00000002);
+          } else {
+            ensureSenderChainKeysIsMutable();
+            senderChainKeys_.addAll(other.senderChainKeys_);
+          }
+          
+        }
+        if (other.hasSenderSigningKey()) {
+          mergeSenderSigningKey(other.getSenderSigningKey());
+        }
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
+        return this;
+      }
+
+      public final boolean isInitialized() {
+        return true;
+      }
+
+      public Builder mergeFrom(
+          com.google.protobuf.CodedInputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws java.io.IOException {
+        org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure parsedMessage = null;
+        try {
+          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
+        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+          parsedMessage = (org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure) e.getUnfinishedMessage();
+          throw e;
+        } finally {
+          if (parsedMessage != null) {
+            mergeFrom(parsedMessage);
+          }
+        }
+        return this;
+      }
+      private int bitField0_;
+
+      private int senderKeyId_ ;
+      /**
+       * <code>optional uint32 senderKeyId = 1;</code>
+       */
+      public boolean hasSenderKeyId() {
+        return ((bitField0_ & 0x00000001) == 0x00000001);
+      }
+      /**
+       * <code>optional uint32 senderKeyId = 1;</code>
+       */
+      public int getSenderKeyId() {
+        return senderKeyId_;
+      }
+      /**
+       * <code>optional uint32 senderKeyId = 1;</code>
+       */
+      public Builder setSenderKeyId(int value) {
+        bitField0_ |= 0x00000001;
+        senderKeyId_ = value;
+        
+        return this;
+      }
+      /**
+       * <code>optional uint32 senderKeyId = 1;</code>
+       */
+      public Builder clearSenderKeyId() {
+        bitField0_ = (bitField0_ & ~0x00000001);
+        senderKeyId_ = 0;
+        
+        return this;
+      }
+
+      private java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey> senderChainKeys_ =
+        java.util.Collections.emptyList();
+      private void ensureSenderChainKeysIsMutable() {
+        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
+          senderChainKeys_ = new java.util.ArrayList<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey>(senderChainKeys_);
+          bitField0_ |= 0x00000002;
+         }
+      }
+
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public java.util.List<org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey> getSenderChainKeysList() {
+        return java.util.Collections.unmodifiableList(senderChainKeys_);
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public int getSenderChainKeysCount() {
+        return senderChainKeys_.size();
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey getSenderChainKeys(int index) {
+        return senderChainKeys_.get(index);
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public Builder setSenderChainKeys(
+          int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey value) {
+        if (value == null) {
+          throw new NullPointerException();
+        }
+        ensureSenderChainKeysIsMutable();
+        senderChainKeys_.set(index, value);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public Builder setSenderChainKeys(
+          int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder builderForValue) {
+        ensureSenderChainKeysIsMutable();
+        senderChainKeys_.set(index, builderForValue.build());
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public Builder addSenderChainKeys(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey value) {
+        if (value == null) {
+          throw new NullPointerException();
+        }
+        ensureSenderChainKeysIsMutable();
+        senderChainKeys_.add(value);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public Builder addSenderChainKeys(
+          int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey value) {
+        if (value == null) {
+          throw new NullPointerException();
+        }
+        ensureSenderChainKeysIsMutable();
+        senderChainKeys_.add(index, value);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public Builder addSenderChainKeys(
+          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder builderForValue) {
+        ensureSenderChainKeysIsMutable();
+        senderChainKeys_.add(builderForValue.build());
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public Builder addSenderChainKeys(
+          int index, org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey.Builder builderForValue) {
+        ensureSenderChainKeysIsMutable();
+        senderChainKeys_.add(index, builderForValue.build());
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public Builder addAllSenderChainKeys(
+          java.lang.Iterable<? extends org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderChainKey> values) {
+        ensureSenderChainKeysIsMutable();
+        com.google.protobuf.AbstractMessageLite.Builder.addAll(
+            values, senderChainKeys_);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public Builder clearSenderChainKeys() {
+        senderChainKeys_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000002);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.SenderKeyStateStructure.SenderChainKey senderChainKeys = 2;</code>
+       */
+      public Builder removeSenderChainKeys(int index) {
+        ensureSenderChainKeysIsMutable();
+        senderChainKeys_.remove(index);
+
+        return this;
+      }
+
+      private org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey senderSigningKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
+      /**
+       * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+       */
+      public boolean hasSenderSigningKey() {
+        return ((bitField0_ & 0x00000004) == 0x00000004);
+      }
+      /**
+       * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+       */
+      public org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey getSenderSigningKey() {
+        return senderSigningKey_;
+      }
+      /**
+       * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+       */
+      public Builder setSenderSigningKey(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey value) {
+        if (value == null) {
+          throw new NullPointerException();
+        }
+        senderSigningKey_ = value;
+
+        bitField0_ |= 0x00000004;
+        return this;
+      }
+      /**
+       * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+       */
+      public Builder setSenderSigningKey(
+          org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.Builder builderForValue) {
+        senderSigningKey_ = builderForValue.build();
+
+        bitField0_ |= 0x00000004;
+        return this;
+      }
+      /**
+       * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+       */
+      public Builder mergeSenderSigningKey(org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey value) {
+        if (((bitField0_ & 0x00000004) == 0x00000004) &&
+            senderSigningKey_ != org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance()) {
+          senderSigningKey_ =
+            org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.newBuilder(senderSigningKey_).mergeFrom(value).buildPartial();
+        } else {
+          senderSigningKey_ = value;
+        }
+
+        bitField0_ |= 0x00000004;
+        return this;
+      }
+      /**
+       * <code>optional .textsecure.SenderKeyStateStructure.SenderSigningKey senderSigningKey = 3;</code>
+       */
+      public Builder clearSenderSigningKey() {
+        senderSigningKey_ = org.whispersystems.libsignal.state.StorageProtos.SenderKeyStateStructure.SenderSigningKey.getDefaultInstance();
+
+        bitField0_ = (bitField0_ & ~0x00000004);
+        return this;
+      }
+
+      // @@protoc_insertion_point(builder_scope:textsecure.FastRatchetSenderKeyStateStructure)
+    }
+
+    static {
+      defaultInstance = new FastRatchetSenderKeyStateStructure(true);
+      defaultInstance.initFields();
+    }
+
+    // @@protoc_insertion_point(class_scope:textsecure.FastRatchetSenderKeyStateStructure)
+  }
+
+  public interface FastRatchetSenderKeyRecordStructureOrBuilder extends
+      // @@protoc_insertion_point(interface_extends:textsecure.FastRatchetSenderKeyRecordStructure)
+      com.google.protobuf.MessageLiteOrBuilder {
+
+    /**
+     * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+     */
+    java.util.List<org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure> 
+        getSenderKeyStatesList();
+    /**
+     * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+     */
+    org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure getSenderKeyStates(int index);
+    /**
+     * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+     */
+    int getSenderKeyStatesCount();
+  }
+  /**
+   * Protobuf type {@code textsecure.FastRatchetSenderKeyRecordStructure}
+   */
+  public static final class FastRatchetSenderKeyRecordStructure extends
+      com.google.protobuf.GeneratedMessageLite implements
+      // @@protoc_insertion_point(message_implements:textsecure.FastRatchetSenderKeyRecordStructure)
+      FastRatchetSenderKeyRecordStructureOrBuilder {
+    // Use FastRatchetSenderKeyRecordStructure.newBuilder() to construct.
+    private FastRatchetSenderKeyRecordStructure(com.google.protobuf.GeneratedMessageLite.Builder builder) {
+      super(builder);
+      this.unknownFields = builder.getUnknownFields();
+    }
+    private FastRatchetSenderKeyRecordStructure(boolean noInit) { this.unknownFields = com.google.protobuf.ByteString.EMPTY;}
+
+    private static final FastRatchetSenderKeyRecordStructure defaultInstance;
+    public static FastRatchetSenderKeyRecordStructure getDefaultInstance() {
+      return defaultInstance;
+    }
+
+    public FastRatchetSenderKeyRecordStructure getDefaultInstanceForType() {
+      return defaultInstance;
+    }
+
+    private final com.google.protobuf.ByteString unknownFields;
+    private FastRatchetSenderKeyRecordStructure(
+        com.google.protobuf.CodedInputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      initFields();
+      int mutable_bitField0_ = 0;
+      com.google.protobuf.ByteString.Output unknownFieldsOutput =
+          com.google.protobuf.ByteString.newOutput();
+      com.google.protobuf.CodedOutputStream unknownFieldsCodedOutput =
+          com.google.protobuf.CodedOutputStream.newInstance(
+              unknownFieldsOutput);
+      try {
+        boolean done = false;
+        while (!done) {
+          int tag = input.readTag();
+          switch (tag) {
+            case 0:
+              done = true;
+              break;
+            default: {
+              if (!parseUnknownField(input, unknownFieldsCodedOutput,
+                                     extensionRegistry, tag)) {
+                done = true;
+              }
+              break;
+            }
+            case 10: {
+              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
+                senderKeyStates_ = new java.util.ArrayList<org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure>();
+                mutable_bitField0_ |= 0x00000001;
+              }
+              senderKeyStates_.add(input.readMessage(org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure.PARSER, extensionRegistry));
+              break;
+            }
+          }
+        }
+      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+        throw e.setUnfinishedMessage(this);
+      } catch (java.io.IOException e) {
+        throw new com.google.protobuf.InvalidProtocolBufferException(
+            e.getMessage()).setUnfinishedMessage(this);
+      } finally {
+        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
+          senderKeyStates_ = java.util.Collections.unmodifiableList(senderKeyStates_);
+        }
+        try {
+          unknownFieldsCodedOutput.flush();
+        } catch (java.io.IOException e) {
+        // Should not happen
+        } finally {
+          unknownFields = unknownFieldsOutput.toByteString();
+        }
+        makeExtensionsImmutable();
+      }
+    }
+    public static com.google.protobuf.Parser<FastRatchetSenderKeyRecordStructure> PARSER =
+        new com.google.protobuf.AbstractParser<FastRatchetSenderKeyRecordStructure>() {
+      public FastRatchetSenderKeyRecordStructure parsePartialFrom(
+          com.google.protobuf.CodedInputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws com.google.protobuf.InvalidProtocolBufferException {
+        return new FastRatchetSenderKeyRecordStructure(input, extensionRegistry);
+      }
+    };
+
+    @java.lang.Override
+    public com.google.protobuf.Parser<FastRatchetSenderKeyRecordStructure> getParserForType() {
+      return PARSER;
+    }
+
+    public static final int SENDERKEYSTATES_FIELD_NUMBER = 1;
+    private java.util.List<org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure> senderKeyStates_;
+    /**
+     * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+     */
+    public java.util.List<org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure> getSenderKeyStatesList() {
+      return senderKeyStates_;
+    }
+    /**
+     * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+     */
+    public java.util.List<? extends org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructureOrBuilder> 
+        getSenderKeyStatesOrBuilderList() {
+      return senderKeyStates_;
+    }
+    /**
+     * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+     */
+    public int getSenderKeyStatesCount() {
+      return senderKeyStates_.size();
+    }
+    /**
+     * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+     */
+    public org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure getSenderKeyStates(int index) {
+      return senderKeyStates_.get(index);
+    }
+    /**
+     * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+     */
+    public org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructureOrBuilder getSenderKeyStatesOrBuilder(
+        int index) {
+      return senderKeyStates_.get(index);
+    }
+
+    private void initFields() {
+      senderKeyStates_ = java.util.Collections.emptyList();
+    }
+    private byte memoizedIsInitialized = -1;
+    public final boolean isInitialized() {
+      byte isInitialized = memoizedIsInitialized;
+      if (isInitialized == 1) return true;
+      if (isInitialized == 0) return false;
+
+      memoizedIsInitialized = 1;
+      return true;
+    }
+
+    public void writeTo(com.google.protobuf.CodedOutputStream output)
+                        throws java.io.IOException {
+      getSerializedSize();
+      for (int i = 0; i < senderKeyStates_.size(); i++) {
+        output.writeMessage(1, senderKeyStates_.get(i));
+      }
+      output.writeRawBytes(unknownFields);
+    }
+
+    private int memoizedSerializedSize = -1;
+    public int getSerializedSize() {
+      int size = memoizedSerializedSize;
+      if (size != -1) return size;
+
+      size = 0;
+      for (int i = 0; i < senderKeyStates_.size(); i++) {
+        size += com.google.protobuf.CodedOutputStream
+          .computeMessageSize(1, senderKeyStates_.get(i));
+      }
+      size += unknownFields.size();
+      memoizedSerializedSize = size;
+      return size;
+    }
+
+    private static final long serialVersionUID = 0L;
+    @java.lang.Override
+    protected java.lang.Object writeReplace()
+        throws java.io.ObjectStreamException {
+      return super.writeReplace();
+    }
+
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseFrom(
+        com.google.protobuf.ByteString data)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseFrom(
+        com.google.protobuf.ByteString data,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseFrom(byte[] data)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseFrom(
+        byte[] data,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws com.google.protobuf.InvalidProtocolBufferException {
+      return PARSER.parseFrom(data, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseFrom(java.io.InputStream input)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseFrom(
+        java.io.InputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseDelimitedFrom(java.io.InputStream input)
+        throws java.io.IOException {
+      return PARSER.parseDelimitedFrom(input);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseDelimitedFrom(
+        java.io.InputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return PARSER.parseDelimitedFrom(input, extensionRegistry);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseFrom(
+        com.google.protobuf.CodedInputStream input)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input);
+    }
+    public static org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parseFrom(
+        com.google.protobuf.CodedInputStream input,
+        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+        throws java.io.IOException {
+      return PARSER.parseFrom(input, extensionRegistry);
+    }
+
+    public static Builder newBuilder() { return Builder.create(); }
+    public Builder newBuilderForType() { return newBuilder(); }
+    public static Builder newBuilder(org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure prototype) {
+      return newBuilder().mergeFrom(prototype);
+    }
+    public Builder toBuilder() { return newBuilder(this); }
+
+    /**
+     * Protobuf type {@code textsecure.FastRatchetSenderKeyRecordStructure}
+     */
+    public static final class Builder extends
+        com.google.protobuf.GeneratedMessageLite.Builder<
+          org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure, Builder>
+        implements
+        // @@protoc_insertion_point(builder_implements:textsecure.FastRatchetSenderKeyRecordStructure)
+        org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructureOrBuilder {
+      // Construct using org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure.newBuilder()
+      private Builder() {
+        maybeForceBuilderInitialization();
+      }
+
+      private void maybeForceBuilderInitialization() {
+      }
+      private static Builder create() {
+        return new Builder();
+      }
+
+      public Builder clear() {
+        super.clear();
+        senderKeyStates_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000001);
+        return this;
+      }
+
+      public Builder clone() {
+        return create().mergeFrom(buildPartial());
+      }
+
+      public org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure getDefaultInstanceForType() {
+        return org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure.getDefaultInstance();
+      }
+
+      public org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure build() {
+        org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure result = buildPartial();
+        if (!result.isInitialized()) {
+          throw newUninitializedMessageException(result);
+        }
+        return result;
+      }
+
+      public org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure buildPartial() {
+        org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure result = new org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure(this);
+        int from_bitField0_ = bitField0_;
+        if (((bitField0_ & 0x00000001) == 0x00000001)) {
+          senderKeyStates_ = java.util.Collections.unmodifiableList(senderKeyStates_);
+          bitField0_ = (bitField0_ & ~0x00000001);
+        }
+        result.senderKeyStates_ = senderKeyStates_;
+        return result;
+      }
+
+      public Builder mergeFrom(org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure other) {
+        if (other == org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure.getDefaultInstance()) return this;
+        if (!other.senderKeyStates_.isEmpty()) {
+          if (senderKeyStates_.isEmpty()) {
+            senderKeyStates_ = other.senderKeyStates_;
+            bitField0_ = (bitField0_ & ~0x00000001);
+          } else {
+            ensureSenderKeyStatesIsMutable();
+            senderKeyStates_.addAll(other.senderKeyStates_);
+          }
+          
+        }
+        setUnknownFields(
+            getUnknownFields().concat(other.unknownFields));
+        return this;
+      }
+
+      public final boolean isInitialized() {
+        return true;
+      }
+
+      public Builder mergeFrom(
+          com.google.protobuf.CodedInputStream input,
+          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
+          throws java.io.IOException {
+        org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure parsedMessage = null;
+        try {
+          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
+        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
+          parsedMessage = (org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyRecordStructure) e.getUnfinishedMessage();
+          throw e;
+        } finally {
+          if (parsedMessage != null) {
+            mergeFrom(parsedMessage);
+          }
+        }
+        return this;
+      }
+      private int bitField0_;
+
+      private java.util.List<org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure> senderKeyStates_ =
+        java.util.Collections.emptyList();
+      private void ensureSenderKeyStatesIsMutable() {
+        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
+          senderKeyStates_ = new java.util.ArrayList<org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure>(senderKeyStates_);
+          bitField0_ |= 0x00000001;
+         }
+      }
+
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public java.util.List<org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure> getSenderKeyStatesList() {
+        return java.util.Collections.unmodifiableList(senderKeyStates_);
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public int getSenderKeyStatesCount() {
+        return senderKeyStates_.size();
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure getSenderKeyStates(int index) {
+        return senderKeyStates_.get(index);
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public Builder setSenderKeyStates(
+          int index, org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure value) {
+        if (value == null) {
+          throw new NullPointerException();
+        }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.set(index, value);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public Builder setSenderKeyStates(
+          int index, org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure.Builder builderForValue) {
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.set(index, builderForValue.build());
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public Builder addSenderKeyStates(org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure value) {
+        if (value == null) {
+          throw new NullPointerException();
+        }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.add(value);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public Builder addSenderKeyStates(
+          int index, org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure value) {
+        if (value == null) {
+          throw new NullPointerException();
+        }
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.add(index, value);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public Builder addSenderKeyStates(
+          org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure.Builder builderForValue) {
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.add(builderForValue.build());
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public Builder addSenderKeyStates(
+          int index, org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure.Builder builderForValue) {
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.add(index, builderForValue.build());
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public Builder addAllSenderKeyStates(
+          java.lang.Iterable<? extends org.whispersystems.libsignal.state.StorageProtos.FastRatchetSenderKeyStateStructure> values) {
+        ensureSenderKeyStatesIsMutable();
+        com.google.protobuf.AbstractMessageLite.Builder.addAll(
+            values, senderKeyStates_);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public Builder clearSenderKeyStates() {
+        senderKeyStates_ = java.util.Collections.emptyList();
+        bitField0_ = (bitField0_ & ~0x00000001);
+
+        return this;
+      }
+      /**
+       * <code>repeated .textsecure.FastRatchetSenderKeyStateStructure senderKeyStates = 1;</code>
+       */
+      public Builder removeSenderKeyStates(int index) {
+        ensureSenderKeyStatesIsMutable();
+        senderKeyStates_.remove(index);
+
+        return this;
+      }
+
+      // @@protoc_insertion_point(builder_scope:textsecure.FastRatchetSenderKeyRecordStructure)
+    }
+
+    static {
+      defaultInstance = new FastRatchetSenderKeyRecordStructure(true);
+      defaultInstance.initFields();
+    }
+
+    // @@protoc_insertion_point(class_scope:textsecure.FastRatchetSenderKeyRecordStructure)
+  }
+
+
+  static {
   }
 
   // @@protoc_insertion_point(outer_class_scope)
diff --git a/java/src/main/java/org/whispersystems/libsignal/util/FastRatchetUtil.java b/java/src/main/java/org/whispersystems/libsignal/util/FastRatchetUtil.java
new file mode 100644
index 0000000..098cf24
--- /dev/null
+++ b/java/src/main/java/org/whispersystems/libsignal/util/FastRatchetUtil.java
@@ -0,0 +1,79 @@
+/**
+ * Copyright (C) 2017 WhatsApp Inc. All rights reserved.
+ *
+ * Licensed according to the LICENSE file in this repository.
+ */
+package org.whispersystems.libsignal.util;
+
+/**
+ * Helper class for various conversion operations needed by the fast ratchet
+ * group cipher.
+ */
+public class FastRatchetUtil {
+  private FastRatchetUtil() {}
+
+  /**
+   * Convert the "scale" parameter value into the number of actual key chains
+   * it should represent.
+   */
+  public static int scaleToDimensions(int scale) {
+    return 1 << scale;
+  }
+
+  static int composeIterations(int[] components) {
+    int dimensions = components.length;
+    int bits = 32 / dimensions;
+    int mask = (int)((1L << bits) - 1);
+    int result = 0;
+
+    for (int i = 0; i < dimensions; i++) {
+      result += (components[dimensions - i - 1] & mask) << (bits * i);
+    }
+    return result;
+  }
+
+  /**
+   * Compose individual chain key iterations into the corresponding message
+   * iteration.
+   *
+   * @param chainIterations Individual chain key iterations
+   * @return Message iteration
+   */
+  public static int composeChainIterations(int[] chainIterations) {
+    int[] result = new int[chainIterations.length];
+    for (int i = 0; i < chainIterations.length - 1; i++) {
+      result[i] = chainIterations[i] - 1;
+    }
+    result[chainIterations.length - 1] = chainIterations[chainIterations.length - 1];
+
+    return composeIterations(result);
+  }
+
+  static int[] decomposeIteration(int iteration, int count) {
+    int dimensions = count;
+    int bits = 32 / dimensions;
+    int mask = (int)((1L << bits) - 1);
+    int[] result = new int[count];
+
+    for (int i = 0; i < dimensions; i++) {
+      result[dimensions - i - 1] = (iteration >> bits * i) & mask;
+    }
+
+    return result;
+  }
+
+  /**
+   * Decompose a message iteration into the individual chain key iterations.
+   *
+   * @param iteration The iteration to decompose
+   * @param chainCount The number of chains in the cipher
+   * @return Individual chain key iterations
+   */
+  public static int[] decomposeChainIterations(int iteration, int chainCount) {
+    int[] result = decomposeIteration(iteration, chainCount);
+    for (int i = 0; i < result.length - 1; i++) {
+      result[i]++;
+    }
+    return result;
+  }
+}
diff --git a/protobuf/FingerprintProtocol.proto b/protobuf/FingerprintProtocol.proto
index 8aeacd8..b2f1571 100644
--- a/protobuf/FingerprintProtocol.proto
+++ b/protobuf/FingerprintProtocol.proto
@@ -2,6 +2,7 @@ package textsecure;
 
 option java_package = "org.whispersystems.libsignal.fingerprint";
 option java_outer_classname = "FingerprintProtos";
+option optimize_for = LITE_RUNTIME;
 
 message FingerprintData {
   optional bytes publicKey  = 1;
diff --git a/protobuf/LocalStorageProtocol.proto b/protobuf/LocalStorageProtocol.proto
index 7de2f19..49fb7d3 100644
--- a/protobuf/LocalStorageProtocol.proto
+++ b/protobuf/LocalStorageProtocol.proto
@@ -2,6 +2,7 @@ package textsecure;
 
 option java_package = "org.whispersystems.libsignal.state";
 option java_outer_classname = "StorageProtos";
+option optimize_for = LITE_RUNTIME;
 
 message SessionStructure {
     message Chain {
@@ -109,4 +110,14 @@ message SenderKeyStateStructure {
 
 message SenderKeyRecordStructure {
     repeated SenderKeyStateStructure senderKeyStates = 1;
+}
+
+message FastRatchetSenderKeyStateStructure {
+    optional uint32                                   senderKeyId       = 1;
+    repeated SenderKeyStateStructure.SenderChainKey   senderChainKeys   = 2;
+    optional SenderKeyStateStructure.SenderSigningKey senderSigningKey  = 3;
+}
+
+message FastRatchetSenderKeyRecordStructure {
+    repeated FastRatchetSenderKeyStateStructure senderKeyStates = 1;
 }
\ No newline at end of file
diff --git a/protobuf/WhisperTextProtocol.proto b/protobuf/WhisperTextProtocol.proto
index f6a3c95..7f5ef4b 100644
--- a/protobuf/WhisperTextProtocol.proto
+++ b/protobuf/WhisperTextProtocol.proto
@@ -2,6 +2,7 @@ package textsecure;
 
 option java_package = "org.whispersystems.libsignal.protocol";
 option java_outer_classname = "SignalProtos";
+option optimize_for = LITE_RUNTIME;
 
 message SignalMessage {
   optional bytes  ratchetKey      = 1;
@@ -40,6 +41,13 @@ message SenderKeyDistributionMessage {
   optional bytes  signingKey = 4;
 }
 
+message FastRatchetSenderKeyDistributionMessage {
+  optional uint32 id         = 1;
+  optional uint32 iteration  = 2;
+  repeated bytes  chainKeys  = 3;
+  optional bytes  signingKey = 4;
+}
+
 message DeviceConsistencyCodeMessage {
   optional uint32 generation = 1;
   optional bytes  signature  = 2;
diff --git a/settings.gradle b/settings.gradle
index 7412250..964dfbc 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -1 +1 @@
-include ':java', ':android', ':tests'
+include ':java', ':android', ':tests'
\ No newline at end of file
diff --git a/tests/build.gradle b/tests/build.gradle
index 013779e..773af9a 100644
--- a/tests/build.gradle
+++ b/tests/build.gradle
@@ -6,7 +6,7 @@ repositories {
 }
 
 dependencies {
-    testCompile 'junit:junit:3.8.2'
+    testImplementation 'junit:junit:3.8.2'
 
-    compile project(':java')
-}
\ No newline at end of file
+    implementation project(':java')
+}
diff --git a/tests/src/test/java/org/whispersystems/libsignal/groups/FastRatchetGroupCipherTest.java b/tests/src/test/java/org/whispersystems/libsignal/groups/FastRatchetGroupCipherTest.java
new file mode 100644
index 0000000..76af303
--- /dev/null
+++ b/tests/src/test/java/org/whispersystems/libsignal/groups/FastRatchetGroupCipherTest.java
@@ -0,0 +1,587 @@
+package org.whispersystems.libsignal.groups;
+
+import android.test.MoreAsserts;
+
+import junit.framework.TestCase;
+
+import org.whispersystems.libsignal.DuplicateMessageException;
+import org.whispersystems.libsignal.InvalidKeyIdException;
+import org.whispersystems.libsignal.InvalidMessageException;
+import org.whispersystems.libsignal.LegacyMessageException;
+import org.whispersystems.libsignal.NoSessionException;
+import org.whispersystems.libsignal.SignalProtocolAddress;
+import org.whispersystems.libsignal.groups.ratchet.FastRatchetSenderChainKey;
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyRecord;
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyState;
+import org.whispersystems.libsignal.protocol.FastRatchetSenderKeyDistributionMessage;
+import org.whispersystems.libsignal.util.FastRatchetUtil;
+import org.whispersystems.libsignal.util.KeyHelper;
+
+import java.security.InvalidKeyException;
+import java.security.NoSuchAlgorithmException;
+import java.util.Arrays;
+
+import javax.crypto.Mac;
+import javax.crypto.spec.SecretKeySpec;
+
+public class FastRatchetGroupCipherTest extends TestCase {
+
+  private static final SignalProtocolAddress SENDER_ADDRESS = new SignalProtocolAddress("+14150001111", 1);
+  private static final SenderKeyName         GROUP_SENDER   = new SenderKeyName("nihilist history broadcast group", SENDER_ADDRESS);
+
+
+  public void testBasicEncryptDecrypt()
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException
+  {
+    InMemoryFastRatchetSenderKeyStore aliceStore = new InMemoryFastRatchetSenderKeyStore();
+    InMemoryFastRatchetSenderKeyStore bobStore   = new InMemoryFastRatchetSenderKeyStore();
+
+    FastRatchetGroupSessionBuilder aliceSessionBuilder = new FastRatchetGroupSessionBuilder(aliceStore);
+    FastRatchetGroupSessionBuilder bobSessionBuilder   = new FastRatchetGroupSessionBuilder(bobStore);
+
+    FastRatchetGroupCipher aliceGroupCipher = new FastRatchetGroupCipher(aliceStore, GROUP_SENDER);
+    FastRatchetGroupCipher bobGroupCipher   = new FastRatchetGroupCipher(bobStore, GROUP_SENDER);
+
+    FastRatchetSenderKeyDistributionMessage sentAliceDistributionMessage     = aliceSessionBuilder.create(GROUP_SENDER, 2);
+    FastRatchetSenderKeyDistributionMessage receivedAliceDistributionMessage = new FastRatchetSenderKeyDistributionMessage(sentAliceDistributionMessage.serialize());
+    bobSessionBuilder.process(GROUP_SENDER, receivedAliceDistributionMessage);
+
+    byte[] ciphertextFromAlice = aliceGroupCipher.encrypt("smert ze smert".getBytes());
+    byte[] plaintextFromAlice  = bobGroupCipher.decrypt(ciphertextFromAlice);
+
+    assertTrue(new String(plaintextFromAlice).equals("smert ze smert"));
+  }
+
+  public void testBasicRatchet()
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException
+  {
+    InMemoryFastRatchetSenderKeyStore aliceStore = new InMemoryFastRatchetSenderKeyStore();
+    InMemoryFastRatchetSenderKeyStore bobStore   = new InMemoryFastRatchetSenderKeyStore();
+
+    FastRatchetGroupSessionBuilder aliceSessionBuilder = new FastRatchetGroupSessionBuilder(aliceStore);
+    FastRatchetGroupSessionBuilder bobSessionBuilder   = new FastRatchetGroupSessionBuilder(bobStore);
+
+    SenderKeyName aliceName = GROUP_SENDER;
+
+    FastRatchetGroupCipher aliceGroupCipher = new FastRatchetGroupCipher(aliceStore, aliceName);
+    FastRatchetGroupCipher bobGroupCipher   = new FastRatchetGroupCipher(bobStore, aliceName);
+
+    FastRatchetSenderKeyDistributionMessage sentAliceDistributionMessage =
+        aliceSessionBuilder.create(aliceName, 2);
+    FastRatchetSenderKeyDistributionMessage receivedAliceDistributionMessage =
+        new FastRatchetSenderKeyDistributionMessage(sentAliceDistributionMessage.serialize());
+
+    bobSessionBuilder.process(aliceName, receivedAliceDistributionMessage);
+
+    byte[] ciphertextFromAlice  = aliceGroupCipher.encrypt("smert ze smert".getBytes());
+    byte[] ciphertextFromAlice2 = aliceGroupCipher.encrypt("smert ze smert2".getBytes());
+    byte[] ciphertextFromAlice3 = aliceGroupCipher.encrypt("smert ze smert3".getBytes());
+
+    byte[] plaintextFromAlice = bobGroupCipher.decrypt(ciphertextFromAlice);
+
+    try {
+      bobGroupCipher.decrypt(ciphertextFromAlice);
+      throw new AssertionError("Should have ratcheted forward!");
+    } catch (DuplicateMessageException dme) {
+      // good
+    }
+
+    byte[] plaintextFromAlice2 = bobGroupCipher.decrypt(ciphertextFromAlice2);
+    byte[] plaintextFromAlice3 = bobGroupCipher.decrypt(ciphertextFromAlice3);
+
+    assertTrue(new String(plaintextFromAlice).equals("smert ze smert"));
+    assertTrue(new String(plaintextFromAlice2).equals("smert ze smert2"));
+    assertTrue(new String(plaintextFromAlice3).equals("smert ze smert3"));
+  }
+
+  public void testLateJoin() throws NoSessionException, InvalidMessageException, LegacyMessageException, DuplicateMessageException {
+    InMemoryFastRatchetSenderKeyStore aliceStore = new InMemoryFastRatchetSenderKeyStore();
+    InMemoryFastRatchetSenderKeyStore bobStore   = new InMemoryFastRatchetSenderKeyStore();
+
+    FastRatchetGroupSessionBuilder aliceSessionBuilder = new FastRatchetGroupSessionBuilder(aliceStore);
+
+
+    SenderKeyName aliceName = GROUP_SENDER;
+    int           scale     = 3;
+
+    FastRatchetGroupCipher aliceGroupCipher = new FastRatchetGroupCipher(aliceStore, aliceName);
+
+    FastRatchetSenderKeyDistributionMessage aliceDistributionMessage = aliceSessionBuilder.create(aliceName, scale);
+    // Send off to some people.
+
+    for (int i = 0; i < 100; i++) {
+      aliceGroupCipher.encrypt("up the punks up the punks up the punks".getBytes());
+    }
+
+    // Now Bob Joins.
+    FastRatchetGroupSessionBuilder bobSessionBuilder = new FastRatchetGroupSessionBuilder(bobStore);
+    FastRatchetGroupCipher         bobGroupCipher    = new FastRatchetGroupCipher(bobStore, aliceName);
+
+
+    FastRatchetSenderKeyDistributionMessage distributionMessageToBob = aliceSessionBuilder.create(aliceName, scale);
+    bobSessionBuilder.process(aliceName, new FastRatchetSenderKeyDistributionMessage(distributionMessageToBob.serialize()));
+
+    byte[] ciphertext = aliceGroupCipher.encrypt("welcome to the group".getBytes());
+    byte[] plaintext  = bobGroupCipher.decrypt(ciphertext);
+
+    assertEquals(new String(plaintext), "welcome to the group");
+  }
+
+  public void testOutOfOrderUnsupported()
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException
+  {
+    InMemoryFastRatchetSenderKeyStore aliceStore = new InMemoryFastRatchetSenderKeyStore();
+    InMemoryFastRatchetSenderKeyStore bobStore   = new InMemoryFastRatchetSenderKeyStore();
+
+    FastRatchetGroupSessionBuilder aliceSessionBuilder = new FastRatchetGroupSessionBuilder(aliceStore);
+    FastRatchetGroupSessionBuilder bobSessionBuilder   = new FastRatchetGroupSessionBuilder(bobStore);
+
+    SenderKeyName aliceName = GROUP_SENDER;
+
+    FastRatchetGroupCipher aliceGroupCipher = new FastRatchetGroupCipher(aliceStore, aliceName);
+    FastRatchetGroupCipher bobGroupCipher   = new FastRatchetGroupCipher(bobStore, aliceName);
+
+    FastRatchetSenderKeyDistributionMessage aliceDistributionMessage =
+        aliceSessionBuilder.create(aliceName, 3);
+
+    bobSessionBuilder.process(aliceName, aliceDistributionMessage);
+
+    byte[] ciphertext1 = aliceGroupCipher.encrypt("up the punks1".getBytes());
+    byte[] ciphertext2 = aliceGroupCipher.encrypt("up the punks2".getBytes());
+    byte[] ciphertext3 = aliceGroupCipher.encrypt("up the punks3".getBytes());
+    byte[] ciphertext4 = aliceGroupCipher.encrypt("up the punks4".getBytes());
+
+    byte[] plaintextFromAlice2 = bobGroupCipher.decrypt(ciphertext2);
+
+    try {
+      bobGroupCipher.decrypt(ciphertext1);
+      throw new AssertionError("Should have failed!");
+    } catch (DuplicateMessageException e) {
+      // good
+    }
+
+    byte[] plaintextFromAlice4 = bobGroupCipher.decrypt(ciphertext4);
+
+    try {
+      bobGroupCipher.decrypt(ciphertext3);
+      throw new AssertionError("Should have failed!");
+    } catch (DuplicateMessageException e) {
+      // good
+    }
+
+    assertTrue(new String(plaintextFromAlice2).equals("up the punks2"));
+    assertTrue(new String(plaintextFromAlice4).equals("up the punks4"));
+
+  }
+
+  public void testEncryptWithLossyDecrypt()
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException, InvalidKeyIdException
+  {
+    runEncryptWithLossyDecrypt(0, 1, 2, 10);
+    runEncryptWithLossyDecrypt(1, 10, 20, 30);
+    runEncryptWithLossyDecrypt(2, 100, 100, 100);
+    runEncryptWithLossyDecrypt(3, 16, 48, 18);
+    runEncryptWithLossyDecrypt(4, 99, 14, 6);
+    runEncryptWithLossyDecrypt(5, 126, 1, 1);
+  }
+
+  private void runEncryptWithLossyDecrypt(int scale, int skip1, int skip2, int skip3) throws InvalidMessageException, LegacyMessageException, NoSessionException, DuplicateMessageException, InvalidKeyIdException {
+    InMemoryFastRatchetSenderKeyStore aliceStore = new InMemoryFastRatchetSenderKeyStore();
+    InMemoryFastRatchetSenderKeyStore bobStore   = new InMemoryFastRatchetSenderKeyStore();
+
+    FastRatchetGroupSessionBuilder aliceSessionBuilder = new FastRatchetGroupSessionBuilder(aliceStore);
+    FastRatchetGroupSessionBuilder bobSessionBuilder   = new FastRatchetGroupSessionBuilder(bobStore);
+
+    FastRatchetGroupCipher aliceGroupCipher = new FastRatchetGroupCipher(aliceStore, GROUP_SENDER);
+    FastRatchetGroupCipher bobGroupCipher   = new FastRatchetGroupCipher(bobStore, GROUP_SENDER);
+
+    FastRatchetSenderKeyDistributionMessage sentAliceDistributionMessage     = aliceSessionBuilder.create(GROUP_SENDER, scale);
+    FastRatchetSenderKeyDistributionMessage receivedAliceDistributionMessage = new FastRatchetSenderKeyDistributionMessage(sentAliceDistributionMessage.serialize());
+    bobSessionBuilder.process(GROUP_SENDER, receivedAliceDistributionMessage);
+
+    int expectedIteration = 0;
+
+    // Encrypt a series of messages, only retaining a few of them
+    for (int i = 0; i < skip1; i++) {
+      aliceGroupCipher.encrypt("missed smert ze smert".getBytes());
+    }
+
+    byte[] ciphertextFromAlice = aliceGroupCipher.encrypt("smert ze smert".getBytes());
+    expectedIteration += skip1 + 1;
+
+    for (int i = 0; i < skip2; i++) {
+      aliceGroupCipher.encrypt("missed smert ze smert".getBytes());
+    }
+
+    byte[] ciphertextFromAlice2 = aliceGroupCipher.encrypt("smert ze smert2".getBytes());
+    expectedIteration += skip2 + 1;
+
+    for (int i = 0; i < skip3; i++) {
+      aliceGroupCipher.encrypt("missed smert ze smert".getBytes());
+    }
+
+    byte[] ciphertextFromAlice3 = aliceGroupCipher.encrypt("smert ze smert3".getBytes());
+    expectedIteration += skip3 + 1;
+
+    // Verify that the sender is on the expected iteration
+    FastRatchetSenderKeyRecord aliceRecord = aliceStore.loadFastRatchetSenderKey(GROUP_SENDER);
+    FastRatchetSenderKeyState  aliceState  = aliceRecord.getSenderKeyState();
+    assertEquals(expectedIteration, aliceState.getSenderChainKey().getIteration());
+
+    // Decrypt the few messages we retained
+    byte[] plaintextFromAlice  = bobGroupCipher.decrypt(ciphertextFromAlice);
+    byte[] plaintextFromAlice2 = bobGroupCipher.decrypt(ciphertextFromAlice2);
+    byte[] plaintextFromAlice3 = bobGroupCipher.decrypt(ciphertextFromAlice3);
+
+    assertTrue(new String(plaintextFromAlice).equals("smert ze smert"));
+    assertTrue(new String(plaintextFromAlice2).equals("smert ze smert2"));
+    assertTrue(new String(plaintextFromAlice3).equals("smert ze smert3"));
+
+    // Verify that receiver is also on the expected iteration
+    FastRatchetSenderKeyRecord bobRecord = bobStore.loadFastRatchetSenderKey(GROUP_SENDER);
+    FastRatchetSenderKeyState  bobState  = bobRecord.getSenderKeyState();
+    assertEquals(expectedIteration, bobState.getSenderChainKey().getIteration());
+  }
+
+  public void testInitialSingleChainState() {
+    byte[]                    initialSeed = KeyHelper.generateSenderKey();
+    FastRatchetSenderChainKey chainKey    = new FastRatchetSenderChainKey(initialSeed, 0);
+
+    assertEquals(0, chainKey.getIteration());
+
+    byte[][] seeds = chainKey.getSeeds();
+    assertEquals(1, seeds.length);
+    assertTrue(Arrays.equals(initialSeed, seeds[0]));
+  }
+
+  public void testInitialMultiChainState() {
+    byte[] initialSeed = KeyHelper.generateSenderKey();
+
+    for (int i = 1; i <= 5; i++) {
+      FastRatchetSenderChainKey chainKey       = new FastRatchetSenderChainKey(initialSeed, i);
+      int                       expectedChains = FastRatchetUtil.scaleToDimensions(i);
+
+      assertEquals(0, chainKey.getIteration());
+
+      byte[][] chainSeeds = chainKey.getDerivedSeeds();
+
+      assertEquals(expectedChains, chainSeeds.length);
+
+      for (int j = 0; j < expectedChains; j++) {
+        assertFalse(Arrays.equals(initialSeed, chainSeeds[j]));
+      }
+    }
+  }
+
+  public void testInitialChainState() {
+    byte[] initialSeed = KeyHelper.generateSenderKey();
+
+    // Create the expected chains
+    byte[] CK1 = initialSeed;
+    byte[] CK2;
+    byte[] CK3;
+    byte[] CK4;
+
+    CK2 = HmacSHA256(new byte[] {0x03}, CK1);
+    CK1 = HmacSHA256(new byte[] {0x02}, CK1);
+
+    CK3 = HmacSHA256(new byte[] {0x04}, CK2);
+    CK2 = HmacSHA256(new byte[] {0x03}, CK2);
+
+    CK4 = HmacSHA256(new byte[] {0x05}, CK3);
+    CK3 = HmacSHA256(new byte[] {0x04}, CK3);
+
+    // Compute and verify the actual chains
+    FastRatchetSenderChainKey chainKey = new FastRatchetSenderChainKey(initialSeed, 2);
+
+    assertEquals(0, chainKey.getIteration());
+
+    byte[][] seeds = chainKey.getDerivedSeeds();
+    assertEquals(4, seeds.length);
+    MoreAsserts.assertEquals(CK1, seeds[0]);
+    MoreAsserts.assertEquals(CK2, seeds[1]);
+    MoreAsserts.assertEquals(CK3, seeds[2]);
+    MoreAsserts.assertEquals(CK4, seeds[3]);
+  }
+
+  public void testIntermediateRatchet() {
+    byte[] CK1 = KeyHelper.generateSenderKey();
+    byte[] CK2 = KeyHelper.generateSenderKey();
+    byte[] CK3 = KeyHelper.generateSenderKey();
+    byte[] CK4 = KeyHelper.generateSenderKey();
+
+    int initialIteration = 356;
+    int finalIteration   = 66306;
+
+    FastRatchetSenderChainKey chainKey = new FastRatchetSenderChainKey(
+        initialIteration, new byte[][] {CK1, CK2, CK3, CK4});
+
+    // Create the expected chain operation results
+    // New CK3 from CK2
+    CK3 = HmacSHA256(new byte[] {0x04}, CK2);
+
+    // Ratchet CK2
+    CK2 = HmacSHA256(new byte[] {0x03}, CK2);
+
+    // Ratchet CK3
+    CK3 = HmacSHA256(new byte[] {0x04}, CK3);
+    CK3 = HmacSHA256(new byte[] {0x04}, CK3);
+    CK3 = HmacSHA256(new byte[] {0x04}, CK3);
+
+    // New CK4 from CK3
+    CK4 = HmacSHA256(new byte[] {0x05}, CK3);
+
+    // Ratchet CK3 one last time
+    CK3 = HmacSHA256(new byte[] {0x04}, CK3);
+
+    // Ratchet CK4
+    CK4 = HmacSHA256(new byte[] {0x05}, CK4);
+    CK4 = HmacSHA256(new byte[] {0x05}, CK4);
+
+    // Compare to the actual results
+    FastRatchetSenderChainKey finalKey = chainKey.getNext(finalIteration - initialIteration);
+
+    assertEquals(finalIteration, finalKey.getIteration());
+
+    byte[][] seeds = finalKey.getSeeds();
+    assertEquals(4, seeds.length);
+    MoreAsserts.assertEquals(CK1, seeds[0]);
+    MoreAsserts.assertEquals(CK2, seeds[1]);
+    MoreAsserts.assertEquals(CK3, seeds[2]);
+    MoreAsserts.assertEquals(CK4, seeds[3]);
+  }
+
+  public void testLargeScaleRatchet() {
+    byte[] CK1  = KeyHelper.generateSenderKey();
+    byte[] CK2  = KeyHelper.generateSenderKey();
+    byte[] CK3  = KeyHelper.generateSenderKey();
+    byte[] CK4  = KeyHelper.generateSenderKey();
+    byte[] CK5  = KeyHelper.generateSenderKey();
+    byte[] CK6  = KeyHelper.generateSenderKey();
+    byte[] CK7  = KeyHelper.generateSenderKey();
+    byte[] CK8  = KeyHelper.generateSenderKey();
+    byte[] CK9  = KeyHelper.generateSenderKey();
+    byte[] CK10 = KeyHelper.generateSenderKey();
+    byte[] CK11 = KeyHelper.generateSenderKey();
+    byte[] CK12 = KeyHelper.generateSenderKey();
+    byte[] CK13 = KeyHelper.generateSenderKey();
+    byte[] CK14 = KeyHelper.generateSenderKey();
+    byte[] CK15 = KeyHelper.generateSenderKey();
+    byte[] CK16 = KeyHelper.generateSenderKey();
+
+    int initialIteration = 0;
+    int finalIteration   = 85;
+
+    FastRatchetSenderChainKey chainKey = new FastRatchetSenderChainKey(
+        initialIteration, new byte[][] {
+        CK1, CK2, CK3, CK4, CK5, CK6, CK7, CK8,
+        CK9, CK10, CK11, CK12, CK13, CK14, CK15, CK16});
+
+    // Create the expected chain operation results
+    // CK:    1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16
+    // From: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
+    // To:   [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1]
+
+    // New CK14 from CK13
+    CK14 = HmacSHA256(new byte[] {0x0F}, CK13);
+
+    // Ratchet CK13
+    CK13 = HmacSHA256(new byte[] {0x0E}, CK13);
+
+    // Ratchet CK14
+    CK14 = HmacSHA256(new byte[] {0x0F}, CK14);
+
+    // New CK15 from CK14
+    CK15 = HmacSHA256(new byte[] {0x10}, CK14);
+
+    // Ratchet CK14 one last time
+    CK14 = HmacSHA256(new byte[] {0x0F}, CK14);
+
+    // Ratchet CK15
+    CK15 = HmacSHA256(new byte[] {0x10}, CK15);
+
+    // New CK16 from CK15
+    CK16 = HmacSHA256(new byte[] {0x11}, CK15);
+
+    // Ratchet CK15 one last time
+    CK15 = HmacSHA256(new byte[] {0x10}, CK15);
+
+    // Ratchet CK16
+    CK16 = HmacSHA256(new byte[] {0x11}, CK16);
+
+    // Compare to the actual results
+    FastRatchetSenderChainKey finalKey = chainKey.getNext(finalIteration - initialIteration);
+
+    assertEquals(finalIteration, finalKey.getIteration());
+
+    byte[][] seeds = finalKey.getSeeds();
+    assertEquals(16, seeds.length);
+    MoreAsserts.assertEquals(CK1, seeds[0]);
+    MoreAsserts.assertEquals(CK2, seeds[1]);
+    MoreAsserts.assertEquals(CK3, seeds[2]);
+    MoreAsserts.assertEquals(CK4, seeds[3]);
+    MoreAsserts.assertEquals(CK5, seeds[4]);
+    MoreAsserts.assertEquals(CK6, seeds[5]);
+    MoreAsserts.assertEquals(CK7, seeds[6]);
+    MoreAsserts.assertEquals(CK8, seeds[7]);
+    MoreAsserts.assertEquals(CK9, seeds[8]);
+    MoreAsserts.assertEquals(CK10, seeds[9]);
+    MoreAsserts.assertEquals(CK11, seeds[10]);
+    MoreAsserts.assertEquals(CK12, seeds[11]);
+    MoreAsserts.assertEquals(CK13, seeds[12]);
+    MoreAsserts.assertEquals(CK14, seeds[13]);
+    MoreAsserts.assertEquals(CK15, seeds[14]);
+    MoreAsserts.assertEquals(CK16, seeds[15]);
+  }
+
+  public void testLargeScaleRatchetWithRollover() {
+    byte[] CK1  = KeyHelper.generateSenderKey();
+    byte[] CK2  = KeyHelper.generateSenderKey();
+    byte[] CK3  = KeyHelper.generateSenderKey();
+    byte[] CK4  = KeyHelper.generateSenderKey();
+    byte[] CK5  = KeyHelper.generateSenderKey();
+    byte[] CK6  = KeyHelper.generateSenderKey();
+    byte[] CK7  = KeyHelper.generateSenderKey();
+    byte[] CK8  = KeyHelper.generateSenderKey();
+    byte[] CK9  = KeyHelper.generateSenderKey();
+    byte[] CK10 = KeyHelper.generateSenderKey();
+    byte[] CK11 = KeyHelper.generateSenderKey();
+    byte[] CK12 = KeyHelper.generateSenderKey();
+    byte[] CK13 = KeyHelper.generateSenderKey();
+    byte[] CK14 = KeyHelper.generateSenderKey();
+    byte[] CK15 = KeyHelper.generateSenderKey();
+    byte[] CK16 = KeyHelper.generateSenderKey();
+
+    int initialIteration = 0;
+    int finalIteration   = 174;
+
+    FastRatchetSenderChainKey chainKey = new FastRatchetSenderChainKey(
+        initialIteration, new byte[][] {
+        CK1, CK2, CK3, CK4, CK5, CK6, CK7, CK8,
+        CK9, CK10, CK11, CK12, CK13, CK14, CK15, CK16});
+
+    // Create the expected chain operation results
+    // CK:    1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16
+    // From: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]
+    // To:   [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 4, 2]
+
+    // Ratchet CK13
+    CK13 = HmacSHA256(new byte[] {0x0E}, CK13);
+
+    // New CK14 from CK13
+    CK14 = HmacSHA256(new byte[] {0x0F}, CK13);
+
+    // Ratchet CK13
+    CK13 = HmacSHA256(new byte[] {0x0E}, CK13);
+
+    // Ratchet CK14 twice
+    CK14 = HmacSHA256(new byte[] {0x0F}, CK14);
+    CK14 = HmacSHA256(new byte[] {0x0F}, CK14);
+
+    // New CK15 from CK14
+    CK15 = HmacSHA256(new byte[] {0x10}, CK14);
+
+    // Ratchet CK14
+    CK14 = HmacSHA256(new byte[] {0x0F}, CK14);
+
+    // Ratchet CK15 three times
+    CK15 = HmacSHA256(new byte[] {0x10}, CK15);
+    CK15 = HmacSHA256(new byte[] {0x10}, CK15);
+    CK15 = HmacSHA256(new byte[] {0x10}, CK15);
+
+    // New CK16 from CK15
+    CK16 = HmacSHA256(new byte[] {0x11}, CK15);
+
+    // Ratchet CK15
+    CK15 = HmacSHA256(new byte[] {0x10}, CK15);
+
+    // Ratchet CK16 twice
+    CK16 = HmacSHA256(new byte[] {0x11}, CK16);
+    CK16 = HmacSHA256(new byte[] {0x11}, CK16);
+
+    // Compare to the actual results
+    FastRatchetSenderChainKey finalKey = chainKey.getNext(finalIteration - initialIteration);
+
+    assertEquals(finalIteration, finalKey.getIteration());
+
+    byte[][] seeds = finalKey.getSeeds();
+    assertEquals(16, seeds.length);
+    MoreAsserts.assertEquals(CK1, seeds[0]);
+    MoreAsserts.assertEquals(CK2, seeds[1]);
+    MoreAsserts.assertEquals(CK3, seeds[2]);
+    MoreAsserts.assertEquals(CK4, seeds[3]);
+    MoreAsserts.assertEquals(CK5, seeds[4]);
+    MoreAsserts.assertEquals(CK6, seeds[5]);
+    MoreAsserts.assertEquals(CK7, seeds[6]);
+    MoreAsserts.assertEquals(CK8, seeds[7]);
+    MoreAsserts.assertEquals(CK9, seeds[8]);
+    MoreAsserts.assertEquals(CK10, seeds[9]);
+    MoreAsserts.assertEquals(CK11, seeds[10]);
+    MoreAsserts.assertEquals(CK12, seeds[11]);
+    MoreAsserts.assertEquals(CK13, seeds[12]);
+    MoreAsserts.assertEquals(CK14, seeds[13]);
+    MoreAsserts.assertEquals(CK15, seeds[14]);
+    MoreAsserts.assertEquals(CK16, seeds[15]);
+  }
+
+  public void testDistributionMessageSizes()
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException
+  {
+    InMemoryFastRatchetSenderKeyStore aliceStore = new InMemoryFastRatchetSenderKeyStore();
+    FastRatchetGroupSessionBuilder aliceSessionBuilder = new FastRatchetGroupSessionBuilder(aliceStore);
+    FastRatchetGroupCipher aliceGroupCipher = new FastRatchetGroupCipher(aliceStore, GROUP_SENDER);
+
+    FastRatchetSenderKeyDistributionMessage distributionMessage = aliceSessionBuilder.create(GROUP_SENDER, 2);
+    byte[] distribution0 = distributionMessage.serialize();
+
+    aliceGroupCipher.encrypt("smert ze smert".getBytes());
+
+    distributionMessage = aliceSessionBuilder.create(GROUP_SENDER, 2);
+
+    byte[] distribution1 = distributionMessage.serialize();
+
+    aliceGroupCipher.encrypt("smert ze smert".getBytes());
+
+    distributionMessage = aliceSessionBuilder.create(GROUP_SENDER, 2);
+
+    byte[] distribution2 = distributionMessage.serialize();
+
+    assertTrue(distribution0.length < distribution1.length);
+    assertEquals(distribution1.length, distribution2.length);
+  }
+
+  public void testDistributionMessageScaleChange()
+  {
+    InMemoryFastRatchetSenderKeyStore aliceStore = new InMemoryFastRatchetSenderKeyStore();
+    FastRatchetGroupSessionBuilder aliceSessionBuilder = new FastRatchetGroupSessionBuilder(aliceStore);
+
+    FastRatchetSenderKeyDistributionMessage distributionMessage = aliceSessionBuilder.create(GROUP_SENDER, 2);
+    byte[] distribution0 = distributionMessage.serialize();
+    distributionMessage = aliceSessionBuilder.create(GROUP_SENDER, 2);
+    byte[] distribution1 = distributionMessage.serialize();
+
+    distributionMessage = aliceSessionBuilder.create(GROUP_SENDER, 3);
+    byte[] distribution2 = distributionMessage.serialize();
+    distributionMessage = aliceSessionBuilder.create(GROUP_SENDER, 3);
+    byte[] distribution3 = distributionMessage.serialize();
+
+    MoreAsserts.assertEquals(distribution0, distribution1);
+
+    assertFalse(Arrays.equals(distribution1, distribution2));
+    assertTrue(distribution1.length < distribution2.length);
+
+    MoreAsserts.assertEquals(distribution2, distribution3);
+  }
+
+  private static byte[] HmacSHA256(byte[] seed, byte[] key) {
+    try {
+      Mac mac = Mac.getInstance("HmacSHA256");
+      mac.init(new SecretKeySpec(key, "HmacSHA256"));
+
+      return mac.doFinal(seed);
+    } catch (NoSuchAlgorithmException | InvalidKeyException e) {
+      throw new AssertionError(e);
+    }
+  }
+
+}
diff --git a/tests/src/test/java/org/whispersystems/libsignal/groups/GroupCipherTest.java b/tests/src/test/java/org/whispersystems/libsignal/groups/GroupCipherTest.java
index 41082cd..f96443a 100644
--- a/tests/src/test/java/org/whispersystems/libsignal/groups/GroupCipherTest.java
+++ b/tests/src/test/java/org/whispersystems/libsignal/groups/GroupCipherTest.java
@@ -2,6 +2,7 @@ package org.whispersystems.libsignal.groups;
 
 import junit.framework.TestCase;
 
+import org.whispersystems.libsignal.InvalidKeyException;
 import org.whispersystems.libsignal.SignalProtocolAddress;
 import org.whispersystems.libsignal.DuplicateMessageException;
 import org.whispersystems.libsignal.InvalidMessageException;
@@ -22,7 +23,7 @@ public class GroupCipherTest extends TestCase {
   private static final SignalProtocolAddress SENDER_ADDRESS = new SignalProtocolAddress("+14150001111", 1);
   private static final SenderKeyName  GROUP_SENDER   = new SenderKeyName("nihilist history reading group", SENDER_ADDRESS);
 
-  public void testNoSession() throws InvalidMessageException, LegacyMessageException, NoSessionException, DuplicateMessageException {
+  public void testNoSession() throws InvalidMessageException, LegacyMessageException, NoSessionException, DuplicateMessageException, InvalidKeyException {
     InMemorySenderKeyStore aliceStore = new InMemorySenderKeyStore();
     InMemorySenderKeyStore bobStore   = new InMemorySenderKeyStore();
 
@@ -47,7 +48,7 @@ public class GroupCipherTest extends TestCase {
   }
 
   public void testBasicEncryptDecrypt()
-      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException, InvalidKeyException
   {
     InMemorySenderKeyStore aliceStore = new InMemorySenderKeyStore();
     InMemorySenderKeyStore bobStore   = new InMemorySenderKeyStore();
@@ -68,7 +69,7 @@ public class GroupCipherTest extends TestCase {
     assertTrue(new String(plaintextFromAlice).equals("smert ze smert"));
   }
 
-  public void testLargeMessages() throws InvalidMessageException, LegacyMessageException, NoSessionException, DuplicateMessageException {
+  public void testLargeMessages() throws InvalidMessageException, LegacyMessageException, NoSessionException, DuplicateMessageException, InvalidKeyException {
     InMemorySenderKeyStore aliceStore = new InMemorySenderKeyStore();
     InMemorySenderKeyStore bobStore   = new InMemorySenderKeyStore();
 
@@ -92,7 +93,7 @@ public class GroupCipherTest extends TestCase {
   }
 
   public void testBasicRatchet()
-      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException, InvalidKeyException
   {
     InMemorySenderKeyStore aliceStore = new InMemorySenderKeyStore();
     InMemorySenderKeyStore bobStore   = new InMemorySenderKeyStore();
@@ -133,7 +134,7 @@ public class GroupCipherTest extends TestCase {
     assertTrue(new String(plaintextFromAlice3).equals("smert ze smert3"));
   }
 
-  public void testLateJoin() throws NoSessionException, InvalidMessageException, LegacyMessageException, DuplicateMessageException {
+  public void testLateJoin() throws NoSessionException, InvalidMessageException, LegacyMessageException, DuplicateMessageException, InvalidKeyException {
     InMemorySenderKeyStore aliceStore = new InMemorySenderKeyStore();
     InMemorySenderKeyStore bobStore   = new InMemorySenderKeyStore();
 
@@ -168,7 +169,7 @@ public class GroupCipherTest extends TestCase {
 
 
   public void testOutOfOrder()
-      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException, InvalidKeyException
   {
     InMemorySenderKeyStore aliceStore = new InMemorySenderKeyStore();
     InMemorySenderKeyStore bobStore   = new InMemorySenderKeyStore();
@@ -201,7 +202,7 @@ public class GroupCipherTest extends TestCase {
     }
   }
 
-  public void testEncryptNoSession() {
+  public void testEncryptNoSession() throws InvalidKeyException {
     InMemorySenderKeyStore aliceStore = new InMemorySenderKeyStore();
     GroupCipher aliceGroupCipher = new GroupCipher(aliceStore, new SenderKeyName("coolio groupio", new SignalProtocolAddress("+10002223333", 1)));
     try {
@@ -213,7 +214,7 @@ public class GroupCipherTest extends TestCase {
   }
 
 
-  public void testTooFarInFuture() throws DuplicateMessageException, InvalidMessageException, LegacyMessageException, NoSessionException {
+  public void testTooFarInFuture() throws DuplicateMessageException, InvalidMessageException, LegacyMessageException, NoSessionException, InvalidKeyException {
     InMemorySenderKeyStore aliceStore = new InMemorySenderKeyStore();
     InMemorySenderKeyStore bobStore   = new InMemorySenderKeyStore();
 
@@ -275,6 +276,27 @@ public class GroupCipherTest extends TestCase {
     }
   }
 
+  public void testInvalidSignatureKey()
+      throws LegacyMessageException, DuplicateMessageException, InvalidMessageException, NoSessionException
+  {
+    InMemorySenderKeyStore aliceStore = new InMemorySenderKeyStore();
+    InMemorySenderKeyStore bobStore   = new InMemorySenderKeyStore();
+
+    GroupSessionBuilder aliceSessionBuilder = new GroupSessionBuilder(aliceStore);
+    GroupSessionBuilder bobSessionBuilder   = new GroupSessionBuilder(bobStore);
+
+    GroupCipher bobGroupCipher   = new GroupCipher(bobStore, GROUP_SENDER);
+
+    SenderKeyDistributionMessage sentAliceDistributionMessage     = aliceSessionBuilder.create(GROUP_SENDER);
+    SenderKeyDistributionMessage receivedAliceDistributionMessage = new SenderKeyDistributionMessage(sentAliceDistributionMessage.serialize());
+    bobSessionBuilder.process(GROUP_SENDER, receivedAliceDistributionMessage);
+
+    try {
+      bobGroupCipher.encrypt("smert ze smert".getBytes());
+    } catch (InvalidKeyException e) {
+      // good
+    }
+  }
 
   private int randomInt() {
     try {
diff --git a/tests/src/test/java/org/whispersystems/libsignal/groups/InMemoryFastRatchetSenderKeyStore.java b/tests/src/test/java/org/whispersystems/libsignal/groups/InMemoryFastRatchetSenderKeyStore.java
new file mode 100644
index 0000000..642ba02
--- /dev/null
+++ b/tests/src/test/java/org/whispersystems/libsignal/groups/InMemoryFastRatchetSenderKeyStore.java
@@ -0,0 +1,33 @@
+package org.whispersystems.libsignal.groups;
+
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyRecord;
+import org.whispersystems.libsignal.groups.state.FastRatchetSenderKeyStore;
+
+import java.io.IOException;
+import java.util.HashMap;
+import java.util.Map;
+
+public class InMemoryFastRatchetSenderKeyStore implements FastRatchetSenderKeyStore {
+
+  private final Map<SenderKeyName, FastRatchetSenderKeyRecord> store = new HashMap<>();
+
+  @Override
+  public void storeFastRatchetSenderKey(SenderKeyName senderKeyName, FastRatchetSenderKeyRecord record) {
+    store.put(senderKeyName, record);
+  }
+
+  @Override
+  public FastRatchetSenderKeyRecord loadFastRatchetSenderKey(SenderKeyName senderKeyName) {
+    try {
+      FastRatchetSenderKeyRecord record = store.get(senderKeyName);
+
+      if (record == null) {
+        return new FastRatchetSenderKeyRecord();
+      } else {
+        return new FastRatchetSenderKeyRecord(record.serialize());
+      }
+    } catch (IOException e) {
+      throw new AssertionError(e);
+    }
+  }
+}
diff --git a/tests/src/test/java/org/whispersystems/libsignal/util/FastRatchetUtilTest.java b/tests/src/test/java/org/whispersystems/libsignal/util/FastRatchetUtilTest.java
new file mode 100644
index 0000000..6ec4fd7
--- /dev/null
+++ b/tests/src/test/java/org/whispersystems/libsignal/util/FastRatchetUtilTest.java
@@ -0,0 +1,60 @@
+package org.whispersystems.libsignal.util;
+
+import android.test.MoreAsserts;
+
+import junit.framework.TestCase;
+
+public class FastRatchetUtilTest extends TestCase {
+
+  public void testComposeIterationScale0() {
+    assertEquals(0, FastRatchetUtil.composeIterations(new int[] {0x00}));
+    assertEquals(1, FastRatchetUtil.composeIterations(new int[] {0x01}));
+  }
+
+  public void testComposeIterationScale4() {
+    assertEquals(4, FastRatchetUtil.composeIterations(new int[] {0x00, 0x00, 0x00, 0x04}));
+    assertEquals(772, FastRatchetUtil.composeIterations(new int[] {0x00, 0x00, 0x03, 0x04}));
+    assertEquals(131844, FastRatchetUtil.composeIterations(new int[] {0x00, 0x02, 0x03, 0x04}));
+    assertEquals(16909060, FastRatchetUtil.composeIterations(new int[] {0x01, 0x02, 0x03, 0x04}));
+    assertEquals(65280, FastRatchetUtil.composeIterations(new int[] {0x00, 0x00, 0xFF, 0x00}));
+  }
+
+  public void testDecomposeIterationScale0() {
+    MoreAsserts.assertEquals(new int[] {0x00}, FastRatchetUtil.decomposeIteration(0, 1));
+    MoreAsserts.assertEquals(new int[] {0x01}, FastRatchetUtil.decomposeIteration(1, 1));
+  }
+
+  public void testDecomposeIterationScale4() {
+    MoreAsserts.assertEquals(new int[] {0x00, 0x00, 0x00, 0x04}, FastRatchetUtil.decomposeIteration(4, 4));
+    MoreAsserts.assertEquals(new int[] {0x00, 0x00, 0x03, 0x04}, FastRatchetUtil.decomposeIteration(772, 4));
+    MoreAsserts.assertEquals(new int[] {0x00, 0x02, 0x03, 0x04}, FastRatchetUtil.decomposeIteration(131844, 4));
+    MoreAsserts.assertEquals(new int[] {0x01, 0x02, 0x03, 0x04}, FastRatchetUtil.decomposeIteration(16909060, 4));
+    MoreAsserts.assertEquals(new int[] {0x00, 0x00, 0xFF, 0x00}, FastRatchetUtil.decomposeIteration(65280, 4));
+  }
+
+  public void testComposeChainIterationsScale0() {
+    assertEquals(0, FastRatchetUtil.composeChainIterations(new int[] {0x00}));
+    assertEquals(1, FastRatchetUtil.composeChainIterations(new int[] {0x01}));
+  }
+
+  public void testComposeChainIterationsScale4() {
+    assertEquals(4, FastRatchetUtil.composeChainIterations(new int[] {0x01, 0x01, 0x01, 0x04}));
+    assertEquals(772, FastRatchetUtil.composeChainIterations(new int[] {0x01, 0x01, 0x04, 0x04}));
+    assertEquals(131844, FastRatchetUtil.composeChainIterations(new int[] {0x01, 0x03, 0x04, 0x04}));
+    assertEquals(16909060, FastRatchetUtil.composeChainIterations(new int[] {0x02, 0x03, 0x04, 0x04}));
+    assertEquals(65280, FastRatchetUtil.composeChainIterations(new int[] {0x01, 0x01, 0x100, 0x00}));
+  }
+
+  public void testDecomposeChainIterationsScale0() {
+    MoreAsserts.assertEquals(new int[] {0x00}, FastRatchetUtil.decomposeChainIterations(0, 1));
+    MoreAsserts.assertEquals(new int[] {0x01}, FastRatchetUtil.decomposeChainIterations(1, 1));
+  }
+
+  public void testDecomposeChainIterationsScale4() {
+    MoreAsserts.assertEquals(new int[] {0x01, 0x01, 0x01, 0x04}, FastRatchetUtil.decomposeChainIterations(4, 4));
+    MoreAsserts.assertEquals(new int[] {0x01, 0x01, 0x04, 0x04}, FastRatchetUtil.decomposeChainIterations(772, 4));
+    MoreAsserts.assertEquals(new int[] {0x01, 0x03, 0x04, 0x04}, FastRatchetUtil.decomposeChainIterations(131844, 4));
+    MoreAsserts.assertEquals(new int[] {0x02, 0x03, 0x04, 0x04}, FastRatchetUtil.decomposeChainIterations(16909060, 4));
+    MoreAsserts.assertEquals(new int[] {0x01, 0x01, 0x100, 0x00}, FastRatchetUtil.decomposeChainIterations(65280, 4));
+  }
+}
-- 
2.13.5

